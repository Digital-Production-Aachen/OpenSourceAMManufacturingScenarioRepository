// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: open_vector_format.proto

package open_vector_format;

public final class OpenVectorFormat {
  private OpenVectorFormat() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface JobOrBuilder extends
      // @@protoc_insertion_point(interface_extends:open_vector_format.Job)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
     */
    java.util.List<open_vector_format.OpenVectorFormat.WorkPlane> 
        getWorkPlanesList();
    /**
     * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
     */
    open_vector_format.OpenVectorFormat.WorkPlane getWorkPlanes(int index);
    /**
     * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
     */
    int getWorkPlanesCount();
    /**
     * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
     */
    java.util.List<? extends open_vector_format.OpenVectorFormat.WorkPlaneOrBuilder> 
        getWorkPlanesOrBuilderList();
    /**
     * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
     */
    open_vector_format.OpenVectorFormat.WorkPlaneOrBuilder getWorkPlanesOrBuilder(
        int index);

    /**
     * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
     * @return Whether the jobMetaData field is set.
     */
    boolean hasJobMetaData();
    /**
     * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
     * @return The jobMetaData.
     */
    open_vector_format.OpenVectorFormat.Job.JobMetaData getJobMetaData();
    /**
     * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
     */
    open_vector_format.OpenVectorFormat.Job.JobMetaDataOrBuilder getJobMetaDataOrBuilder();

    /**
     * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
     */
    int getMarkingParamsMapCount();
    /**
     * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
     */
    boolean containsMarkingParamsMap(
        int key);
    /**
     * Use {@link #getMarkingParamsMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams>
    getMarkingParamsMap();
    /**
     * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
     */
    java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams>
    getMarkingParamsMapMap();
    /**
     * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
     */
    /* nullable */
open_vector_format.OpenVectorFormat.MarkingParams getMarkingParamsMapOrDefault(
        int key,
        /* nullable */
open_vector_format.OpenVectorFormat.MarkingParams defaultValue);
    /**
     * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
     */
    open_vector_format.OpenVectorFormat.MarkingParams getMarkingParamsMapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
     */
    int getPartsMapCount();
    /**
     * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
     */
    boolean containsPartsMap(
        int key);
    /**
     * Use {@link #getPartsMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.Part>
    getPartsMap();
    /**
     * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
     */
    java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.Part>
    getPartsMapMap();
    /**
     * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
     */
    /* nullable */
open_vector_format.OpenVectorFormat.Part getPartsMapOrDefault(
        int key,
        /* nullable */
open_vector_format.OpenVectorFormat.Part defaultValue);
    /**
     * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
     */
    open_vector_format.OpenVectorFormat.Part getPartsMapOrThrow(
        int key);

    /**
     * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
     * @return Whether the jobParameters field is set.
     */
    boolean hasJobParameters();
    /**
     * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
     * @return The jobParameters.
     */
    open_vector_format.OpenVectorFormat.JobParameters getJobParameters();
    /**
     * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
     */
    open_vector_format.OpenVectorFormat.JobParametersOrBuilder getJobParametersOrBuilder();

    /**
     * <pre>
     *Number of Layer (LPBF) /3DPatches (Structuring)
     * </pre>
     *
     * <code>int32 num_work_planes = 6;</code>
     * @return The numWorkPlanes.
     */
    int getNumWorkPlanes();
  }
  /**
   * <pre>
   *Represents one single production job. May be used as a central (very) large object containing
   *all information, or as a "shell" with no or incomplete WorkPlane information to break down object size.
   * </pre>
   *
   * Protobuf type {@code open_vector_format.Job}
   */
  public static final class Job extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:open_vector_format.Job)
      JobOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Job.newBuilder() to construct.
    private Job(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Job() {
      workPlanes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Job();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Job_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetMarkingParamsMap();
        case 4:
          return internalGetPartsMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Job_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              open_vector_format.OpenVectorFormat.Job.class, open_vector_format.OpenVectorFormat.Job.Builder.class);
    }

    public interface JobMetaDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.Job.JobMetaData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *jobCreationTime in UNIX time (number of seconds since January 1, 1970 12:00am UTC)
       * </pre>
       *
       * <code>int64 job_creation_time = 1;</code>
       * @return The jobCreationTime.
       */
      long getJobCreationTime();

      /**
       * <code>uint64 version = 2;</code>
       * @return The version.
       */
      long getVersion();

      /**
       * <code>string job_name = 3;</code>
       * @return The jobName.
       */
      java.lang.String getJobName();
      /**
       * <code>string job_name = 3;</code>
       * @return The bytes for jobName.
       */
      com.google.protobuf.ByteString
          getJobNameBytes();

      /**
       * <code>string author = 4;</code>
       * @return The author.
       */
      java.lang.String getAuthor();
      /**
       * <code>string author = 4;</code>
       * @return The bytes for author.
       */
      com.google.protobuf.ByteString
          getAuthorBytes();

      /**
       * <code>string description = 5;</code>
       * @return The description.
       */
      java.lang.String getDescription();
      /**
       * <code>string description = 5;</code>
       * @return The bytes for description.
       */
      com.google.protobuf.ByteString
          getDescriptionBytes();

      /**
       * <pre>
       *2D axis aligned bounding box of all workplanes vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
       * @return Whether the bounds field is set.
       */
      boolean hasBounds();
      /**
       * <pre>
       *2D axis aligned bounding box of all workplanes vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
       * @return The bounds.
       */
      open_vector_format.OpenVectorFormat.AxisAlignedBox2D getBounds();
      /**
       * <pre>
       *2D axis aligned bounding box of all workplanes vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
       */
      open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder getBoundsOrBuilder();
    }
    /**
     * <pre>
     *Metadata: Represents metadata related to the job object itself
     * </pre>
     *
     * Protobuf type {@code open_vector_format.Job.JobMetaData}
     */
    public static final class JobMetaData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.Job.JobMetaData)
        JobMetaDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use JobMetaData.newBuilder() to construct.
      private JobMetaData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private JobMetaData() {
        jobName_ = "";
        author_ = "";
        description_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new JobMetaData();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Job_JobMetaData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Job_JobMetaData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.Job.JobMetaData.class, open_vector_format.OpenVectorFormat.Job.JobMetaData.Builder.class);
      }

      private int bitField0_;
      public static final int JOB_CREATION_TIME_FIELD_NUMBER = 1;
      private long jobCreationTime_ = 0L;
      /**
       * <pre>
       *jobCreationTime in UNIX time (number of seconds since January 1, 1970 12:00am UTC)
       * </pre>
       *
       * <code>int64 job_creation_time = 1;</code>
       * @return The jobCreationTime.
       */
      @java.lang.Override
      public long getJobCreationTime() {
        return jobCreationTime_;
      }

      public static final int VERSION_FIELD_NUMBER = 2;
      private long version_ = 0L;
      /**
       * <code>uint64 version = 2;</code>
       * @return The version.
       */
      @java.lang.Override
      public long getVersion() {
        return version_;
      }

      public static final int JOB_NAME_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private volatile java.lang.Object jobName_ = "";
      /**
       * <code>string job_name = 3;</code>
       * @return The jobName.
       */
      @java.lang.Override
      public java.lang.String getJobName() {
        java.lang.Object ref = jobName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jobName_ = s;
          return s;
        }
      }
      /**
       * <code>string job_name = 3;</code>
       * @return The bytes for jobName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getJobNameBytes() {
        java.lang.Object ref = jobName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jobName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int AUTHOR_FIELD_NUMBER = 4;
      @SuppressWarnings("serial")
      private volatile java.lang.Object author_ = "";
      /**
       * <code>string author = 4;</code>
       * @return The author.
       */
      @java.lang.Override
      public java.lang.String getAuthor() {
        java.lang.Object ref = author_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          author_ = s;
          return s;
        }
      }
      /**
       * <code>string author = 4;</code>
       * @return The bytes for author.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAuthorBytes() {
        java.lang.Object ref = author_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          author_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DESCRIPTION_FIELD_NUMBER = 5;
      @SuppressWarnings("serial")
      private volatile java.lang.Object description_ = "";
      /**
       * <code>string description = 5;</code>
       * @return The description.
       */
      @java.lang.Override
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        }
      }
      /**
       * <code>string description = 5;</code>
       * @return The bytes for description.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int BOUNDS_FIELD_NUMBER = 6;
      private open_vector_format.OpenVectorFormat.AxisAlignedBox2D bounds_;
      /**
       * <pre>
       *2D axis aligned bounding box of all workplanes vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
       * @return Whether the bounds field is set.
       */
      @java.lang.Override
      public boolean hasBounds() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *2D axis aligned bounding box of all workplanes vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
       * @return The bounds.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.AxisAlignedBox2D getBounds() {
        return bounds_ == null ? open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance() : bounds_;
      }
      /**
       * <pre>
       *2D axis aligned bounding box of all workplanes vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder getBoundsOrBuilder() {
        return bounds_ == null ? open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance() : bounds_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (jobCreationTime_ != 0L) {
          output.writeInt64(1, jobCreationTime_);
        }
        if (version_ != 0L) {
          output.writeUInt64(2, version_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(jobName_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, jobName_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(author_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, author_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, description_);
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(6, getBounds());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (jobCreationTime_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, jobCreationTime_);
        }
        if (version_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, version_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(jobName_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, jobName_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(author_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, author_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, description_);
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, getBounds());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.Job.JobMetaData)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.Job.JobMetaData other = (open_vector_format.OpenVectorFormat.Job.JobMetaData) obj;

        if (getJobCreationTime()
            != other.getJobCreationTime()) return false;
        if (getVersion()
            != other.getVersion()) return false;
        if (!getJobName()
            .equals(other.getJobName())) return false;
        if (!getAuthor()
            .equals(other.getAuthor())) return false;
        if (!getDescription()
            .equals(other.getDescription())) return false;
        if (hasBounds() != other.hasBounds()) return false;
        if (hasBounds()) {
          if (!getBounds()
              .equals(other.getBounds())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + JOB_CREATION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getJobCreationTime());
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getVersion());
        hash = (37 * hash) + JOB_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getJobName().hashCode();
        hash = (37 * hash) + AUTHOR_FIELD_NUMBER;
        hash = (53 * hash) + getAuthor().hashCode();
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription().hashCode();
        if (hasBounds()) {
          hash = (37 * hash) + BOUNDS_FIELD_NUMBER;
          hash = (53 * hash) + getBounds().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.Job.JobMetaData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.Job.JobMetaData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Job.JobMetaData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.Job.JobMetaData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Job.JobMetaData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.Job.JobMetaData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Job.JobMetaData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.Job.JobMetaData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.Job.JobMetaData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.Job.JobMetaData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Job.JobMetaData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.Job.JobMetaData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.Job.JobMetaData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *Metadata: Represents metadata related to the job object itself
       * </pre>
       *
       * Protobuf type {@code open_vector_format.Job.JobMetaData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.Job.JobMetaData)
          open_vector_format.OpenVectorFormat.Job.JobMetaDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Job_JobMetaData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Job_JobMetaData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.Job.JobMetaData.class, open_vector_format.OpenVectorFormat.Job.JobMetaData.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.Job.JobMetaData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getBoundsFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          jobCreationTime_ = 0L;
          version_ = 0L;
          jobName_ = "";
          author_ = "";
          description_ = "";
          bounds_ = null;
          if (boundsBuilder_ != null) {
            boundsBuilder_.dispose();
            boundsBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Job_JobMetaData_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.Job.JobMetaData getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.Job.JobMetaData.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.Job.JobMetaData build() {
          open_vector_format.OpenVectorFormat.Job.JobMetaData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.Job.JobMetaData buildPartial() {
          open_vector_format.OpenVectorFormat.Job.JobMetaData result = new open_vector_format.OpenVectorFormat.Job.JobMetaData(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.Job.JobMetaData result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.jobCreationTime_ = jobCreationTime_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.version_ = version_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.jobName_ = jobName_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.author_ = author_;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.description_ = description_;
          }
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.bounds_ = boundsBuilder_ == null
                ? bounds_
                : boundsBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.Job.JobMetaData) {
            return mergeFrom((open_vector_format.OpenVectorFormat.Job.JobMetaData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.Job.JobMetaData other) {
          if (other == open_vector_format.OpenVectorFormat.Job.JobMetaData.getDefaultInstance()) return this;
          if (other.getJobCreationTime() != 0L) {
            setJobCreationTime(other.getJobCreationTime());
          }
          if (other.getVersion() != 0L) {
            setVersion(other.getVersion());
          }
          if (!other.getJobName().isEmpty()) {
            jobName_ = other.jobName_;
            bitField0_ |= 0x00000004;
            onChanged();
          }
          if (!other.getAuthor().isEmpty()) {
            author_ = other.author_;
            bitField0_ |= 0x00000008;
            onChanged();
          }
          if (!other.getDescription().isEmpty()) {
            description_ = other.description_;
            bitField0_ |= 0x00000010;
            onChanged();
          }
          if (other.hasBounds()) {
            mergeBounds(other.getBounds());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  jobCreationTime_ = input.readInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  version_ = input.readUInt64();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 26: {
                  jobName_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                case 34: {
                  author_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
                case 42: {
                  description_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 42
                case 50: {
                  input.readMessage(
                      getBoundsFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000020;
                  break;
                } // case 50
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long jobCreationTime_ ;
        /**
         * <pre>
         *jobCreationTime in UNIX time (number of seconds since January 1, 1970 12:00am UTC)
         * </pre>
         *
         * <code>int64 job_creation_time = 1;</code>
         * @return The jobCreationTime.
         */
        @java.lang.Override
        public long getJobCreationTime() {
          return jobCreationTime_;
        }
        /**
         * <pre>
         *jobCreationTime in UNIX time (number of seconds since January 1, 1970 12:00am UTC)
         * </pre>
         *
         * <code>int64 job_creation_time = 1;</code>
         * @param value The jobCreationTime to set.
         * @return This builder for chaining.
         */
        public Builder setJobCreationTime(long value) {

          jobCreationTime_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *jobCreationTime in UNIX time (number of seconds since January 1, 1970 12:00am UTC)
         * </pre>
         *
         * <code>int64 job_creation_time = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearJobCreationTime() {
          bitField0_ = (bitField0_ & ~0x00000001);
          jobCreationTime_ = 0L;
          onChanged();
          return this;
        }

        private long version_ ;
        /**
         * <code>uint64 version = 2;</code>
         * @return The version.
         */
        @java.lang.Override
        public long getVersion() {
          return version_;
        }
        /**
         * <code>uint64 version = 2;</code>
         * @param value The version to set.
         * @return This builder for chaining.
         */
        public Builder setVersion(long value) {

          version_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>uint64 version = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearVersion() {
          bitField0_ = (bitField0_ & ~0x00000002);
          version_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object jobName_ = "";
        /**
         * <code>string job_name = 3;</code>
         * @return The jobName.
         */
        public java.lang.String getJobName() {
          java.lang.Object ref = jobName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            jobName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string job_name = 3;</code>
         * @return The bytes for jobName.
         */
        public com.google.protobuf.ByteString
            getJobNameBytes() {
          java.lang.Object ref = jobName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            jobName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string job_name = 3;</code>
         * @param value The jobName to set.
         * @return This builder for chaining.
         */
        public Builder setJobName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          jobName_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>string job_name = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearJobName() {
          jobName_ = getDefaultInstance().getJobName();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <code>string job_name = 3;</code>
         * @param value The bytes for jobName to set.
         * @return This builder for chaining.
         */
        public Builder setJobNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          jobName_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }

        private java.lang.Object author_ = "";
        /**
         * <code>string author = 4;</code>
         * @return The author.
         */
        public java.lang.String getAuthor() {
          java.lang.Object ref = author_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            author_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string author = 4;</code>
         * @return The bytes for author.
         */
        public com.google.protobuf.ByteString
            getAuthorBytes() {
          java.lang.Object ref = author_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            author_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string author = 4;</code>
         * @param value The author to set.
         * @return This builder for chaining.
         */
        public Builder setAuthor(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          author_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>string author = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearAuthor() {
          author_ = getDefaultInstance().getAuthor();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }
        /**
         * <code>string author = 4;</code>
         * @param value The bytes for author to set.
         * @return This builder for chaining.
         */
        public Builder setAuthorBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          author_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }

        private java.lang.Object description_ = "";
        /**
         * <code>string description = 5;</code>
         * @return The description.
         */
        public java.lang.String getDescription() {
          java.lang.Object ref = description_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            description_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string description = 5;</code>
         * @return The bytes for description.
         */
        public com.google.protobuf.ByteString
            getDescriptionBytes() {
          java.lang.Object ref = description_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            description_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string description = 5;</code>
         * @param value The description to set.
         * @return This builder for chaining.
         */
        public Builder setDescription(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          description_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>string description = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearDescription() {
          description_ = getDefaultInstance().getDescription();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }
        /**
         * <code>string description = 5;</code>
         * @param value The bytes for description to set.
         * @return This builder for chaining.
         */
        public Builder setDescriptionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          description_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }

        private open_vector_format.OpenVectorFormat.AxisAlignedBox2D bounds_;
        private com.google.protobuf.SingleFieldBuilderV3<
            open_vector_format.OpenVectorFormat.AxisAlignedBox2D, open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder, open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder> boundsBuilder_;
        /**
         * <pre>
         *2D axis aligned bounding box of all workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         * @return Whether the bounds field is set.
         */
        public boolean hasBounds() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         * @return The bounds.
         */
        public open_vector_format.OpenVectorFormat.AxisAlignedBox2D getBounds() {
          if (boundsBuilder_ == null) {
            return bounds_ == null ? open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance() : bounds_;
          } else {
            return boundsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         */
        public Builder setBounds(open_vector_format.OpenVectorFormat.AxisAlignedBox2D value) {
          if (boundsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            bounds_ = value;
          } else {
            boundsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         */
        public Builder setBounds(
            open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder builderForValue) {
          if (boundsBuilder_ == null) {
            bounds_ = builderForValue.build();
          } else {
            boundsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         */
        public Builder mergeBounds(open_vector_format.OpenVectorFormat.AxisAlignedBox2D value) {
          if (boundsBuilder_ == null) {
            if (((bitField0_ & 0x00000020) != 0) &&
              bounds_ != null &&
              bounds_ != open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance()) {
              getBoundsBuilder().mergeFrom(value);
            } else {
              bounds_ = value;
            }
          } else {
            boundsBuilder_.mergeFrom(value);
          }
          if (bounds_ != null) {
            bitField0_ |= 0x00000020;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         */
        public Builder clearBounds() {
          bitField0_ = (bitField0_ & ~0x00000020);
          bounds_ = null;
          if (boundsBuilder_ != null) {
            boundsBuilder_.dispose();
            boundsBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         */
        public open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder getBoundsBuilder() {
          bitField0_ |= 0x00000020;
          onChanged();
          return getBoundsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         */
        public open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder getBoundsOrBuilder() {
          if (boundsBuilder_ != null) {
            return boundsBuilder_.getMessageOrBuilder();
          } else {
            return bounds_ == null ?
                open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance() : bounds_;
          }
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            open_vector_format.OpenVectorFormat.AxisAlignedBox2D, open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder, open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder> 
            getBoundsFieldBuilder() {
          if (boundsBuilder_ == null) {
            boundsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                open_vector_format.OpenVectorFormat.AxisAlignedBox2D, open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder, open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder>(
                    getBounds(),
                    getParentForChildren(),
                    isClean());
            bounds_ = null;
          }
          return boundsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.Job.JobMetaData)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.Job.JobMetaData)
      private static final open_vector_format.OpenVectorFormat.Job.JobMetaData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.Job.JobMetaData();
      }

      public static open_vector_format.OpenVectorFormat.Job.JobMetaData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<JobMetaData>
          PARSER = new com.google.protobuf.AbstractParser<JobMetaData>() {
        @java.lang.Override
        public JobMetaData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<JobMetaData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<JobMetaData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.Job.JobMetaData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int WORK_PLANES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<open_vector_format.OpenVectorFormat.WorkPlane> workPlanes_;
    /**
     * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
     */
    @java.lang.Override
    public java.util.List<open_vector_format.OpenVectorFormat.WorkPlane> getWorkPlanesList() {
      return workPlanes_;
    }
    /**
     * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends open_vector_format.OpenVectorFormat.WorkPlaneOrBuilder> 
        getWorkPlanesOrBuilderList() {
      return workPlanes_;
    }
    /**
     * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
     */
    @java.lang.Override
    public int getWorkPlanesCount() {
      return workPlanes_.size();
    }
    /**
     * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.WorkPlane getWorkPlanes(int index) {
      return workPlanes_.get(index);
    }
    /**
     * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.WorkPlaneOrBuilder getWorkPlanesOrBuilder(
        int index) {
      return workPlanes_.get(index);
    }

    public static final int JOB_META_DATA_FIELD_NUMBER = 2;
    private open_vector_format.OpenVectorFormat.Job.JobMetaData jobMetaData_;
    /**
     * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
     * @return Whether the jobMetaData field is set.
     */
    @java.lang.Override
    public boolean hasJobMetaData() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
     * @return The jobMetaData.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Job.JobMetaData getJobMetaData() {
      return jobMetaData_ == null ? open_vector_format.OpenVectorFormat.Job.JobMetaData.getDefaultInstance() : jobMetaData_;
    }
    /**
     * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Job.JobMetaDataOrBuilder getJobMetaDataOrBuilder() {
      return jobMetaData_ == null ? open_vector_format.OpenVectorFormat.Job.JobMetaData.getDefaultInstance() : jobMetaData_;
    }

    public static final int MARKING_PARAMS_MAP_FIELD_NUMBER = 3;
    private static final class MarkingParamsMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams>newDefaultInstance(
                  open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Job_MarkingParamsMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  open_vector_format.OpenVectorFormat.MarkingParams.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams> markingParamsMap_;
    private com.google.protobuf.MapField<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams>
    internalGetMarkingParamsMap() {
      if (markingParamsMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MarkingParamsMapDefaultEntryHolder.defaultEntry);
      }
      return markingParamsMap_;
    }
    public int getMarkingParamsMapCount() {
      return internalGetMarkingParamsMap().getMap().size();
    }
    /**
     * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
     */
    @java.lang.Override
    public boolean containsMarkingParamsMap(
        int key) {

      return internalGetMarkingParamsMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMarkingParamsMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams> getMarkingParamsMap() {
      return getMarkingParamsMapMap();
    }
    /**
     * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams> getMarkingParamsMapMap() {
      return internalGetMarkingParamsMap().getMap();
    }
    /**
     * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
     */
    @java.lang.Override
    public /* nullable */
open_vector_format.OpenVectorFormat.MarkingParams getMarkingParamsMapOrDefault(
        int key,
        /* nullable */
open_vector_format.OpenVectorFormat.MarkingParams defaultValue) {

      java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams> map =
          internalGetMarkingParamsMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.MarkingParams getMarkingParamsMapOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams> map =
          internalGetMarkingParamsMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int PARTS_MAP_FIELD_NUMBER = 4;
    private static final class PartsMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, open_vector_format.OpenVectorFormat.Part> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, open_vector_format.OpenVectorFormat.Part>newDefaultInstance(
                  open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Job_PartsMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  open_vector_format.OpenVectorFormat.Part.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, open_vector_format.OpenVectorFormat.Part> partsMap_;
    private com.google.protobuf.MapField<java.lang.Integer, open_vector_format.OpenVectorFormat.Part>
    internalGetPartsMap() {
      if (partsMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PartsMapDefaultEntryHolder.defaultEntry);
      }
      return partsMap_;
    }
    public int getPartsMapCount() {
      return internalGetPartsMap().getMap().size();
    }
    /**
     * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
     */
    @java.lang.Override
    public boolean containsPartsMap(
        int key) {

      return internalGetPartsMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPartsMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.Part> getPartsMap() {
      return getPartsMapMap();
    }
    /**
     * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.Part> getPartsMapMap() {
      return internalGetPartsMap().getMap();
    }
    /**
     * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
     */
    @java.lang.Override
    public /* nullable */
open_vector_format.OpenVectorFormat.Part getPartsMapOrDefault(
        int key,
        /* nullable */
open_vector_format.OpenVectorFormat.Part defaultValue) {

      java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.Part> map =
          internalGetPartsMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Part getPartsMapOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.Part> map =
          internalGetPartsMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int JOB_PARAMETERS_FIELD_NUMBER = 5;
    private open_vector_format.OpenVectorFormat.JobParameters jobParameters_;
    /**
     * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
     * @return Whether the jobParameters field is set.
     */
    @java.lang.Override
    public boolean hasJobParameters() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
     * @return The jobParameters.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.JobParameters getJobParameters() {
      return jobParameters_ == null ? open_vector_format.OpenVectorFormat.JobParameters.getDefaultInstance() : jobParameters_;
    }
    /**
     * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.JobParametersOrBuilder getJobParametersOrBuilder() {
      return jobParameters_ == null ? open_vector_format.OpenVectorFormat.JobParameters.getDefaultInstance() : jobParameters_;
    }

    public static final int NUM_WORK_PLANES_FIELD_NUMBER = 6;
    private int numWorkPlanes_ = 0;
    /**
     * <pre>
     *Number of Layer (LPBF) /3DPatches (Structuring)
     * </pre>
     *
     * <code>int32 num_work_planes = 6;</code>
     * @return The numWorkPlanes.
     */
    @java.lang.Override
    public int getNumWorkPlanes() {
      return numWorkPlanes_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < workPlanes_.size(); i++) {
        output.writeMessage(1, workPlanes_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getJobMetaData());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMarkingParamsMap(),
          MarkingParamsMapDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetPartsMap(),
          PartsMapDefaultEntryHolder.defaultEntry,
          4);
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(5, getJobParameters());
      }
      if (numWorkPlanes_ != 0) {
        output.writeInt32(6, numWorkPlanes_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < workPlanes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, workPlanes_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getJobMetaData());
      }
      for (java.util.Map.Entry<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams> entry
           : internalGetMarkingParamsMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams>
        markingParamsMap__ = MarkingParamsMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, markingParamsMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, open_vector_format.OpenVectorFormat.Part> entry
           : internalGetPartsMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, open_vector_format.OpenVectorFormat.Part>
        partsMap__ = PartsMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, partsMap__);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getJobParameters());
      }
      if (numWorkPlanes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, numWorkPlanes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof open_vector_format.OpenVectorFormat.Job)) {
        return super.equals(obj);
      }
      open_vector_format.OpenVectorFormat.Job other = (open_vector_format.OpenVectorFormat.Job) obj;

      if (!getWorkPlanesList()
          .equals(other.getWorkPlanesList())) return false;
      if (hasJobMetaData() != other.hasJobMetaData()) return false;
      if (hasJobMetaData()) {
        if (!getJobMetaData()
            .equals(other.getJobMetaData())) return false;
      }
      if (!internalGetMarkingParamsMap().equals(
          other.internalGetMarkingParamsMap())) return false;
      if (!internalGetPartsMap().equals(
          other.internalGetPartsMap())) return false;
      if (hasJobParameters() != other.hasJobParameters()) return false;
      if (hasJobParameters()) {
        if (!getJobParameters()
            .equals(other.getJobParameters())) return false;
      }
      if (getNumWorkPlanes()
          != other.getNumWorkPlanes()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getWorkPlanesCount() > 0) {
        hash = (37 * hash) + WORK_PLANES_FIELD_NUMBER;
        hash = (53 * hash) + getWorkPlanesList().hashCode();
      }
      if (hasJobMetaData()) {
        hash = (37 * hash) + JOB_META_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getJobMetaData().hashCode();
      }
      if (!internalGetMarkingParamsMap().getMap().isEmpty()) {
        hash = (37 * hash) + MARKING_PARAMS_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMarkingParamsMap().hashCode();
      }
      if (!internalGetPartsMap().getMap().isEmpty()) {
        hash = (37 * hash) + PARTS_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPartsMap().hashCode();
      }
      if (hasJobParameters()) {
        hash = (37 * hash) + JOB_PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getJobParameters().hashCode();
      }
      hash = (37 * hash) + NUM_WORK_PLANES_FIELD_NUMBER;
      hash = (53 * hash) + getNumWorkPlanes();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static open_vector_format.OpenVectorFormat.Job parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.Job parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.Job parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.Job parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.Job parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.Job parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.Job parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.Job parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static open_vector_format.OpenVectorFormat.Job parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static open_vector_format.OpenVectorFormat.Job parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.Job parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.Job parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(open_vector_format.OpenVectorFormat.Job prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *Represents one single production job. May be used as a central (very) large object containing
     *all information, or as a "shell" with no or incomplete WorkPlane information to break down object size.
     * </pre>
     *
     * Protobuf type {@code open_vector_format.Job}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:open_vector_format.Job)
        open_vector_format.OpenVectorFormat.JobOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Job_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMarkingParamsMap();
          case 4:
            return internalGetPartsMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableMarkingParamsMap();
          case 4:
            return internalGetMutablePartsMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Job_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.Job.class, open_vector_format.OpenVectorFormat.Job.Builder.class);
      }

      // Construct using open_vector_format.OpenVectorFormat.Job.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getWorkPlanesFieldBuilder();
          getJobMetaDataFieldBuilder();
          getJobParametersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (workPlanesBuilder_ == null) {
          workPlanes_ = java.util.Collections.emptyList();
        } else {
          workPlanes_ = null;
          workPlanesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        jobMetaData_ = null;
        if (jobMetaDataBuilder_ != null) {
          jobMetaDataBuilder_.dispose();
          jobMetaDataBuilder_ = null;
        }
        internalGetMutableMarkingParamsMap().clear();
        internalGetMutablePartsMap().clear();
        jobParameters_ = null;
        if (jobParametersBuilder_ != null) {
          jobParametersBuilder_.dispose();
          jobParametersBuilder_ = null;
        }
        numWorkPlanes_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Job_descriptor;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.Job getDefaultInstanceForType() {
        return open_vector_format.OpenVectorFormat.Job.getDefaultInstance();
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.Job build() {
        open_vector_format.OpenVectorFormat.Job result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.Job buildPartial() {
        open_vector_format.OpenVectorFormat.Job result = new open_vector_format.OpenVectorFormat.Job(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(open_vector_format.OpenVectorFormat.Job result) {
        if (workPlanesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            workPlanes_ = java.util.Collections.unmodifiableList(workPlanes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.workPlanes_ = workPlanes_;
        } else {
          result.workPlanes_ = workPlanesBuilder_.build();
        }
      }

      private void buildPartial0(open_vector_format.OpenVectorFormat.Job result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.jobMetaData_ = jobMetaDataBuilder_ == null
              ? jobMetaData_
              : jobMetaDataBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.markingParamsMap_ = internalGetMarkingParamsMap();
          result.markingParamsMap_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.partsMap_ = internalGetPartsMap();
          result.partsMap_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.jobParameters_ = jobParametersBuilder_ == null
              ? jobParameters_
              : jobParametersBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.numWorkPlanes_ = numWorkPlanes_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof open_vector_format.OpenVectorFormat.Job) {
          return mergeFrom((open_vector_format.OpenVectorFormat.Job)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(open_vector_format.OpenVectorFormat.Job other) {
        if (other == open_vector_format.OpenVectorFormat.Job.getDefaultInstance()) return this;
        if (workPlanesBuilder_ == null) {
          if (!other.workPlanes_.isEmpty()) {
            if (workPlanes_.isEmpty()) {
              workPlanes_ = other.workPlanes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureWorkPlanesIsMutable();
              workPlanes_.addAll(other.workPlanes_);
            }
            onChanged();
          }
        } else {
          if (!other.workPlanes_.isEmpty()) {
            if (workPlanesBuilder_.isEmpty()) {
              workPlanesBuilder_.dispose();
              workPlanesBuilder_ = null;
              workPlanes_ = other.workPlanes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              workPlanesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWorkPlanesFieldBuilder() : null;
            } else {
              workPlanesBuilder_.addAllMessages(other.workPlanes_);
            }
          }
        }
        if (other.hasJobMetaData()) {
          mergeJobMetaData(other.getJobMetaData());
        }
        internalGetMutableMarkingParamsMap().mergeFrom(
            other.internalGetMarkingParamsMap());
        bitField0_ |= 0x00000004;
        internalGetMutablePartsMap().mergeFrom(
            other.internalGetPartsMap());
        bitField0_ |= 0x00000008;
        if (other.hasJobParameters()) {
          mergeJobParameters(other.getJobParameters());
        }
        if (other.getNumWorkPlanes() != 0) {
          setNumWorkPlanes(other.getNumWorkPlanes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                open_vector_format.OpenVectorFormat.WorkPlane m =
                    input.readMessage(
                        open_vector_format.OpenVectorFormat.WorkPlane.parser(),
                        extensionRegistry);
                if (workPlanesBuilder_ == null) {
                  ensureWorkPlanesIsMutable();
                  workPlanes_.add(m);
                } else {
                  workPlanesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getJobMetaDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                com.google.protobuf.MapEntry<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams>
                markingParamsMap__ = input.readMessage(
                    MarkingParamsMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMarkingParamsMap().getMutableMap().put(
                    markingParamsMap__.getKey(), markingParamsMap__.getValue());
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                com.google.protobuf.MapEntry<java.lang.Integer, open_vector_format.OpenVectorFormat.Part>
                partsMap__ = input.readMessage(
                    PartsMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutablePartsMap().getMutableMap().put(
                    partsMap__.getKey(), partsMap__.getValue());
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getJobParametersFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 48: {
                numWorkPlanes_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<open_vector_format.OpenVectorFormat.WorkPlane> workPlanes_ =
        java.util.Collections.emptyList();
      private void ensureWorkPlanesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          workPlanes_ = new java.util.ArrayList<open_vector_format.OpenVectorFormat.WorkPlane>(workPlanes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          open_vector_format.OpenVectorFormat.WorkPlane, open_vector_format.OpenVectorFormat.WorkPlane.Builder, open_vector_format.OpenVectorFormat.WorkPlaneOrBuilder> workPlanesBuilder_;

      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public java.util.List<open_vector_format.OpenVectorFormat.WorkPlane> getWorkPlanesList() {
        if (workPlanesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(workPlanes_);
        } else {
          return workPlanesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public int getWorkPlanesCount() {
        if (workPlanesBuilder_ == null) {
          return workPlanes_.size();
        } else {
          return workPlanesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public open_vector_format.OpenVectorFormat.WorkPlane getWorkPlanes(int index) {
        if (workPlanesBuilder_ == null) {
          return workPlanes_.get(index);
        } else {
          return workPlanesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public Builder setWorkPlanes(
          int index, open_vector_format.OpenVectorFormat.WorkPlane value) {
        if (workPlanesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkPlanesIsMutable();
          workPlanes_.set(index, value);
          onChanged();
        } else {
          workPlanesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public Builder setWorkPlanes(
          int index, open_vector_format.OpenVectorFormat.WorkPlane.Builder builderForValue) {
        if (workPlanesBuilder_ == null) {
          ensureWorkPlanesIsMutable();
          workPlanes_.set(index, builderForValue.build());
          onChanged();
        } else {
          workPlanesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public Builder addWorkPlanes(open_vector_format.OpenVectorFormat.WorkPlane value) {
        if (workPlanesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkPlanesIsMutable();
          workPlanes_.add(value);
          onChanged();
        } else {
          workPlanesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public Builder addWorkPlanes(
          int index, open_vector_format.OpenVectorFormat.WorkPlane value) {
        if (workPlanesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkPlanesIsMutable();
          workPlanes_.add(index, value);
          onChanged();
        } else {
          workPlanesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public Builder addWorkPlanes(
          open_vector_format.OpenVectorFormat.WorkPlane.Builder builderForValue) {
        if (workPlanesBuilder_ == null) {
          ensureWorkPlanesIsMutable();
          workPlanes_.add(builderForValue.build());
          onChanged();
        } else {
          workPlanesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public Builder addWorkPlanes(
          int index, open_vector_format.OpenVectorFormat.WorkPlane.Builder builderForValue) {
        if (workPlanesBuilder_ == null) {
          ensureWorkPlanesIsMutable();
          workPlanes_.add(index, builderForValue.build());
          onChanged();
        } else {
          workPlanesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public Builder addAllWorkPlanes(
          java.lang.Iterable<? extends open_vector_format.OpenVectorFormat.WorkPlane> values) {
        if (workPlanesBuilder_ == null) {
          ensureWorkPlanesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, workPlanes_);
          onChanged();
        } else {
          workPlanesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public Builder clearWorkPlanes() {
        if (workPlanesBuilder_ == null) {
          workPlanes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          workPlanesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public Builder removeWorkPlanes(int index) {
        if (workPlanesBuilder_ == null) {
          ensureWorkPlanesIsMutable();
          workPlanes_.remove(index);
          onChanged();
        } else {
          workPlanesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public open_vector_format.OpenVectorFormat.WorkPlane.Builder getWorkPlanesBuilder(
          int index) {
        return getWorkPlanesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public open_vector_format.OpenVectorFormat.WorkPlaneOrBuilder getWorkPlanesOrBuilder(
          int index) {
        if (workPlanesBuilder_ == null) {
          return workPlanes_.get(index);  } else {
          return workPlanesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public java.util.List<? extends open_vector_format.OpenVectorFormat.WorkPlaneOrBuilder> 
           getWorkPlanesOrBuilderList() {
        if (workPlanesBuilder_ != null) {
          return workPlanesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(workPlanes_);
        }
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public open_vector_format.OpenVectorFormat.WorkPlane.Builder addWorkPlanesBuilder() {
        return getWorkPlanesFieldBuilder().addBuilder(
            open_vector_format.OpenVectorFormat.WorkPlane.getDefaultInstance());
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public open_vector_format.OpenVectorFormat.WorkPlane.Builder addWorkPlanesBuilder(
          int index) {
        return getWorkPlanesFieldBuilder().addBuilder(
            index, open_vector_format.OpenVectorFormat.WorkPlane.getDefaultInstance());
      }
      /**
       * <code>repeated .open_vector_format.WorkPlane work_planes = 1;</code>
       */
      public java.util.List<open_vector_format.OpenVectorFormat.WorkPlane.Builder> 
           getWorkPlanesBuilderList() {
        return getWorkPlanesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          open_vector_format.OpenVectorFormat.WorkPlane, open_vector_format.OpenVectorFormat.WorkPlane.Builder, open_vector_format.OpenVectorFormat.WorkPlaneOrBuilder> 
          getWorkPlanesFieldBuilder() {
        if (workPlanesBuilder_ == null) {
          workPlanesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              open_vector_format.OpenVectorFormat.WorkPlane, open_vector_format.OpenVectorFormat.WorkPlane.Builder, open_vector_format.OpenVectorFormat.WorkPlaneOrBuilder>(
                  workPlanes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          workPlanes_ = null;
        }
        return workPlanesBuilder_;
      }

      private open_vector_format.OpenVectorFormat.Job.JobMetaData jobMetaData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.Job.JobMetaData, open_vector_format.OpenVectorFormat.Job.JobMetaData.Builder, open_vector_format.OpenVectorFormat.Job.JobMetaDataOrBuilder> jobMetaDataBuilder_;
      /**
       * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
       * @return Whether the jobMetaData field is set.
       */
      public boolean hasJobMetaData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
       * @return The jobMetaData.
       */
      public open_vector_format.OpenVectorFormat.Job.JobMetaData getJobMetaData() {
        if (jobMetaDataBuilder_ == null) {
          return jobMetaData_ == null ? open_vector_format.OpenVectorFormat.Job.JobMetaData.getDefaultInstance() : jobMetaData_;
        } else {
          return jobMetaDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
       */
      public Builder setJobMetaData(open_vector_format.OpenVectorFormat.Job.JobMetaData value) {
        if (jobMetaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          jobMetaData_ = value;
        } else {
          jobMetaDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
       */
      public Builder setJobMetaData(
          open_vector_format.OpenVectorFormat.Job.JobMetaData.Builder builderForValue) {
        if (jobMetaDataBuilder_ == null) {
          jobMetaData_ = builderForValue.build();
        } else {
          jobMetaDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
       */
      public Builder mergeJobMetaData(open_vector_format.OpenVectorFormat.Job.JobMetaData value) {
        if (jobMetaDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            jobMetaData_ != null &&
            jobMetaData_ != open_vector_format.OpenVectorFormat.Job.JobMetaData.getDefaultInstance()) {
            getJobMetaDataBuilder().mergeFrom(value);
          } else {
            jobMetaData_ = value;
          }
        } else {
          jobMetaDataBuilder_.mergeFrom(value);
        }
        if (jobMetaData_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
       */
      public Builder clearJobMetaData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jobMetaData_ = null;
        if (jobMetaDataBuilder_ != null) {
          jobMetaDataBuilder_.dispose();
          jobMetaDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
       */
      public open_vector_format.OpenVectorFormat.Job.JobMetaData.Builder getJobMetaDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getJobMetaDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
       */
      public open_vector_format.OpenVectorFormat.Job.JobMetaDataOrBuilder getJobMetaDataOrBuilder() {
        if (jobMetaDataBuilder_ != null) {
          return jobMetaDataBuilder_.getMessageOrBuilder();
        } else {
          return jobMetaData_ == null ?
              open_vector_format.OpenVectorFormat.Job.JobMetaData.getDefaultInstance() : jobMetaData_;
        }
      }
      /**
       * <code>.open_vector_format.Job.JobMetaData job_meta_data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.Job.JobMetaData, open_vector_format.OpenVectorFormat.Job.JobMetaData.Builder, open_vector_format.OpenVectorFormat.Job.JobMetaDataOrBuilder> 
          getJobMetaDataFieldBuilder() {
        if (jobMetaDataBuilder_ == null) {
          jobMetaDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.Job.JobMetaData, open_vector_format.OpenVectorFormat.Job.JobMetaData.Builder, open_vector_format.OpenVectorFormat.Job.JobMetaDataOrBuilder>(
                  getJobMetaData(),
                  getParentForChildren(),
                  isClean());
          jobMetaData_ = null;
        }
        return jobMetaDataBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams> markingParamsMap_;
      private com.google.protobuf.MapField<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams>
          internalGetMarkingParamsMap() {
        if (markingParamsMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MarkingParamsMapDefaultEntryHolder.defaultEntry);
        }
        return markingParamsMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams>
          internalGetMutableMarkingParamsMap() {
        if (markingParamsMap_ == null) {
          markingParamsMap_ = com.google.protobuf.MapField.newMapField(
              MarkingParamsMapDefaultEntryHolder.defaultEntry);
        }
        if (!markingParamsMap_.isMutable()) {
          markingParamsMap_ = markingParamsMap_.copy();
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return markingParamsMap_;
      }
      public int getMarkingParamsMapCount() {
        return internalGetMarkingParamsMap().getMap().size();
      }
      /**
       * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
       */
      @java.lang.Override
      public boolean containsMarkingParamsMap(
          int key) {

        return internalGetMarkingParamsMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMarkingParamsMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams> getMarkingParamsMap() {
        return getMarkingParamsMapMap();
      }
      /**
       * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams> getMarkingParamsMapMap() {
        return internalGetMarkingParamsMap().getMap();
      }
      /**
       * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
       */
      @java.lang.Override
      public /* nullable */
open_vector_format.OpenVectorFormat.MarkingParams getMarkingParamsMapOrDefault(
          int key,
          /* nullable */
open_vector_format.OpenVectorFormat.MarkingParams defaultValue) {

        java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams> map =
            internalGetMarkingParamsMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.MarkingParams getMarkingParamsMapOrThrow(
          int key) {

        java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams> map =
            internalGetMarkingParamsMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMarkingParamsMap() {
        bitField0_ = (bitField0_ & ~0x00000004);
        internalGetMutableMarkingParamsMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
       */
      public Builder removeMarkingParamsMap(
          int key) {

        internalGetMutableMarkingParamsMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams>
          getMutableMarkingParamsMap() {
        bitField0_ |= 0x00000004;
        return internalGetMutableMarkingParamsMap().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
       */
      public Builder putMarkingParamsMap(
          int key,
          open_vector_format.OpenVectorFormat.MarkingParams value) {

        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMarkingParamsMap().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>map&lt;int32, .open_vector_format.MarkingParams&gt; marking_params_map = 3;</code>
       */
      public Builder putAllMarkingParamsMap(
          java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.MarkingParams> values) {
        internalGetMutableMarkingParamsMap().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000004;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, open_vector_format.OpenVectorFormat.Part> partsMap_;
      private com.google.protobuf.MapField<java.lang.Integer, open_vector_format.OpenVectorFormat.Part>
          internalGetPartsMap() {
        if (partsMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PartsMapDefaultEntryHolder.defaultEntry);
        }
        return partsMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, open_vector_format.OpenVectorFormat.Part>
          internalGetMutablePartsMap() {
        if (partsMap_ == null) {
          partsMap_ = com.google.protobuf.MapField.newMapField(
              PartsMapDefaultEntryHolder.defaultEntry);
        }
        if (!partsMap_.isMutable()) {
          partsMap_ = partsMap_.copy();
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return partsMap_;
      }
      public int getPartsMapCount() {
        return internalGetPartsMap().getMap().size();
      }
      /**
       * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
       */
      @java.lang.Override
      public boolean containsPartsMap(
          int key) {

        return internalGetPartsMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPartsMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.Part> getPartsMap() {
        return getPartsMapMap();
      }
      /**
       * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.Part> getPartsMapMap() {
        return internalGetPartsMap().getMap();
      }
      /**
       * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
       */
      @java.lang.Override
      public /* nullable */
open_vector_format.OpenVectorFormat.Part getPartsMapOrDefault(
          int key,
          /* nullable */
open_vector_format.OpenVectorFormat.Part defaultValue) {

        java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.Part> map =
            internalGetPartsMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.Part getPartsMapOrThrow(
          int key) {

        java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.Part> map =
            internalGetPartsMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearPartsMap() {
        bitField0_ = (bitField0_ & ~0x00000008);
        internalGetMutablePartsMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
       */
      public Builder removePartsMap(
          int key) {

        internalGetMutablePartsMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.Part>
          getMutablePartsMap() {
        bitField0_ |= 0x00000008;
        return internalGetMutablePartsMap().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
       */
      public Builder putPartsMap(
          int key,
          open_vector_format.OpenVectorFormat.Part value) {

        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutablePartsMap().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>map&lt;int32, .open_vector_format.Part&gt; parts_map = 4;</code>
       */
      public Builder putAllPartsMap(
          java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.Part> values) {
        internalGetMutablePartsMap().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000008;
        return this;
      }

      private open_vector_format.OpenVectorFormat.JobParameters jobParameters_;
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.JobParameters, open_vector_format.OpenVectorFormat.JobParameters.Builder, open_vector_format.OpenVectorFormat.JobParametersOrBuilder> jobParametersBuilder_;
      /**
       * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
       * @return Whether the jobParameters field is set.
       */
      public boolean hasJobParameters() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
       * @return The jobParameters.
       */
      public open_vector_format.OpenVectorFormat.JobParameters getJobParameters() {
        if (jobParametersBuilder_ == null) {
          return jobParameters_ == null ? open_vector_format.OpenVectorFormat.JobParameters.getDefaultInstance() : jobParameters_;
        } else {
          return jobParametersBuilder_.getMessage();
        }
      }
      /**
       * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
       */
      public Builder setJobParameters(open_vector_format.OpenVectorFormat.JobParameters value) {
        if (jobParametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          jobParameters_ = value;
        } else {
          jobParametersBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
       */
      public Builder setJobParameters(
          open_vector_format.OpenVectorFormat.JobParameters.Builder builderForValue) {
        if (jobParametersBuilder_ == null) {
          jobParameters_ = builderForValue.build();
        } else {
          jobParametersBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
       */
      public Builder mergeJobParameters(open_vector_format.OpenVectorFormat.JobParameters value) {
        if (jobParametersBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            jobParameters_ != null &&
            jobParameters_ != open_vector_format.OpenVectorFormat.JobParameters.getDefaultInstance()) {
            getJobParametersBuilder().mergeFrom(value);
          } else {
            jobParameters_ = value;
          }
        } else {
          jobParametersBuilder_.mergeFrom(value);
        }
        if (jobParameters_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
       */
      public Builder clearJobParameters() {
        bitField0_ = (bitField0_ & ~0x00000010);
        jobParameters_ = null;
        if (jobParametersBuilder_ != null) {
          jobParametersBuilder_.dispose();
          jobParametersBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
       */
      public open_vector_format.OpenVectorFormat.JobParameters.Builder getJobParametersBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getJobParametersFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
       */
      public open_vector_format.OpenVectorFormat.JobParametersOrBuilder getJobParametersOrBuilder() {
        if (jobParametersBuilder_ != null) {
          return jobParametersBuilder_.getMessageOrBuilder();
        } else {
          return jobParameters_ == null ?
              open_vector_format.OpenVectorFormat.JobParameters.getDefaultInstance() : jobParameters_;
        }
      }
      /**
       * <code>.open_vector_format.JobParameters job_parameters = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.JobParameters, open_vector_format.OpenVectorFormat.JobParameters.Builder, open_vector_format.OpenVectorFormat.JobParametersOrBuilder> 
          getJobParametersFieldBuilder() {
        if (jobParametersBuilder_ == null) {
          jobParametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.JobParameters, open_vector_format.OpenVectorFormat.JobParameters.Builder, open_vector_format.OpenVectorFormat.JobParametersOrBuilder>(
                  getJobParameters(),
                  getParentForChildren(),
                  isClean());
          jobParameters_ = null;
        }
        return jobParametersBuilder_;
      }

      private int numWorkPlanes_ ;
      /**
       * <pre>
       *Number of Layer (LPBF) /3DPatches (Structuring)
       * </pre>
       *
       * <code>int32 num_work_planes = 6;</code>
       * @return The numWorkPlanes.
       */
      @java.lang.Override
      public int getNumWorkPlanes() {
        return numWorkPlanes_;
      }
      /**
       * <pre>
       *Number of Layer (LPBF) /3DPatches (Structuring)
       * </pre>
       *
       * <code>int32 num_work_planes = 6;</code>
       * @param value The numWorkPlanes to set.
       * @return This builder for chaining.
       */
      public Builder setNumWorkPlanes(int value) {

        numWorkPlanes_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Number of Layer (LPBF) /3DPatches (Structuring)
       * </pre>
       *
       * <code>int32 num_work_planes = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumWorkPlanes() {
        bitField0_ = (bitField0_ & ~0x00000020);
        numWorkPlanes_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:open_vector_format.Job)
    }

    // @@protoc_insertion_point(class_scope:open_vector_format.Job)
    private static final open_vector_format.OpenVectorFormat.Job DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.Job();
    }

    public static open_vector_format.OpenVectorFormat.Job getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Job>
        PARSER = new com.google.protobuf.AbstractParser<Job>() {
      @java.lang.Override
      public Job parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Job> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Job> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Job getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface JobParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:open_vector_format.JobParameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *setpoint temperature of a globally effective heating system (e.g. build chamber/substrate plate)
     * </pre>
     *
     * <code>double preheating_temperatur_in_dg_c = 1;</code>
     * @return The preheatingTemperaturInDgC.
     */
    double getPreheatingTemperaturInDgC();

    /**
     * <pre>
     *vector of main direction of a shielding gas flow (xy or xyz)
     * </pre>
     *
     * <code>repeated double shielding_gas_directions = 2;</code>
     * @return A list containing the shieldingGasDirections.
     */
    java.util.List<java.lang.Double> getShieldingGasDirectionsList();
    /**
     * <pre>
     *vector of main direction of a shielding gas flow (xy or xyz)
     * </pre>
     *
     * <code>repeated double shielding_gas_directions = 2;</code>
     * @return The count of shieldingGasDirections.
     */
    int getShieldingGasDirectionsCount();
    /**
     * <pre>
     *vector of main direction of a shielding gas flow (xy or xyz)
     * </pre>
     *
     * <code>repeated double shielding_gas_directions = 2;</code>
     * @param index The index of the element to return.
     * @return The shieldingGasDirections at the given index.
     */
    double getShieldingGasDirections(int index);

    /**
     * <pre>
     *vector of main direction of a material feed (e.g. powder coater, powder feed, extrusion nozzle) (xy or xyz)
     * </pre>
     *
     * <code>repeated double material_feed_directions = 3;</code>
     * @return A list containing the materialFeedDirections.
     */
    java.util.List<java.lang.Double> getMaterialFeedDirectionsList();
    /**
     * <pre>
     *vector of main direction of a material feed (e.g. powder coater, powder feed, extrusion nozzle) (xy or xyz)
     * </pre>
     *
     * <code>repeated double material_feed_directions = 3;</code>
     * @return The count of materialFeedDirections.
     */
    int getMaterialFeedDirectionsCount();
    /**
     * <pre>
     *vector of main direction of a material feed (e.g. powder coater, powder feed, extrusion nozzle) (xy or xyz)
     * </pre>
     *
     * <code>repeated double material_feed_directions = 3;</code>
     * @param index The index of the element to return.
     * @return The materialFeedDirections at the given index.
     */
    double getMaterialFeedDirections(int index);
  }
  /**
   * <pre>
   *Process parameters applying to the job as a whole
   * </pre>
   *
   * Protobuf type {@code open_vector_format.JobParameters}
   */
  public static final class JobParameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:open_vector_format.JobParameters)
      JobParametersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use JobParameters.newBuilder() to construct.
    private JobParameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JobParameters() {
      shieldingGasDirections_ = emptyDoubleList();
      materialFeedDirections_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new JobParameters();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_JobParameters_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_JobParameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              open_vector_format.OpenVectorFormat.JobParameters.class, open_vector_format.OpenVectorFormat.JobParameters.Builder.class);
    }

    public static final int PREHEATING_TEMPERATUR_IN_DG_C_FIELD_NUMBER = 1;
    private double preheatingTemperaturInDgC_ = 0D;
    /**
     * <pre>
     *setpoint temperature of a globally effective heating system (e.g. build chamber/substrate plate)
     * </pre>
     *
     * <code>double preheating_temperatur_in_dg_c = 1;</code>
     * @return The preheatingTemperaturInDgC.
     */
    @java.lang.Override
    public double getPreheatingTemperaturInDgC() {
      return preheatingTemperaturInDgC_;
    }

    public static final int SHIELDING_GAS_DIRECTIONS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList shieldingGasDirections_ =
        emptyDoubleList();
    /**
     * <pre>
     *vector of main direction of a shielding gas flow (xy or xyz)
     * </pre>
     *
     * <code>repeated double shielding_gas_directions = 2;</code>
     * @return A list containing the shieldingGasDirections.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getShieldingGasDirectionsList() {
      return shieldingGasDirections_;
    }
    /**
     * <pre>
     *vector of main direction of a shielding gas flow (xy or xyz)
     * </pre>
     *
     * <code>repeated double shielding_gas_directions = 2;</code>
     * @return The count of shieldingGasDirections.
     */
    public int getShieldingGasDirectionsCount() {
      return shieldingGasDirections_.size();
    }
    /**
     * <pre>
     *vector of main direction of a shielding gas flow (xy or xyz)
     * </pre>
     *
     * <code>repeated double shielding_gas_directions = 2;</code>
     * @param index The index of the element to return.
     * @return The shieldingGasDirections at the given index.
     */
    public double getShieldingGasDirections(int index) {
      return shieldingGasDirections_.getDouble(index);
    }
    private int shieldingGasDirectionsMemoizedSerializedSize = -1;

    public static final int MATERIAL_FEED_DIRECTIONS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList materialFeedDirections_ =
        emptyDoubleList();
    /**
     * <pre>
     *vector of main direction of a material feed (e.g. powder coater, powder feed, extrusion nozzle) (xy or xyz)
     * </pre>
     *
     * <code>repeated double material_feed_directions = 3;</code>
     * @return A list containing the materialFeedDirections.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getMaterialFeedDirectionsList() {
      return materialFeedDirections_;
    }
    /**
     * <pre>
     *vector of main direction of a material feed (e.g. powder coater, powder feed, extrusion nozzle) (xy or xyz)
     * </pre>
     *
     * <code>repeated double material_feed_directions = 3;</code>
     * @return The count of materialFeedDirections.
     */
    public int getMaterialFeedDirectionsCount() {
      return materialFeedDirections_.size();
    }
    /**
     * <pre>
     *vector of main direction of a material feed (e.g. powder coater, powder feed, extrusion nozzle) (xy or xyz)
     * </pre>
     *
     * <code>repeated double material_feed_directions = 3;</code>
     * @param index The index of the element to return.
     * @return The materialFeedDirections at the given index.
     */
    public double getMaterialFeedDirections(int index) {
      return materialFeedDirections_.getDouble(index);
    }
    private int materialFeedDirectionsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (java.lang.Double.doubleToRawLongBits(preheatingTemperaturInDgC_) != 0) {
        output.writeDouble(1, preheatingTemperaturInDgC_);
      }
      if (getShieldingGasDirectionsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(shieldingGasDirectionsMemoizedSerializedSize);
      }
      for (int i = 0; i < shieldingGasDirections_.size(); i++) {
        output.writeDoubleNoTag(shieldingGasDirections_.getDouble(i));
      }
      if (getMaterialFeedDirectionsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(materialFeedDirectionsMemoizedSerializedSize);
      }
      for (int i = 0; i < materialFeedDirections_.size(); i++) {
        output.writeDoubleNoTag(materialFeedDirections_.getDouble(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Double.doubleToRawLongBits(preheatingTemperaturInDgC_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, preheatingTemperaturInDgC_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getShieldingGasDirectionsList().size();
        size += dataSize;
        if (!getShieldingGasDirectionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        shieldingGasDirectionsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getMaterialFeedDirectionsList().size();
        size += dataSize;
        if (!getMaterialFeedDirectionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        materialFeedDirectionsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof open_vector_format.OpenVectorFormat.JobParameters)) {
        return super.equals(obj);
      }
      open_vector_format.OpenVectorFormat.JobParameters other = (open_vector_format.OpenVectorFormat.JobParameters) obj;

      if (java.lang.Double.doubleToLongBits(getPreheatingTemperaturInDgC())
          != java.lang.Double.doubleToLongBits(
              other.getPreheatingTemperaturInDgC())) return false;
      if (!getShieldingGasDirectionsList()
          .equals(other.getShieldingGasDirectionsList())) return false;
      if (!getMaterialFeedDirectionsList()
          .equals(other.getMaterialFeedDirectionsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PREHEATING_TEMPERATUR_IN_DG_C_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPreheatingTemperaturInDgC()));
      if (getShieldingGasDirectionsCount() > 0) {
        hash = (37 * hash) + SHIELDING_GAS_DIRECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getShieldingGasDirectionsList().hashCode();
      }
      if (getMaterialFeedDirectionsCount() > 0) {
        hash = (37 * hash) + MATERIAL_FEED_DIRECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getMaterialFeedDirectionsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static open_vector_format.OpenVectorFormat.JobParameters parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.JobParameters parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.JobParameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.JobParameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.JobParameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.JobParameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.JobParameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.JobParameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static open_vector_format.OpenVectorFormat.JobParameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static open_vector_format.OpenVectorFormat.JobParameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.JobParameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.JobParameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(open_vector_format.OpenVectorFormat.JobParameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *Process parameters applying to the job as a whole
     * </pre>
     *
     * Protobuf type {@code open_vector_format.JobParameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:open_vector_format.JobParameters)
        open_vector_format.OpenVectorFormat.JobParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_JobParameters_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_JobParameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.JobParameters.class, open_vector_format.OpenVectorFormat.JobParameters.Builder.class);
      }

      // Construct using open_vector_format.OpenVectorFormat.JobParameters.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        preheatingTemperaturInDgC_ = 0D;
        shieldingGasDirections_ = emptyDoubleList();
        materialFeedDirections_ = emptyDoubleList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_JobParameters_descriptor;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.JobParameters getDefaultInstanceForType() {
        return open_vector_format.OpenVectorFormat.JobParameters.getDefaultInstance();
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.JobParameters build() {
        open_vector_format.OpenVectorFormat.JobParameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.JobParameters buildPartial() {
        open_vector_format.OpenVectorFormat.JobParameters result = new open_vector_format.OpenVectorFormat.JobParameters(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(open_vector_format.OpenVectorFormat.JobParameters result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.preheatingTemperaturInDgC_ = preheatingTemperaturInDgC_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          shieldingGasDirections_.makeImmutable();
          result.shieldingGasDirections_ = shieldingGasDirections_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          materialFeedDirections_.makeImmutable();
          result.materialFeedDirections_ = materialFeedDirections_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof open_vector_format.OpenVectorFormat.JobParameters) {
          return mergeFrom((open_vector_format.OpenVectorFormat.JobParameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(open_vector_format.OpenVectorFormat.JobParameters other) {
        if (other == open_vector_format.OpenVectorFormat.JobParameters.getDefaultInstance()) return this;
        if (other.getPreheatingTemperaturInDgC() != 0D) {
          setPreheatingTemperaturInDgC(other.getPreheatingTemperaturInDgC());
        }
        if (!other.shieldingGasDirections_.isEmpty()) {
          if (shieldingGasDirections_.isEmpty()) {
            shieldingGasDirections_ = other.shieldingGasDirections_;
            shieldingGasDirections_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensureShieldingGasDirectionsIsMutable();
            shieldingGasDirections_.addAll(other.shieldingGasDirections_);
          }
          onChanged();
        }
        if (!other.materialFeedDirections_.isEmpty()) {
          if (materialFeedDirections_.isEmpty()) {
            materialFeedDirections_ = other.materialFeedDirections_;
            materialFeedDirections_.makeImmutable();
            bitField0_ |= 0x00000004;
          } else {
            ensureMaterialFeedDirectionsIsMutable();
            materialFeedDirections_.addAll(other.materialFeedDirections_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                preheatingTemperaturInDgC_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                double v = input.readDouble();
                ensureShieldingGasDirectionsIsMutable();
                shieldingGasDirections_.addDouble(v);
                break;
              } // case 17
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureShieldingGasDirectionsIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  shieldingGasDirections_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 25: {
                double v = input.readDouble();
                ensureMaterialFeedDirectionsIsMutable();
                materialFeedDirections_.addDouble(v);
                break;
              } // case 25
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureMaterialFeedDirectionsIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  materialFeedDirections_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double preheatingTemperaturInDgC_ ;
      /**
       * <pre>
       *setpoint temperature of a globally effective heating system (e.g. build chamber/substrate plate)
       * </pre>
       *
       * <code>double preheating_temperatur_in_dg_c = 1;</code>
       * @return The preheatingTemperaturInDgC.
       */
      @java.lang.Override
      public double getPreheatingTemperaturInDgC() {
        return preheatingTemperaturInDgC_;
      }
      /**
       * <pre>
       *setpoint temperature of a globally effective heating system (e.g. build chamber/substrate plate)
       * </pre>
       *
       * <code>double preheating_temperatur_in_dg_c = 1;</code>
       * @param value The preheatingTemperaturInDgC to set.
       * @return This builder for chaining.
       */
      public Builder setPreheatingTemperaturInDgC(double value) {

        preheatingTemperaturInDgC_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *setpoint temperature of a globally effective heating system (e.g. build chamber/substrate plate)
       * </pre>
       *
       * <code>double preheating_temperatur_in_dg_c = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPreheatingTemperaturInDgC() {
        bitField0_ = (bitField0_ & ~0x00000001);
        preheatingTemperaturInDgC_ = 0D;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList shieldingGasDirections_ = emptyDoubleList();
      private void ensureShieldingGasDirectionsIsMutable() {
        if (!shieldingGasDirections_.isModifiable()) {
          shieldingGasDirections_ = makeMutableCopy(shieldingGasDirections_);
        }
        bitField0_ |= 0x00000002;
      }
      private void ensureShieldingGasDirectionsIsMutable(int capacity) {
        if (!shieldingGasDirections_.isModifiable()) {
          shieldingGasDirections_ = makeMutableCopy(shieldingGasDirections_, capacity);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <pre>
       *vector of main direction of a shielding gas flow (xy or xyz)
       * </pre>
       *
       * <code>repeated double shielding_gas_directions = 2;</code>
       * @return A list containing the shieldingGasDirections.
       */
      public java.util.List<java.lang.Double>
          getShieldingGasDirectionsList() {
        shieldingGasDirections_.makeImmutable();
        return shieldingGasDirections_;
      }
      /**
       * <pre>
       *vector of main direction of a shielding gas flow (xy or xyz)
       * </pre>
       *
       * <code>repeated double shielding_gas_directions = 2;</code>
       * @return The count of shieldingGasDirections.
       */
      public int getShieldingGasDirectionsCount() {
        return shieldingGasDirections_.size();
      }
      /**
       * <pre>
       *vector of main direction of a shielding gas flow (xy or xyz)
       * </pre>
       *
       * <code>repeated double shielding_gas_directions = 2;</code>
       * @param index The index of the element to return.
       * @return The shieldingGasDirections at the given index.
       */
      public double getShieldingGasDirections(int index) {
        return shieldingGasDirections_.getDouble(index);
      }
      /**
       * <pre>
       *vector of main direction of a shielding gas flow (xy or xyz)
       * </pre>
       *
       * <code>repeated double shielding_gas_directions = 2;</code>
       * @param index The index to set the value at.
       * @param value The shieldingGasDirections to set.
       * @return This builder for chaining.
       */
      public Builder setShieldingGasDirections(
          int index, double value) {

        ensureShieldingGasDirectionsIsMutable();
        shieldingGasDirections_.setDouble(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *vector of main direction of a shielding gas flow (xy or xyz)
       * </pre>
       *
       * <code>repeated double shielding_gas_directions = 2;</code>
       * @param value The shieldingGasDirections to add.
       * @return This builder for chaining.
       */
      public Builder addShieldingGasDirections(double value) {

        ensureShieldingGasDirectionsIsMutable();
        shieldingGasDirections_.addDouble(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *vector of main direction of a shielding gas flow (xy or xyz)
       * </pre>
       *
       * <code>repeated double shielding_gas_directions = 2;</code>
       * @param values The shieldingGasDirections to add.
       * @return This builder for chaining.
       */
      public Builder addAllShieldingGasDirections(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureShieldingGasDirectionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, shieldingGasDirections_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *vector of main direction of a shielding gas flow (xy or xyz)
       * </pre>
       *
       * <code>repeated double shielding_gas_directions = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearShieldingGasDirections() {
        shieldingGasDirections_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList materialFeedDirections_ = emptyDoubleList();
      private void ensureMaterialFeedDirectionsIsMutable() {
        if (!materialFeedDirections_.isModifiable()) {
          materialFeedDirections_ = makeMutableCopy(materialFeedDirections_);
        }
        bitField0_ |= 0x00000004;
      }
      private void ensureMaterialFeedDirectionsIsMutable(int capacity) {
        if (!materialFeedDirections_.isModifiable()) {
          materialFeedDirections_ = makeMutableCopy(materialFeedDirections_, capacity);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <pre>
       *vector of main direction of a material feed (e.g. powder coater, powder feed, extrusion nozzle) (xy or xyz)
       * </pre>
       *
       * <code>repeated double material_feed_directions = 3;</code>
       * @return A list containing the materialFeedDirections.
       */
      public java.util.List<java.lang.Double>
          getMaterialFeedDirectionsList() {
        materialFeedDirections_.makeImmutable();
        return materialFeedDirections_;
      }
      /**
       * <pre>
       *vector of main direction of a material feed (e.g. powder coater, powder feed, extrusion nozzle) (xy or xyz)
       * </pre>
       *
       * <code>repeated double material_feed_directions = 3;</code>
       * @return The count of materialFeedDirections.
       */
      public int getMaterialFeedDirectionsCount() {
        return materialFeedDirections_.size();
      }
      /**
       * <pre>
       *vector of main direction of a material feed (e.g. powder coater, powder feed, extrusion nozzle) (xy or xyz)
       * </pre>
       *
       * <code>repeated double material_feed_directions = 3;</code>
       * @param index The index of the element to return.
       * @return The materialFeedDirections at the given index.
       */
      public double getMaterialFeedDirections(int index) {
        return materialFeedDirections_.getDouble(index);
      }
      /**
       * <pre>
       *vector of main direction of a material feed (e.g. powder coater, powder feed, extrusion nozzle) (xy or xyz)
       * </pre>
       *
       * <code>repeated double material_feed_directions = 3;</code>
       * @param index The index to set the value at.
       * @param value The materialFeedDirections to set.
       * @return This builder for chaining.
       */
      public Builder setMaterialFeedDirections(
          int index, double value) {

        ensureMaterialFeedDirectionsIsMutable();
        materialFeedDirections_.setDouble(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *vector of main direction of a material feed (e.g. powder coater, powder feed, extrusion nozzle) (xy or xyz)
       * </pre>
       *
       * <code>repeated double material_feed_directions = 3;</code>
       * @param value The materialFeedDirections to add.
       * @return This builder for chaining.
       */
      public Builder addMaterialFeedDirections(double value) {

        ensureMaterialFeedDirectionsIsMutable();
        materialFeedDirections_.addDouble(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *vector of main direction of a material feed (e.g. powder coater, powder feed, extrusion nozzle) (xy or xyz)
       * </pre>
       *
       * <code>repeated double material_feed_directions = 3;</code>
       * @param values The materialFeedDirections to add.
       * @return This builder for chaining.
       */
      public Builder addAllMaterialFeedDirections(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureMaterialFeedDirectionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, materialFeedDirections_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *vector of main direction of a material feed (e.g. powder coater, powder feed, extrusion nozzle) (xy or xyz)
       * </pre>
       *
       * <code>repeated double material_feed_directions = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaterialFeedDirections() {
        materialFeedDirections_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:open_vector_format.JobParameters)
    }

    // @@protoc_insertion_point(class_scope:open_vector_format.JobParameters)
    private static final open_vector_format.OpenVectorFormat.JobParameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.JobParameters();
    }

    public static open_vector_format.OpenVectorFormat.JobParameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JobParameters>
        PARSER = new com.google.protobuf.AbstractParser<JobParameters>() {
      @java.lang.Override
      public JobParameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<JobParameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JobParameters> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public open_vector_format.OpenVectorFormat.JobParameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MarkingParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:open_vector_format.MarkingParams)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float laser_power_in_w = 1;</code>
     * @return The laserPowerInW.
     */
    float getLaserPowerInW();

    /**
     * <code>float laser_speed_in_mm_per_s = 2;</code>
     * @return The laserSpeedInMmPerS.
     */
    float getLaserSpeedInMmPerS();

    /**
     * <code>float laser_focus_shift_in_mm = 3;</code>
     * @return The laserFocusShiftInMm.
     */
    float getLaserFocusShiftInMm();

    /**
     * <code>float point_exposure_time_in_us = 4;</code>
     * @return The pointExposureTimeInUs.
     */
    float getPointExposureTimeInUs();

    /**
     * <code>float jump_speed_in_mm_s = 5;</code>
     * @return The jumpSpeedInMmS.
     */
    float getJumpSpeedInMmS();

    /**
     * <pre>
     *gives the number of exposure cycles executed
     *applies for points only, for movement distance and speed implicitly define this
     * </pre>
     *
     * <code>float point_exposure_repetitions = 6;</code>
     * @return The pointExposureRepetitions.
     */
    float getPointExposureRepetitions();

    /**
     * <pre>
     *repition rate of the exposure cycle, e.g. pulses/bursts etc. per second
     *0 Hz is defined as continous wave (cw)
     * </pre>
     *
     * <code>uint64 repetition_rate_in_hz = 7;</code>
     * @return The repetitionRateInHz.
     */
    long getRepetitionRateInHz();

    /**
     * <pre>
     *for burst mode, number of pulses per burst
     *0 is defined as no burst mode
     *pulses in the burst are reapeated with oscillator frequency, pulseDurationInFemtoseconds applies to each pulse
     * </pre>
     *
     * <code>uint64 laser_pulses_per_burst = 8;</code>
     * @return The laserPulsesPerBurst.
     */
    long getLaserPulsesPerBurst();

    /**
     * <pre>
     *length of one pulse, defines the duty cycle together with repetitionRateInHz and laserPowerInW
     * </pre>
     *
     * <code>uint64 pulseDurationInFemtoseconds = 9;</code>
     * @return The pulseDurationInFemtoseconds.
     */
    long getPulseDurationInFemtoseconds();

    /**
     * <pre>
     *marking mode switches between normal marking and skywriting modes
     * </pre>
     *
     * <code>.open_vector_format.MarkingParams.MarkingMode marking_mode = 10;</code>
     * @return The enum numeric value on the wire for markingMode.
     */
    int getMarkingModeValue();
    /**
     * <pre>
     *marking mode switches between normal marking and skywriting modes
     * </pre>
     *
     * <code>.open_vector_format.MarkingParams.MarkingMode marking_mode = 10;</code>
     * @return The markingMode.
     */
    open_vector_format.OpenVectorFormat.MarkingParams.MarkingMode getMarkingMode();

    /**
     * <pre>
     *Parameters for marking without Skywriting
     * </pre>
     *
     * <code>float jump_delay_in_us = 11;</code>
     * @return The jumpDelayInUs.
     */
    float getJumpDelayInUs();

    /**
     * <code>float laser_off_delay_in_us = 12;</code>
     * @return The laserOffDelayInUs.
     */
    float getLaserOffDelayInUs();

    /**
     * <code>float laser_on_delay_in_us = 13;</code>
     * @return The laserOnDelayInUs.
     */
    float getLaserOnDelayInUs();

    /**
     * <code>float mark_delay_in_us = 14;</code>
     * @return The markDelayInUs.
     */
    float getMarkDelayInUs();

    /**
     * <code>float polygon_delay_in_us = 15;</code>
     * @return The polygonDelayInUs.
     */
    float getPolygonDelayInUs();

    /**
     * <pre>
     *Parameters for marking with Skywriting
     * </pre>
     *
     * <code>float time_lag_in_us = 16;</code>
     * @return The timeLagInUs.
     */
    float getTimeLagInUs();

    /**
     * <code>float laser_on_shift_in_us = 17;</code>
     * @return The laserOnShiftInUs.
     */
    float getLaserOnShiftInUs();

    /**
     * <code>float limit = 18;</code>
     * @return The limit.
     */
    float getLimit();

    /**
     * <code>float n_prev_in_us = 19;</code>
     * @return The nPrevInUs.
     */
    float getNPrevInUs();

    /**
     * <code>float n_post_in_us = 20;</code>
     * @return The nPostInUs.
     */
    float getNPostInUs();

    /**
     * <pre>
     *Parameters for marking with Wobble
     * </pre>
     *
     * <code>float wob_frequency_in_hz = 21;</code>
     * @return The wobFrequencyInHz.
     */
    float getWobFrequencyInHz();

    /**
     * <code>float wob_amp_long_in_mm = 22;</code>
     * @return The wobAmpLongInMm.
     */
    float getWobAmpLongInMm();

    /**
     * <code>float wob_amp_trans_in_mm = 23;</code>
     * @return The wobAmpTransInMm.
     */
    float getWobAmpTransInMm();

    /**
     * <code>.open_vector_format.MarkingParams.WobbleMode wobble_mode = 24;</code>
     * @return The enum numeric value on the wire for wobbleMode.
     */
    int getWobbleModeValue();
    /**
     * <code>.open_vector_format.MarkingParams.WobbleMode wobble_mode = 24;</code>
     * @return The wobbleMode.
     */
    open_vector_format.OpenVectorFormat.MarkingParams.WobbleMode getWobbleMode();

    /**
     * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
     * @return Whether the powerGradient field is set.
     */
    boolean hasPowerGradient();
    /**
     * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
     * @return The powerGradient.
     */
    open_vector_format.OpenVectorFormat.PowerGradientParams getPowerGradient();
    /**
     * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
     */
    open_vector_format.OpenVectorFormat.PowerGradientParamsOrBuilder getPowerGradientOrBuilder();

    /**
     * <pre>
     *meta data: custom, human readable name of this marking parameter set
     * </pre>
     *
     * <code>string name = 26;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     *meta data: custom, human readable name of this marking parameter set
     * </pre>
     *
     * <code>string name = 26;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * <pre>
   *Parameters controlling the tool (e.g. laser beam) behaviour
   * </pre>
   *
   * Protobuf type {@code open_vector_format.MarkingParams}
   */
  public static final class MarkingParams extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:open_vector_format.MarkingParams)
      MarkingParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MarkingParams.newBuilder() to construct.
    private MarkingParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MarkingParams() {
      markingMode_ = 0;
      wobbleMode_ = 0;
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MarkingParams();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_MarkingParams_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_MarkingParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              open_vector_format.OpenVectorFormat.MarkingParams.class, open_vector_format.OpenVectorFormat.MarkingParams.Builder.class);
    }

    /**
     * Protobuf enum {@code open_vector_format.MarkingParams.MarkingMode}
     */
    public enum MarkingMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NO_SKY = 0;</code>
       */
      NO_SKY(0),
      /**
       * <pre>
       *Skywriting modes 1-3
       * </pre>
       *
       * <code>SKY_1 = 1;</code>
       */
      SKY_1(1),
      /**
       * <code>SKY_2 = 2;</code>
       */
      SKY_2(2),
      /**
       * <code>SKY_3 = 3;</code>
       */
      SKY_3(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NO_SKY = 0;</code>
       */
      public static final int NO_SKY_VALUE = 0;
      /**
       * <pre>
       *Skywriting modes 1-3
       * </pre>
       *
       * <code>SKY_1 = 1;</code>
       */
      public static final int SKY_1_VALUE = 1;
      /**
       * <code>SKY_2 = 2;</code>
       */
      public static final int SKY_2_VALUE = 2;
      /**
       * <code>SKY_3 = 3;</code>
       */
      public static final int SKY_3_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MarkingMode valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static MarkingMode forNumber(int value) {
        switch (value) {
          case 0: return NO_SKY;
          case 1: return SKY_1;
          case 2: return SKY_2;
          case 3: return SKY_3;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MarkingMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          MarkingMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MarkingMode>() {
              public MarkingMode findValueByNumber(int number) {
                return MarkingMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.MarkingParams.getDescriptor().getEnumTypes().get(0);
      }

      private static final MarkingMode[] VALUES = values();

      public static MarkingMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private MarkingMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:open_vector_format.MarkingParams.MarkingMode)
    }

    /**
     * Protobuf enum {@code open_vector_format.MarkingParams.WobbleMode}
     */
    public enum WobbleMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NO_WOBBLE = 0;</code>
       */
      NO_WOBBLE(0),
      /**
       * <pre>
       *ellipse-shape wobble movement perpendicular to the current movement direction
       * </pre>
       *
       * <code>ELLIPSE_WOBBLE = 1;</code>
       */
      ELLIPSE_WOBBLE(1),
      /**
       * <pre>
       *8-shape wobble movement perpendicular to the current movement direction
       * </pre>
       *
       * <code>STANDING_EIGHT_WOBBLE = 2;</code>
       */
      STANDING_EIGHT_WOBBLE(2),
      /**
       * <pre>
       *8-shape wobble movement parallel to the current movement direction
       * </pre>
       *
       * <code>LYING_EIGHT_WOBBLE = 3;</code>
       */
      LYING_EIGHT_WOBBLE(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NO_WOBBLE = 0;</code>
       */
      public static final int NO_WOBBLE_VALUE = 0;
      /**
       * <pre>
       *ellipse-shape wobble movement perpendicular to the current movement direction
       * </pre>
       *
       * <code>ELLIPSE_WOBBLE = 1;</code>
       */
      public static final int ELLIPSE_WOBBLE_VALUE = 1;
      /**
       * <pre>
       *8-shape wobble movement perpendicular to the current movement direction
       * </pre>
       *
       * <code>STANDING_EIGHT_WOBBLE = 2;</code>
       */
      public static final int STANDING_EIGHT_WOBBLE_VALUE = 2;
      /**
       * <pre>
       *8-shape wobble movement parallel to the current movement direction
       * </pre>
       *
       * <code>LYING_EIGHT_WOBBLE = 3;</code>
       */
      public static final int LYING_EIGHT_WOBBLE_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static WobbleMode valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static WobbleMode forNumber(int value) {
        switch (value) {
          case 0: return NO_WOBBLE;
          case 1: return ELLIPSE_WOBBLE;
          case 2: return STANDING_EIGHT_WOBBLE;
          case 3: return LYING_EIGHT_WOBBLE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<WobbleMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          WobbleMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<WobbleMode>() {
              public WobbleMode findValueByNumber(int number) {
                return WobbleMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.MarkingParams.getDescriptor().getEnumTypes().get(1);
      }

      private static final WobbleMode[] VALUES = values();

      public static WobbleMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private WobbleMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:open_vector_format.MarkingParams.WobbleMode)
    }

    private int bitField0_;
    public static final int LASER_POWER_IN_W_FIELD_NUMBER = 1;
    private float laserPowerInW_ = 0F;
    /**
     * <code>float laser_power_in_w = 1;</code>
     * @return The laserPowerInW.
     */
    @java.lang.Override
    public float getLaserPowerInW() {
      return laserPowerInW_;
    }

    public static final int LASER_SPEED_IN_MM_PER_S_FIELD_NUMBER = 2;
    private float laserSpeedInMmPerS_ = 0F;
    /**
     * <code>float laser_speed_in_mm_per_s = 2;</code>
     * @return The laserSpeedInMmPerS.
     */
    @java.lang.Override
    public float getLaserSpeedInMmPerS() {
      return laserSpeedInMmPerS_;
    }

    public static final int LASER_FOCUS_SHIFT_IN_MM_FIELD_NUMBER = 3;
    private float laserFocusShiftInMm_ = 0F;
    /**
     * <code>float laser_focus_shift_in_mm = 3;</code>
     * @return The laserFocusShiftInMm.
     */
    @java.lang.Override
    public float getLaserFocusShiftInMm() {
      return laserFocusShiftInMm_;
    }

    public static final int POINT_EXPOSURE_TIME_IN_US_FIELD_NUMBER = 4;
    private float pointExposureTimeInUs_ = 0F;
    /**
     * <code>float point_exposure_time_in_us = 4;</code>
     * @return The pointExposureTimeInUs.
     */
    @java.lang.Override
    public float getPointExposureTimeInUs() {
      return pointExposureTimeInUs_;
    }

    public static final int JUMP_SPEED_IN_MM_S_FIELD_NUMBER = 5;
    private float jumpSpeedInMmS_ = 0F;
    /**
     * <code>float jump_speed_in_mm_s = 5;</code>
     * @return The jumpSpeedInMmS.
     */
    @java.lang.Override
    public float getJumpSpeedInMmS() {
      return jumpSpeedInMmS_;
    }

    public static final int POINT_EXPOSURE_REPETITIONS_FIELD_NUMBER = 6;
    private float pointExposureRepetitions_ = 0F;
    /**
     * <pre>
     *gives the number of exposure cycles executed
     *applies for points only, for movement distance and speed implicitly define this
     * </pre>
     *
     * <code>float point_exposure_repetitions = 6;</code>
     * @return The pointExposureRepetitions.
     */
    @java.lang.Override
    public float getPointExposureRepetitions() {
      return pointExposureRepetitions_;
    }

    public static final int REPETITION_RATE_IN_HZ_FIELD_NUMBER = 7;
    private long repetitionRateInHz_ = 0L;
    /**
     * <pre>
     *repition rate of the exposure cycle, e.g. pulses/bursts etc. per second
     *0 Hz is defined as continous wave (cw)
     * </pre>
     *
     * <code>uint64 repetition_rate_in_hz = 7;</code>
     * @return The repetitionRateInHz.
     */
    @java.lang.Override
    public long getRepetitionRateInHz() {
      return repetitionRateInHz_;
    }

    public static final int LASER_PULSES_PER_BURST_FIELD_NUMBER = 8;
    private long laserPulsesPerBurst_ = 0L;
    /**
     * <pre>
     *for burst mode, number of pulses per burst
     *0 is defined as no burst mode
     *pulses in the burst are reapeated with oscillator frequency, pulseDurationInFemtoseconds applies to each pulse
     * </pre>
     *
     * <code>uint64 laser_pulses_per_burst = 8;</code>
     * @return The laserPulsesPerBurst.
     */
    @java.lang.Override
    public long getLaserPulsesPerBurst() {
      return laserPulsesPerBurst_;
    }

    public static final int PULSEDURATIONINFEMTOSECONDS_FIELD_NUMBER = 9;
    private long pulseDurationInFemtoseconds_ = 0L;
    /**
     * <pre>
     *length of one pulse, defines the duty cycle together with repetitionRateInHz and laserPowerInW
     * </pre>
     *
     * <code>uint64 pulseDurationInFemtoseconds = 9;</code>
     * @return The pulseDurationInFemtoseconds.
     */
    @java.lang.Override
    public long getPulseDurationInFemtoseconds() {
      return pulseDurationInFemtoseconds_;
    }

    public static final int MARKING_MODE_FIELD_NUMBER = 10;
    private int markingMode_ = 0;
    /**
     * <pre>
     *marking mode switches between normal marking and skywriting modes
     * </pre>
     *
     * <code>.open_vector_format.MarkingParams.MarkingMode marking_mode = 10;</code>
     * @return The enum numeric value on the wire for markingMode.
     */
    @java.lang.Override public int getMarkingModeValue() {
      return markingMode_;
    }
    /**
     * <pre>
     *marking mode switches between normal marking and skywriting modes
     * </pre>
     *
     * <code>.open_vector_format.MarkingParams.MarkingMode marking_mode = 10;</code>
     * @return The markingMode.
     */
    @java.lang.Override public open_vector_format.OpenVectorFormat.MarkingParams.MarkingMode getMarkingMode() {
      open_vector_format.OpenVectorFormat.MarkingParams.MarkingMode result = open_vector_format.OpenVectorFormat.MarkingParams.MarkingMode.forNumber(markingMode_);
      return result == null ? open_vector_format.OpenVectorFormat.MarkingParams.MarkingMode.UNRECOGNIZED : result;
    }

    public static final int JUMP_DELAY_IN_US_FIELD_NUMBER = 11;
    private float jumpDelayInUs_ = 0F;
    /**
     * <pre>
     *Parameters for marking without Skywriting
     * </pre>
     *
     * <code>float jump_delay_in_us = 11;</code>
     * @return The jumpDelayInUs.
     */
    @java.lang.Override
    public float getJumpDelayInUs() {
      return jumpDelayInUs_;
    }

    public static final int LASER_OFF_DELAY_IN_US_FIELD_NUMBER = 12;
    private float laserOffDelayInUs_ = 0F;
    /**
     * <code>float laser_off_delay_in_us = 12;</code>
     * @return The laserOffDelayInUs.
     */
    @java.lang.Override
    public float getLaserOffDelayInUs() {
      return laserOffDelayInUs_;
    }

    public static final int LASER_ON_DELAY_IN_US_FIELD_NUMBER = 13;
    private float laserOnDelayInUs_ = 0F;
    /**
     * <code>float laser_on_delay_in_us = 13;</code>
     * @return The laserOnDelayInUs.
     */
    @java.lang.Override
    public float getLaserOnDelayInUs() {
      return laserOnDelayInUs_;
    }

    public static final int MARK_DELAY_IN_US_FIELD_NUMBER = 14;
    private float markDelayInUs_ = 0F;
    /**
     * <code>float mark_delay_in_us = 14;</code>
     * @return The markDelayInUs.
     */
    @java.lang.Override
    public float getMarkDelayInUs() {
      return markDelayInUs_;
    }

    public static final int POLYGON_DELAY_IN_US_FIELD_NUMBER = 15;
    private float polygonDelayInUs_ = 0F;
    /**
     * <code>float polygon_delay_in_us = 15;</code>
     * @return The polygonDelayInUs.
     */
    @java.lang.Override
    public float getPolygonDelayInUs() {
      return polygonDelayInUs_;
    }

    public static final int TIME_LAG_IN_US_FIELD_NUMBER = 16;
    private float timeLagInUs_ = 0F;
    /**
     * <pre>
     *Parameters for marking with Skywriting
     * </pre>
     *
     * <code>float time_lag_in_us = 16;</code>
     * @return The timeLagInUs.
     */
    @java.lang.Override
    public float getTimeLagInUs() {
      return timeLagInUs_;
    }

    public static final int LASER_ON_SHIFT_IN_US_FIELD_NUMBER = 17;
    private float laserOnShiftInUs_ = 0F;
    /**
     * <code>float laser_on_shift_in_us = 17;</code>
     * @return The laserOnShiftInUs.
     */
    @java.lang.Override
    public float getLaserOnShiftInUs() {
      return laserOnShiftInUs_;
    }

    public static final int LIMIT_FIELD_NUMBER = 18;
    private float limit_ = 0F;
    /**
     * <code>float limit = 18;</code>
     * @return The limit.
     */
    @java.lang.Override
    public float getLimit() {
      return limit_;
    }

    public static final int N_PREV_IN_US_FIELD_NUMBER = 19;
    private float nPrevInUs_ = 0F;
    /**
     * <code>float n_prev_in_us = 19;</code>
     * @return The nPrevInUs.
     */
    @java.lang.Override
    public float getNPrevInUs() {
      return nPrevInUs_;
    }

    public static final int N_POST_IN_US_FIELD_NUMBER = 20;
    private float nPostInUs_ = 0F;
    /**
     * <code>float n_post_in_us = 20;</code>
     * @return The nPostInUs.
     */
    @java.lang.Override
    public float getNPostInUs() {
      return nPostInUs_;
    }

    public static final int WOB_FREQUENCY_IN_HZ_FIELD_NUMBER = 21;
    private float wobFrequencyInHz_ = 0F;
    /**
     * <pre>
     *Parameters for marking with Wobble
     * </pre>
     *
     * <code>float wob_frequency_in_hz = 21;</code>
     * @return The wobFrequencyInHz.
     */
    @java.lang.Override
    public float getWobFrequencyInHz() {
      return wobFrequencyInHz_;
    }

    public static final int WOB_AMP_LONG_IN_MM_FIELD_NUMBER = 22;
    private float wobAmpLongInMm_ = 0F;
    /**
     * <code>float wob_amp_long_in_mm = 22;</code>
     * @return The wobAmpLongInMm.
     */
    @java.lang.Override
    public float getWobAmpLongInMm() {
      return wobAmpLongInMm_;
    }

    public static final int WOB_AMP_TRANS_IN_MM_FIELD_NUMBER = 23;
    private float wobAmpTransInMm_ = 0F;
    /**
     * <code>float wob_amp_trans_in_mm = 23;</code>
     * @return The wobAmpTransInMm.
     */
    @java.lang.Override
    public float getWobAmpTransInMm() {
      return wobAmpTransInMm_;
    }

    public static final int WOBBLE_MODE_FIELD_NUMBER = 24;
    private int wobbleMode_ = 0;
    /**
     * <code>.open_vector_format.MarkingParams.WobbleMode wobble_mode = 24;</code>
     * @return The enum numeric value on the wire for wobbleMode.
     */
    @java.lang.Override public int getWobbleModeValue() {
      return wobbleMode_;
    }
    /**
     * <code>.open_vector_format.MarkingParams.WobbleMode wobble_mode = 24;</code>
     * @return The wobbleMode.
     */
    @java.lang.Override public open_vector_format.OpenVectorFormat.MarkingParams.WobbleMode getWobbleMode() {
      open_vector_format.OpenVectorFormat.MarkingParams.WobbleMode result = open_vector_format.OpenVectorFormat.MarkingParams.WobbleMode.forNumber(wobbleMode_);
      return result == null ? open_vector_format.OpenVectorFormat.MarkingParams.WobbleMode.UNRECOGNIZED : result;
    }

    public static final int POWERGRADIENT_FIELD_NUMBER = 25;
    private open_vector_format.OpenVectorFormat.PowerGradientParams powerGradient_;
    /**
     * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
     * @return Whether the powerGradient field is set.
     */
    @java.lang.Override
    public boolean hasPowerGradient() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
     * @return The powerGradient.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.PowerGradientParams getPowerGradient() {
      return powerGradient_ == null ? open_vector_format.OpenVectorFormat.PowerGradientParams.getDefaultInstance() : powerGradient_;
    }
    /**
     * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.PowerGradientParamsOrBuilder getPowerGradientOrBuilder() {
      return powerGradient_ == null ? open_vector_format.OpenVectorFormat.PowerGradientParams.getDefaultInstance() : powerGradient_;
    }

    public static final int NAME_FIELD_NUMBER = 26;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     *meta data: custom, human readable name of this marking parameter set
     * </pre>
     *
     * <code>string name = 26;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *meta data: custom, human readable name of this marking parameter set
     * </pre>
     *
     * <code>string name = 26;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(laserPowerInW_) != 0) {
        output.writeFloat(1, laserPowerInW_);
      }
      if (java.lang.Float.floatToRawIntBits(laserSpeedInMmPerS_) != 0) {
        output.writeFloat(2, laserSpeedInMmPerS_);
      }
      if (java.lang.Float.floatToRawIntBits(laserFocusShiftInMm_) != 0) {
        output.writeFloat(3, laserFocusShiftInMm_);
      }
      if (java.lang.Float.floatToRawIntBits(pointExposureTimeInUs_) != 0) {
        output.writeFloat(4, pointExposureTimeInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(jumpSpeedInMmS_) != 0) {
        output.writeFloat(5, jumpSpeedInMmS_);
      }
      if (java.lang.Float.floatToRawIntBits(pointExposureRepetitions_) != 0) {
        output.writeFloat(6, pointExposureRepetitions_);
      }
      if (repetitionRateInHz_ != 0L) {
        output.writeUInt64(7, repetitionRateInHz_);
      }
      if (laserPulsesPerBurst_ != 0L) {
        output.writeUInt64(8, laserPulsesPerBurst_);
      }
      if (pulseDurationInFemtoseconds_ != 0L) {
        output.writeUInt64(9, pulseDurationInFemtoseconds_);
      }
      if (markingMode_ != open_vector_format.OpenVectorFormat.MarkingParams.MarkingMode.NO_SKY.getNumber()) {
        output.writeEnum(10, markingMode_);
      }
      if (java.lang.Float.floatToRawIntBits(jumpDelayInUs_) != 0) {
        output.writeFloat(11, jumpDelayInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(laserOffDelayInUs_) != 0) {
        output.writeFloat(12, laserOffDelayInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(laserOnDelayInUs_) != 0) {
        output.writeFloat(13, laserOnDelayInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(markDelayInUs_) != 0) {
        output.writeFloat(14, markDelayInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(polygonDelayInUs_) != 0) {
        output.writeFloat(15, polygonDelayInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(timeLagInUs_) != 0) {
        output.writeFloat(16, timeLagInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(laserOnShiftInUs_) != 0) {
        output.writeFloat(17, laserOnShiftInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(limit_) != 0) {
        output.writeFloat(18, limit_);
      }
      if (java.lang.Float.floatToRawIntBits(nPrevInUs_) != 0) {
        output.writeFloat(19, nPrevInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(nPostInUs_) != 0) {
        output.writeFloat(20, nPostInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(wobFrequencyInHz_) != 0) {
        output.writeFloat(21, wobFrequencyInHz_);
      }
      if (java.lang.Float.floatToRawIntBits(wobAmpLongInMm_) != 0) {
        output.writeFloat(22, wobAmpLongInMm_);
      }
      if (java.lang.Float.floatToRawIntBits(wobAmpTransInMm_) != 0) {
        output.writeFloat(23, wobAmpTransInMm_);
      }
      if (wobbleMode_ != open_vector_format.OpenVectorFormat.MarkingParams.WobbleMode.NO_WOBBLE.getNumber()) {
        output.writeEnum(24, wobbleMode_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(25, getPowerGradient());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 26, name_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(laserPowerInW_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, laserPowerInW_);
      }
      if (java.lang.Float.floatToRawIntBits(laserSpeedInMmPerS_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, laserSpeedInMmPerS_);
      }
      if (java.lang.Float.floatToRawIntBits(laserFocusShiftInMm_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, laserFocusShiftInMm_);
      }
      if (java.lang.Float.floatToRawIntBits(pointExposureTimeInUs_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, pointExposureTimeInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(jumpSpeedInMmS_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, jumpSpeedInMmS_);
      }
      if (java.lang.Float.floatToRawIntBits(pointExposureRepetitions_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, pointExposureRepetitions_);
      }
      if (repetitionRateInHz_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, repetitionRateInHz_);
      }
      if (laserPulsesPerBurst_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, laserPulsesPerBurst_);
      }
      if (pulseDurationInFemtoseconds_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, pulseDurationInFemtoseconds_);
      }
      if (markingMode_ != open_vector_format.OpenVectorFormat.MarkingParams.MarkingMode.NO_SKY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, markingMode_);
      }
      if (java.lang.Float.floatToRawIntBits(jumpDelayInUs_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, jumpDelayInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(laserOffDelayInUs_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, laserOffDelayInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(laserOnDelayInUs_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, laserOnDelayInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(markDelayInUs_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, markDelayInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(polygonDelayInUs_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, polygonDelayInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(timeLagInUs_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, timeLagInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(laserOnShiftInUs_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, laserOnShiftInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(limit_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(18, limit_);
      }
      if (java.lang.Float.floatToRawIntBits(nPrevInUs_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(19, nPrevInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(nPostInUs_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(20, nPostInUs_);
      }
      if (java.lang.Float.floatToRawIntBits(wobFrequencyInHz_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, wobFrequencyInHz_);
      }
      if (java.lang.Float.floatToRawIntBits(wobAmpLongInMm_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(22, wobAmpLongInMm_);
      }
      if (java.lang.Float.floatToRawIntBits(wobAmpTransInMm_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(23, wobAmpTransInMm_);
      }
      if (wobbleMode_ != open_vector_format.OpenVectorFormat.MarkingParams.WobbleMode.NO_WOBBLE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(24, wobbleMode_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, getPowerGradient());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(26, name_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof open_vector_format.OpenVectorFormat.MarkingParams)) {
        return super.equals(obj);
      }
      open_vector_format.OpenVectorFormat.MarkingParams other = (open_vector_format.OpenVectorFormat.MarkingParams) obj;

      if (java.lang.Float.floatToIntBits(getLaserPowerInW())
          != java.lang.Float.floatToIntBits(
              other.getLaserPowerInW())) return false;
      if (java.lang.Float.floatToIntBits(getLaserSpeedInMmPerS())
          != java.lang.Float.floatToIntBits(
              other.getLaserSpeedInMmPerS())) return false;
      if (java.lang.Float.floatToIntBits(getLaserFocusShiftInMm())
          != java.lang.Float.floatToIntBits(
              other.getLaserFocusShiftInMm())) return false;
      if (java.lang.Float.floatToIntBits(getPointExposureTimeInUs())
          != java.lang.Float.floatToIntBits(
              other.getPointExposureTimeInUs())) return false;
      if (java.lang.Float.floatToIntBits(getJumpSpeedInMmS())
          != java.lang.Float.floatToIntBits(
              other.getJumpSpeedInMmS())) return false;
      if (java.lang.Float.floatToIntBits(getPointExposureRepetitions())
          != java.lang.Float.floatToIntBits(
              other.getPointExposureRepetitions())) return false;
      if (getRepetitionRateInHz()
          != other.getRepetitionRateInHz()) return false;
      if (getLaserPulsesPerBurst()
          != other.getLaserPulsesPerBurst()) return false;
      if (getPulseDurationInFemtoseconds()
          != other.getPulseDurationInFemtoseconds()) return false;
      if (markingMode_ != other.markingMode_) return false;
      if (java.lang.Float.floatToIntBits(getJumpDelayInUs())
          != java.lang.Float.floatToIntBits(
              other.getJumpDelayInUs())) return false;
      if (java.lang.Float.floatToIntBits(getLaserOffDelayInUs())
          != java.lang.Float.floatToIntBits(
              other.getLaserOffDelayInUs())) return false;
      if (java.lang.Float.floatToIntBits(getLaserOnDelayInUs())
          != java.lang.Float.floatToIntBits(
              other.getLaserOnDelayInUs())) return false;
      if (java.lang.Float.floatToIntBits(getMarkDelayInUs())
          != java.lang.Float.floatToIntBits(
              other.getMarkDelayInUs())) return false;
      if (java.lang.Float.floatToIntBits(getPolygonDelayInUs())
          != java.lang.Float.floatToIntBits(
              other.getPolygonDelayInUs())) return false;
      if (java.lang.Float.floatToIntBits(getTimeLagInUs())
          != java.lang.Float.floatToIntBits(
              other.getTimeLagInUs())) return false;
      if (java.lang.Float.floatToIntBits(getLaserOnShiftInUs())
          != java.lang.Float.floatToIntBits(
              other.getLaserOnShiftInUs())) return false;
      if (java.lang.Float.floatToIntBits(getLimit())
          != java.lang.Float.floatToIntBits(
              other.getLimit())) return false;
      if (java.lang.Float.floatToIntBits(getNPrevInUs())
          != java.lang.Float.floatToIntBits(
              other.getNPrevInUs())) return false;
      if (java.lang.Float.floatToIntBits(getNPostInUs())
          != java.lang.Float.floatToIntBits(
              other.getNPostInUs())) return false;
      if (java.lang.Float.floatToIntBits(getWobFrequencyInHz())
          != java.lang.Float.floatToIntBits(
              other.getWobFrequencyInHz())) return false;
      if (java.lang.Float.floatToIntBits(getWobAmpLongInMm())
          != java.lang.Float.floatToIntBits(
              other.getWobAmpLongInMm())) return false;
      if (java.lang.Float.floatToIntBits(getWobAmpTransInMm())
          != java.lang.Float.floatToIntBits(
              other.getWobAmpTransInMm())) return false;
      if (wobbleMode_ != other.wobbleMode_) return false;
      if (hasPowerGradient() != other.hasPowerGradient()) return false;
      if (hasPowerGradient()) {
        if (!getPowerGradient()
            .equals(other.getPowerGradient())) return false;
      }
      if (!getName()
          .equals(other.getName())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LASER_POWER_IN_W_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLaserPowerInW());
      hash = (37 * hash) + LASER_SPEED_IN_MM_PER_S_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLaserSpeedInMmPerS());
      hash = (37 * hash) + LASER_FOCUS_SHIFT_IN_MM_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLaserFocusShiftInMm());
      hash = (37 * hash) + POINT_EXPOSURE_TIME_IN_US_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPointExposureTimeInUs());
      hash = (37 * hash) + JUMP_SPEED_IN_MM_S_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getJumpSpeedInMmS());
      hash = (37 * hash) + POINT_EXPOSURE_REPETITIONS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPointExposureRepetitions());
      hash = (37 * hash) + REPETITION_RATE_IN_HZ_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRepetitionRateInHz());
      hash = (37 * hash) + LASER_PULSES_PER_BURST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLaserPulsesPerBurst());
      hash = (37 * hash) + PULSEDURATIONINFEMTOSECONDS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPulseDurationInFemtoseconds());
      hash = (37 * hash) + MARKING_MODE_FIELD_NUMBER;
      hash = (53 * hash) + markingMode_;
      hash = (37 * hash) + JUMP_DELAY_IN_US_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getJumpDelayInUs());
      hash = (37 * hash) + LASER_OFF_DELAY_IN_US_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLaserOffDelayInUs());
      hash = (37 * hash) + LASER_ON_DELAY_IN_US_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLaserOnDelayInUs());
      hash = (37 * hash) + MARK_DELAY_IN_US_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMarkDelayInUs());
      hash = (37 * hash) + POLYGON_DELAY_IN_US_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPolygonDelayInUs());
      hash = (37 * hash) + TIME_LAG_IN_US_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTimeLagInUs());
      hash = (37 * hash) + LASER_ON_SHIFT_IN_US_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLaserOnShiftInUs());
      hash = (37 * hash) + LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLimit());
      hash = (37 * hash) + N_PREV_IN_US_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getNPrevInUs());
      hash = (37 * hash) + N_POST_IN_US_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getNPostInUs());
      hash = (37 * hash) + WOB_FREQUENCY_IN_HZ_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getWobFrequencyInHz());
      hash = (37 * hash) + WOB_AMP_LONG_IN_MM_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getWobAmpLongInMm());
      hash = (37 * hash) + WOB_AMP_TRANS_IN_MM_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getWobAmpTransInMm());
      hash = (37 * hash) + WOBBLE_MODE_FIELD_NUMBER;
      hash = (53 * hash) + wobbleMode_;
      if (hasPowerGradient()) {
        hash = (37 * hash) + POWERGRADIENT_FIELD_NUMBER;
        hash = (53 * hash) + getPowerGradient().hashCode();
      }
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static open_vector_format.OpenVectorFormat.MarkingParams parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.MarkingParams parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.MarkingParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.MarkingParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.MarkingParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.MarkingParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.MarkingParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.MarkingParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static open_vector_format.OpenVectorFormat.MarkingParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static open_vector_format.OpenVectorFormat.MarkingParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.MarkingParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.MarkingParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(open_vector_format.OpenVectorFormat.MarkingParams prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *Parameters controlling the tool (e.g. laser beam) behaviour
     * </pre>
     *
     * Protobuf type {@code open_vector_format.MarkingParams}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:open_vector_format.MarkingParams)
        open_vector_format.OpenVectorFormat.MarkingParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_MarkingParams_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_MarkingParams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.MarkingParams.class, open_vector_format.OpenVectorFormat.MarkingParams.Builder.class);
      }

      // Construct using open_vector_format.OpenVectorFormat.MarkingParams.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPowerGradientFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        laserPowerInW_ = 0F;
        laserSpeedInMmPerS_ = 0F;
        laserFocusShiftInMm_ = 0F;
        pointExposureTimeInUs_ = 0F;
        jumpSpeedInMmS_ = 0F;
        pointExposureRepetitions_ = 0F;
        repetitionRateInHz_ = 0L;
        laserPulsesPerBurst_ = 0L;
        pulseDurationInFemtoseconds_ = 0L;
        markingMode_ = 0;
        jumpDelayInUs_ = 0F;
        laserOffDelayInUs_ = 0F;
        laserOnDelayInUs_ = 0F;
        markDelayInUs_ = 0F;
        polygonDelayInUs_ = 0F;
        timeLagInUs_ = 0F;
        laserOnShiftInUs_ = 0F;
        limit_ = 0F;
        nPrevInUs_ = 0F;
        nPostInUs_ = 0F;
        wobFrequencyInHz_ = 0F;
        wobAmpLongInMm_ = 0F;
        wobAmpTransInMm_ = 0F;
        wobbleMode_ = 0;
        powerGradient_ = null;
        if (powerGradientBuilder_ != null) {
          powerGradientBuilder_.dispose();
          powerGradientBuilder_ = null;
        }
        name_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_MarkingParams_descriptor;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.MarkingParams getDefaultInstanceForType() {
        return open_vector_format.OpenVectorFormat.MarkingParams.getDefaultInstance();
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.MarkingParams build() {
        open_vector_format.OpenVectorFormat.MarkingParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.MarkingParams buildPartial() {
        open_vector_format.OpenVectorFormat.MarkingParams result = new open_vector_format.OpenVectorFormat.MarkingParams(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(open_vector_format.OpenVectorFormat.MarkingParams result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.laserPowerInW_ = laserPowerInW_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.laserSpeedInMmPerS_ = laserSpeedInMmPerS_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.laserFocusShiftInMm_ = laserFocusShiftInMm_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.pointExposureTimeInUs_ = pointExposureTimeInUs_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.jumpSpeedInMmS_ = jumpSpeedInMmS_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.pointExposureRepetitions_ = pointExposureRepetitions_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.repetitionRateInHz_ = repetitionRateInHz_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.laserPulsesPerBurst_ = laserPulsesPerBurst_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.pulseDurationInFemtoseconds_ = pulseDurationInFemtoseconds_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.markingMode_ = markingMode_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.jumpDelayInUs_ = jumpDelayInUs_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.laserOffDelayInUs_ = laserOffDelayInUs_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.laserOnDelayInUs_ = laserOnDelayInUs_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.markDelayInUs_ = markDelayInUs_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.polygonDelayInUs_ = polygonDelayInUs_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.timeLagInUs_ = timeLagInUs_;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.laserOnShiftInUs_ = laserOnShiftInUs_;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.limit_ = limit_;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.nPrevInUs_ = nPrevInUs_;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.nPostInUs_ = nPostInUs_;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.wobFrequencyInHz_ = wobFrequencyInHz_;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.wobAmpLongInMm_ = wobAmpLongInMm_;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.wobAmpTransInMm_ = wobAmpTransInMm_;
        }
        if (((from_bitField0_ & 0x00800000) != 0)) {
          result.wobbleMode_ = wobbleMode_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x01000000) != 0)) {
          result.powerGradient_ = powerGradientBuilder_ == null
              ? powerGradient_
              : powerGradientBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x02000000) != 0)) {
          result.name_ = name_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof open_vector_format.OpenVectorFormat.MarkingParams) {
          return mergeFrom((open_vector_format.OpenVectorFormat.MarkingParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(open_vector_format.OpenVectorFormat.MarkingParams other) {
        if (other == open_vector_format.OpenVectorFormat.MarkingParams.getDefaultInstance()) return this;
        if (other.getLaserPowerInW() != 0F) {
          setLaserPowerInW(other.getLaserPowerInW());
        }
        if (other.getLaserSpeedInMmPerS() != 0F) {
          setLaserSpeedInMmPerS(other.getLaserSpeedInMmPerS());
        }
        if (other.getLaserFocusShiftInMm() != 0F) {
          setLaserFocusShiftInMm(other.getLaserFocusShiftInMm());
        }
        if (other.getPointExposureTimeInUs() != 0F) {
          setPointExposureTimeInUs(other.getPointExposureTimeInUs());
        }
        if (other.getJumpSpeedInMmS() != 0F) {
          setJumpSpeedInMmS(other.getJumpSpeedInMmS());
        }
        if (other.getPointExposureRepetitions() != 0F) {
          setPointExposureRepetitions(other.getPointExposureRepetitions());
        }
        if (other.getRepetitionRateInHz() != 0L) {
          setRepetitionRateInHz(other.getRepetitionRateInHz());
        }
        if (other.getLaserPulsesPerBurst() != 0L) {
          setLaserPulsesPerBurst(other.getLaserPulsesPerBurst());
        }
        if (other.getPulseDurationInFemtoseconds() != 0L) {
          setPulseDurationInFemtoseconds(other.getPulseDurationInFemtoseconds());
        }
        if (other.markingMode_ != 0) {
          setMarkingModeValue(other.getMarkingModeValue());
        }
        if (other.getJumpDelayInUs() != 0F) {
          setJumpDelayInUs(other.getJumpDelayInUs());
        }
        if (other.getLaserOffDelayInUs() != 0F) {
          setLaserOffDelayInUs(other.getLaserOffDelayInUs());
        }
        if (other.getLaserOnDelayInUs() != 0F) {
          setLaserOnDelayInUs(other.getLaserOnDelayInUs());
        }
        if (other.getMarkDelayInUs() != 0F) {
          setMarkDelayInUs(other.getMarkDelayInUs());
        }
        if (other.getPolygonDelayInUs() != 0F) {
          setPolygonDelayInUs(other.getPolygonDelayInUs());
        }
        if (other.getTimeLagInUs() != 0F) {
          setTimeLagInUs(other.getTimeLagInUs());
        }
        if (other.getLaserOnShiftInUs() != 0F) {
          setLaserOnShiftInUs(other.getLaserOnShiftInUs());
        }
        if (other.getLimit() != 0F) {
          setLimit(other.getLimit());
        }
        if (other.getNPrevInUs() != 0F) {
          setNPrevInUs(other.getNPrevInUs());
        }
        if (other.getNPostInUs() != 0F) {
          setNPostInUs(other.getNPostInUs());
        }
        if (other.getWobFrequencyInHz() != 0F) {
          setWobFrequencyInHz(other.getWobFrequencyInHz());
        }
        if (other.getWobAmpLongInMm() != 0F) {
          setWobAmpLongInMm(other.getWobAmpLongInMm());
        }
        if (other.getWobAmpTransInMm() != 0F) {
          setWobAmpTransInMm(other.getWobAmpTransInMm());
        }
        if (other.wobbleMode_ != 0) {
          setWobbleModeValue(other.getWobbleModeValue());
        }
        if (other.hasPowerGradient()) {
          mergePowerGradient(other.getPowerGradient());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x02000000;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                laserPowerInW_ = input.readFloat();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              case 21: {
                laserSpeedInMmPerS_ = input.readFloat();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              case 29: {
                laserFocusShiftInMm_ = input.readFloat();
                bitField0_ |= 0x00000004;
                break;
              } // case 29
              case 37: {
                pointExposureTimeInUs_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              case 45: {
                jumpSpeedInMmS_ = input.readFloat();
                bitField0_ |= 0x00000010;
                break;
              } // case 45
              case 53: {
                pointExposureRepetitions_ = input.readFloat();
                bitField0_ |= 0x00000020;
                break;
              } // case 53
              case 56: {
                repetitionRateInHz_ = input.readUInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                laserPulsesPerBurst_ = input.readUInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                pulseDurationInFemtoseconds_ = input.readUInt64();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                markingMode_ = input.readEnum();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 93: {
                jumpDelayInUs_ = input.readFloat();
                bitField0_ |= 0x00000400;
                break;
              } // case 93
              case 101: {
                laserOffDelayInUs_ = input.readFloat();
                bitField0_ |= 0x00000800;
                break;
              } // case 101
              case 109: {
                laserOnDelayInUs_ = input.readFloat();
                bitField0_ |= 0x00001000;
                break;
              } // case 109
              case 117: {
                markDelayInUs_ = input.readFloat();
                bitField0_ |= 0x00002000;
                break;
              } // case 117
              case 125: {
                polygonDelayInUs_ = input.readFloat();
                bitField0_ |= 0x00004000;
                break;
              } // case 125
              case 133: {
                timeLagInUs_ = input.readFloat();
                bitField0_ |= 0x00008000;
                break;
              } // case 133
              case 141: {
                laserOnShiftInUs_ = input.readFloat();
                bitField0_ |= 0x00010000;
                break;
              } // case 141
              case 149: {
                limit_ = input.readFloat();
                bitField0_ |= 0x00020000;
                break;
              } // case 149
              case 157: {
                nPrevInUs_ = input.readFloat();
                bitField0_ |= 0x00040000;
                break;
              } // case 157
              case 165: {
                nPostInUs_ = input.readFloat();
                bitField0_ |= 0x00080000;
                break;
              } // case 165
              case 173: {
                wobFrequencyInHz_ = input.readFloat();
                bitField0_ |= 0x00100000;
                break;
              } // case 173
              case 181: {
                wobAmpLongInMm_ = input.readFloat();
                bitField0_ |= 0x00200000;
                break;
              } // case 181
              case 189: {
                wobAmpTransInMm_ = input.readFloat();
                bitField0_ |= 0x00400000;
                break;
              } // case 189
              case 192: {
                wobbleMode_ = input.readEnum();
                bitField0_ |= 0x00800000;
                break;
              } // case 192
              case 202: {
                input.readMessage(
                    getPowerGradientFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x01000000;
                break;
              } // case 202
              case 210: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x02000000;
                break;
              } // case 210
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private float laserPowerInW_ ;
      /**
       * <code>float laser_power_in_w = 1;</code>
       * @return The laserPowerInW.
       */
      @java.lang.Override
      public float getLaserPowerInW() {
        return laserPowerInW_;
      }
      /**
       * <code>float laser_power_in_w = 1;</code>
       * @param value The laserPowerInW to set.
       * @return This builder for chaining.
       */
      public Builder setLaserPowerInW(float value) {

        laserPowerInW_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>float laser_power_in_w = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaserPowerInW() {
        bitField0_ = (bitField0_ & ~0x00000001);
        laserPowerInW_ = 0F;
        onChanged();
        return this;
      }

      private float laserSpeedInMmPerS_ ;
      /**
       * <code>float laser_speed_in_mm_per_s = 2;</code>
       * @return The laserSpeedInMmPerS.
       */
      @java.lang.Override
      public float getLaserSpeedInMmPerS() {
        return laserSpeedInMmPerS_;
      }
      /**
       * <code>float laser_speed_in_mm_per_s = 2;</code>
       * @param value The laserSpeedInMmPerS to set.
       * @return This builder for chaining.
       */
      public Builder setLaserSpeedInMmPerS(float value) {

        laserSpeedInMmPerS_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>float laser_speed_in_mm_per_s = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaserSpeedInMmPerS() {
        bitField0_ = (bitField0_ & ~0x00000002);
        laserSpeedInMmPerS_ = 0F;
        onChanged();
        return this;
      }

      private float laserFocusShiftInMm_ ;
      /**
       * <code>float laser_focus_shift_in_mm = 3;</code>
       * @return The laserFocusShiftInMm.
       */
      @java.lang.Override
      public float getLaserFocusShiftInMm() {
        return laserFocusShiftInMm_;
      }
      /**
       * <code>float laser_focus_shift_in_mm = 3;</code>
       * @param value The laserFocusShiftInMm to set.
       * @return This builder for chaining.
       */
      public Builder setLaserFocusShiftInMm(float value) {

        laserFocusShiftInMm_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>float laser_focus_shift_in_mm = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaserFocusShiftInMm() {
        bitField0_ = (bitField0_ & ~0x00000004);
        laserFocusShiftInMm_ = 0F;
        onChanged();
        return this;
      }

      private float pointExposureTimeInUs_ ;
      /**
       * <code>float point_exposure_time_in_us = 4;</code>
       * @return The pointExposureTimeInUs.
       */
      @java.lang.Override
      public float getPointExposureTimeInUs() {
        return pointExposureTimeInUs_;
      }
      /**
       * <code>float point_exposure_time_in_us = 4;</code>
       * @param value The pointExposureTimeInUs to set.
       * @return This builder for chaining.
       */
      public Builder setPointExposureTimeInUs(float value) {

        pointExposureTimeInUs_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>float point_exposure_time_in_us = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPointExposureTimeInUs() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pointExposureTimeInUs_ = 0F;
        onChanged();
        return this;
      }

      private float jumpSpeedInMmS_ ;
      /**
       * <code>float jump_speed_in_mm_s = 5;</code>
       * @return The jumpSpeedInMmS.
       */
      @java.lang.Override
      public float getJumpSpeedInMmS() {
        return jumpSpeedInMmS_;
      }
      /**
       * <code>float jump_speed_in_mm_s = 5;</code>
       * @param value The jumpSpeedInMmS to set.
       * @return This builder for chaining.
       */
      public Builder setJumpSpeedInMmS(float value) {

        jumpSpeedInMmS_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>float jump_speed_in_mm_s = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearJumpSpeedInMmS() {
        bitField0_ = (bitField0_ & ~0x00000010);
        jumpSpeedInMmS_ = 0F;
        onChanged();
        return this;
      }

      private float pointExposureRepetitions_ ;
      /**
       * <pre>
       *gives the number of exposure cycles executed
       *applies for points only, for movement distance and speed implicitly define this
       * </pre>
       *
       * <code>float point_exposure_repetitions = 6;</code>
       * @return The pointExposureRepetitions.
       */
      @java.lang.Override
      public float getPointExposureRepetitions() {
        return pointExposureRepetitions_;
      }
      /**
       * <pre>
       *gives the number of exposure cycles executed
       *applies for points only, for movement distance and speed implicitly define this
       * </pre>
       *
       * <code>float point_exposure_repetitions = 6;</code>
       * @param value The pointExposureRepetitions to set.
       * @return This builder for chaining.
       */
      public Builder setPointExposureRepetitions(float value) {

        pointExposureRepetitions_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *gives the number of exposure cycles executed
       *applies for points only, for movement distance and speed implicitly define this
       * </pre>
       *
       * <code>float point_exposure_repetitions = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPointExposureRepetitions() {
        bitField0_ = (bitField0_ & ~0x00000020);
        pointExposureRepetitions_ = 0F;
        onChanged();
        return this;
      }

      private long repetitionRateInHz_ ;
      /**
       * <pre>
       *repition rate of the exposure cycle, e.g. pulses/bursts etc. per second
       *0 Hz is defined as continous wave (cw)
       * </pre>
       *
       * <code>uint64 repetition_rate_in_hz = 7;</code>
       * @return The repetitionRateInHz.
       */
      @java.lang.Override
      public long getRepetitionRateInHz() {
        return repetitionRateInHz_;
      }
      /**
       * <pre>
       *repition rate of the exposure cycle, e.g. pulses/bursts etc. per second
       *0 Hz is defined as continous wave (cw)
       * </pre>
       *
       * <code>uint64 repetition_rate_in_hz = 7;</code>
       * @param value The repetitionRateInHz to set.
       * @return This builder for chaining.
       */
      public Builder setRepetitionRateInHz(long value) {

        repetitionRateInHz_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *repition rate of the exposure cycle, e.g. pulses/bursts etc. per second
       *0 Hz is defined as continous wave (cw)
       * </pre>
       *
       * <code>uint64 repetition_rate_in_hz = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRepetitionRateInHz() {
        bitField0_ = (bitField0_ & ~0x00000040);
        repetitionRateInHz_ = 0L;
        onChanged();
        return this;
      }

      private long laserPulsesPerBurst_ ;
      /**
       * <pre>
       *for burst mode, number of pulses per burst
       *0 is defined as no burst mode
       *pulses in the burst are reapeated with oscillator frequency, pulseDurationInFemtoseconds applies to each pulse
       * </pre>
       *
       * <code>uint64 laser_pulses_per_burst = 8;</code>
       * @return The laserPulsesPerBurst.
       */
      @java.lang.Override
      public long getLaserPulsesPerBurst() {
        return laserPulsesPerBurst_;
      }
      /**
       * <pre>
       *for burst mode, number of pulses per burst
       *0 is defined as no burst mode
       *pulses in the burst are reapeated with oscillator frequency, pulseDurationInFemtoseconds applies to each pulse
       * </pre>
       *
       * <code>uint64 laser_pulses_per_burst = 8;</code>
       * @param value The laserPulsesPerBurst to set.
       * @return This builder for chaining.
       */
      public Builder setLaserPulsesPerBurst(long value) {

        laserPulsesPerBurst_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *for burst mode, number of pulses per burst
       *0 is defined as no burst mode
       *pulses in the burst are reapeated with oscillator frequency, pulseDurationInFemtoseconds applies to each pulse
       * </pre>
       *
       * <code>uint64 laser_pulses_per_burst = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaserPulsesPerBurst() {
        bitField0_ = (bitField0_ & ~0x00000080);
        laserPulsesPerBurst_ = 0L;
        onChanged();
        return this;
      }

      private long pulseDurationInFemtoseconds_ ;
      /**
       * <pre>
       *length of one pulse, defines the duty cycle together with repetitionRateInHz and laserPowerInW
       * </pre>
       *
       * <code>uint64 pulseDurationInFemtoseconds = 9;</code>
       * @return The pulseDurationInFemtoseconds.
       */
      @java.lang.Override
      public long getPulseDurationInFemtoseconds() {
        return pulseDurationInFemtoseconds_;
      }
      /**
       * <pre>
       *length of one pulse, defines the duty cycle together with repetitionRateInHz and laserPowerInW
       * </pre>
       *
       * <code>uint64 pulseDurationInFemtoseconds = 9;</code>
       * @param value The pulseDurationInFemtoseconds to set.
       * @return This builder for chaining.
       */
      public Builder setPulseDurationInFemtoseconds(long value) {

        pulseDurationInFemtoseconds_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *length of one pulse, defines the duty cycle together with repetitionRateInHz and laserPowerInW
       * </pre>
       *
       * <code>uint64 pulseDurationInFemtoseconds = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearPulseDurationInFemtoseconds() {
        bitField0_ = (bitField0_ & ~0x00000100);
        pulseDurationInFemtoseconds_ = 0L;
        onChanged();
        return this;
      }

      private int markingMode_ = 0;
      /**
       * <pre>
       *marking mode switches between normal marking and skywriting modes
       * </pre>
       *
       * <code>.open_vector_format.MarkingParams.MarkingMode marking_mode = 10;</code>
       * @return The enum numeric value on the wire for markingMode.
       */
      @java.lang.Override public int getMarkingModeValue() {
        return markingMode_;
      }
      /**
       * <pre>
       *marking mode switches between normal marking and skywriting modes
       * </pre>
       *
       * <code>.open_vector_format.MarkingParams.MarkingMode marking_mode = 10;</code>
       * @param value The enum numeric value on the wire for markingMode to set.
       * @return This builder for chaining.
       */
      public Builder setMarkingModeValue(int value) {
        markingMode_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *marking mode switches between normal marking and skywriting modes
       * </pre>
       *
       * <code>.open_vector_format.MarkingParams.MarkingMode marking_mode = 10;</code>
       * @return The markingMode.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.MarkingParams.MarkingMode getMarkingMode() {
        open_vector_format.OpenVectorFormat.MarkingParams.MarkingMode result = open_vector_format.OpenVectorFormat.MarkingParams.MarkingMode.forNumber(markingMode_);
        return result == null ? open_vector_format.OpenVectorFormat.MarkingParams.MarkingMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *marking mode switches between normal marking and skywriting modes
       * </pre>
       *
       * <code>.open_vector_format.MarkingParams.MarkingMode marking_mode = 10;</code>
       * @param value The markingMode to set.
       * @return This builder for chaining.
       */
      public Builder setMarkingMode(open_vector_format.OpenVectorFormat.MarkingParams.MarkingMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        markingMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *marking mode switches between normal marking and skywriting modes
       * </pre>
       *
       * <code>.open_vector_format.MarkingParams.MarkingMode marking_mode = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearMarkingMode() {
        bitField0_ = (bitField0_ & ~0x00000200);
        markingMode_ = 0;
        onChanged();
        return this;
      }

      private float jumpDelayInUs_ ;
      /**
       * <pre>
       *Parameters for marking without Skywriting
       * </pre>
       *
       * <code>float jump_delay_in_us = 11;</code>
       * @return The jumpDelayInUs.
       */
      @java.lang.Override
      public float getJumpDelayInUs() {
        return jumpDelayInUs_;
      }
      /**
       * <pre>
       *Parameters for marking without Skywriting
       * </pre>
       *
       * <code>float jump_delay_in_us = 11;</code>
       * @param value The jumpDelayInUs to set.
       * @return This builder for chaining.
       */
      public Builder setJumpDelayInUs(float value) {

        jumpDelayInUs_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Parameters for marking without Skywriting
       * </pre>
       *
       * <code>float jump_delay_in_us = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearJumpDelayInUs() {
        bitField0_ = (bitField0_ & ~0x00000400);
        jumpDelayInUs_ = 0F;
        onChanged();
        return this;
      }

      private float laserOffDelayInUs_ ;
      /**
       * <code>float laser_off_delay_in_us = 12;</code>
       * @return The laserOffDelayInUs.
       */
      @java.lang.Override
      public float getLaserOffDelayInUs() {
        return laserOffDelayInUs_;
      }
      /**
       * <code>float laser_off_delay_in_us = 12;</code>
       * @param value The laserOffDelayInUs to set.
       * @return This builder for chaining.
       */
      public Builder setLaserOffDelayInUs(float value) {

        laserOffDelayInUs_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>float laser_off_delay_in_us = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaserOffDelayInUs() {
        bitField0_ = (bitField0_ & ~0x00000800);
        laserOffDelayInUs_ = 0F;
        onChanged();
        return this;
      }

      private float laserOnDelayInUs_ ;
      /**
       * <code>float laser_on_delay_in_us = 13;</code>
       * @return The laserOnDelayInUs.
       */
      @java.lang.Override
      public float getLaserOnDelayInUs() {
        return laserOnDelayInUs_;
      }
      /**
       * <code>float laser_on_delay_in_us = 13;</code>
       * @param value The laserOnDelayInUs to set.
       * @return This builder for chaining.
       */
      public Builder setLaserOnDelayInUs(float value) {

        laserOnDelayInUs_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>float laser_on_delay_in_us = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaserOnDelayInUs() {
        bitField0_ = (bitField0_ & ~0x00001000);
        laserOnDelayInUs_ = 0F;
        onChanged();
        return this;
      }

      private float markDelayInUs_ ;
      /**
       * <code>float mark_delay_in_us = 14;</code>
       * @return The markDelayInUs.
       */
      @java.lang.Override
      public float getMarkDelayInUs() {
        return markDelayInUs_;
      }
      /**
       * <code>float mark_delay_in_us = 14;</code>
       * @param value The markDelayInUs to set.
       * @return This builder for chaining.
       */
      public Builder setMarkDelayInUs(float value) {

        markDelayInUs_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>float mark_delay_in_us = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearMarkDelayInUs() {
        bitField0_ = (bitField0_ & ~0x00002000);
        markDelayInUs_ = 0F;
        onChanged();
        return this;
      }

      private float polygonDelayInUs_ ;
      /**
       * <code>float polygon_delay_in_us = 15;</code>
       * @return The polygonDelayInUs.
       */
      @java.lang.Override
      public float getPolygonDelayInUs() {
        return polygonDelayInUs_;
      }
      /**
       * <code>float polygon_delay_in_us = 15;</code>
       * @param value The polygonDelayInUs to set.
       * @return This builder for chaining.
       */
      public Builder setPolygonDelayInUs(float value) {

        polygonDelayInUs_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>float polygon_delay_in_us = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearPolygonDelayInUs() {
        bitField0_ = (bitField0_ & ~0x00004000);
        polygonDelayInUs_ = 0F;
        onChanged();
        return this;
      }

      private float timeLagInUs_ ;
      /**
       * <pre>
       *Parameters for marking with Skywriting
       * </pre>
       *
       * <code>float time_lag_in_us = 16;</code>
       * @return The timeLagInUs.
       */
      @java.lang.Override
      public float getTimeLagInUs() {
        return timeLagInUs_;
      }
      /**
       * <pre>
       *Parameters for marking with Skywriting
       * </pre>
       *
       * <code>float time_lag_in_us = 16;</code>
       * @param value The timeLagInUs to set.
       * @return This builder for chaining.
       */
      public Builder setTimeLagInUs(float value) {

        timeLagInUs_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Parameters for marking with Skywriting
       * </pre>
       *
       * <code>float time_lag_in_us = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeLagInUs() {
        bitField0_ = (bitField0_ & ~0x00008000);
        timeLagInUs_ = 0F;
        onChanged();
        return this;
      }

      private float laserOnShiftInUs_ ;
      /**
       * <code>float laser_on_shift_in_us = 17;</code>
       * @return The laserOnShiftInUs.
       */
      @java.lang.Override
      public float getLaserOnShiftInUs() {
        return laserOnShiftInUs_;
      }
      /**
       * <code>float laser_on_shift_in_us = 17;</code>
       * @param value The laserOnShiftInUs to set.
       * @return This builder for chaining.
       */
      public Builder setLaserOnShiftInUs(float value) {

        laserOnShiftInUs_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>float laser_on_shift_in_us = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaserOnShiftInUs() {
        bitField0_ = (bitField0_ & ~0x00010000);
        laserOnShiftInUs_ = 0F;
        onChanged();
        return this;
      }

      private float limit_ ;
      /**
       * <code>float limit = 18;</code>
       * @return The limit.
       */
      @java.lang.Override
      public float getLimit() {
        return limit_;
      }
      /**
       * <code>float limit = 18;</code>
       * @param value The limit to set.
       * @return This builder for chaining.
       */
      public Builder setLimit(float value) {

        limit_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>float limit = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearLimit() {
        bitField0_ = (bitField0_ & ~0x00020000);
        limit_ = 0F;
        onChanged();
        return this;
      }

      private float nPrevInUs_ ;
      /**
       * <code>float n_prev_in_us = 19;</code>
       * @return The nPrevInUs.
       */
      @java.lang.Override
      public float getNPrevInUs() {
        return nPrevInUs_;
      }
      /**
       * <code>float n_prev_in_us = 19;</code>
       * @param value The nPrevInUs to set.
       * @return This builder for chaining.
       */
      public Builder setNPrevInUs(float value) {

        nPrevInUs_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>float n_prev_in_us = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearNPrevInUs() {
        bitField0_ = (bitField0_ & ~0x00040000);
        nPrevInUs_ = 0F;
        onChanged();
        return this;
      }

      private float nPostInUs_ ;
      /**
       * <code>float n_post_in_us = 20;</code>
       * @return The nPostInUs.
       */
      @java.lang.Override
      public float getNPostInUs() {
        return nPostInUs_;
      }
      /**
       * <code>float n_post_in_us = 20;</code>
       * @param value The nPostInUs to set.
       * @return This builder for chaining.
       */
      public Builder setNPostInUs(float value) {

        nPostInUs_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>float n_post_in_us = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearNPostInUs() {
        bitField0_ = (bitField0_ & ~0x00080000);
        nPostInUs_ = 0F;
        onChanged();
        return this;
      }

      private float wobFrequencyInHz_ ;
      /**
       * <pre>
       *Parameters for marking with Wobble
       * </pre>
       *
       * <code>float wob_frequency_in_hz = 21;</code>
       * @return The wobFrequencyInHz.
       */
      @java.lang.Override
      public float getWobFrequencyInHz() {
        return wobFrequencyInHz_;
      }
      /**
       * <pre>
       *Parameters for marking with Wobble
       * </pre>
       *
       * <code>float wob_frequency_in_hz = 21;</code>
       * @param value The wobFrequencyInHz to set.
       * @return This builder for chaining.
       */
      public Builder setWobFrequencyInHz(float value) {

        wobFrequencyInHz_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Parameters for marking with Wobble
       * </pre>
       *
       * <code>float wob_frequency_in_hz = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearWobFrequencyInHz() {
        bitField0_ = (bitField0_ & ~0x00100000);
        wobFrequencyInHz_ = 0F;
        onChanged();
        return this;
      }

      private float wobAmpLongInMm_ ;
      /**
       * <code>float wob_amp_long_in_mm = 22;</code>
       * @return The wobAmpLongInMm.
       */
      @java.lang.Override
      public float getWobAmpLongInMm() {
        return wobAmpLongInMm_;
      }
      /**
       * <code>float wob_amp_long_in_mm = 22;</code>
       * @param value The wobAmpLongInMm to set.
       * @return This builder for chaining.
       */
      public Builder setWobAmpLongInMm(float value) {

        wobAmpLongInMm_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>float wob_amp_long_in_mm = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearWobAmpLongInMm() {
        bitField0_ = (bitField0_ & ~0x00200000);
        wobAmpLongInMm_ = 0F;
        onChanged();
        return this;
      }

      private float wobAmpTransInMm_ ;
      /**
       * <code>float wob_amp_trans_in_mm = 23;</code>
       * @return The wobAmpTransInMm.
       */
      @java.lang.Override
      public float getWobAmpTransInMm() {
        return wobAmpTransInMm_;
      }
      /**
       * <code>float wob_amp_trans_in_mm = 23;</code>
       * @param value The wobAmpTransInMm to set.
       * @return This builder for chaining.
       */
      public Builder setWobAmpTransInMm(float value) {

        wobAmpTransInMm_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>float wob_amp_trans_in_mm = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearWobAmpTransInMm() {
        bitField0_ = (bitField0_ & ~0x00400000);
        wobAmpTransInMm_ = 0F;
        onChanged();
        return this;
      }

      private int wobbleMode_ = 0;
      /**
       * <code>.open_vector_format.MarkingParams.WobbleMode wobble_mode = 24;</code>
       * @return The enum numeric value on the wire for wobbleMode.
       */
      @java.lang.Override public int getWobbleModeValue() {
        return wobbleMode_;
      }
      /**
       * <code>.open_vector_format.MarkingParams.WobbleMode wobble_mode = 24;</code>
       * @param value The enum numeric value on the wire for wobbleMode to set.
       * @return This builder for chaining.
       */
      public Builder setWobbleModeValue(int value) {
        wobbleMode_ = value;
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.MarkingParams.WobbleMode wobble_mode = 24;</code>
       * @return The wobbleMode.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.MarkingParams.WobbleMode getWobbleMode() {
        open_vector_format.OpenVectorFormat.MarkingParams.WobbleMode result = open_vector_format.OpenVectorFormat.MarkingParams.WobbleMode.forNumber(wobbleMode_);
        return result == null ? open_vector_format.OpenVectorFormat.MarkingParams.WobbleMode.UNRECOGNIZED : result;
      }
      /**
       * <code>.open_vector_format.MarkingParams.WobbleMode wobble_mode = 24;</code>
       * @param value The wobbleMode to set.
       * @return This builder for chaining.
       */
      public Builder setWobbleMode(open_vector_format.OpenVectorFormat.MarkingParams.WobbleMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00800000;
        wobbleMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.MarkingParams.WobbleMode wobble_mode = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearWobbleMode() {
        bitField0_ = (bitField0_ & ~0x00800000);
        wobbleMode_ = 0;
        onChanged();
        return this;
      }

      private open_vector_format.OpenVectorFormat.PowerGradientParams powerGradient_;
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.PowerGradientParams, open_vector_format.OpenVectorFormat.PowerGradientParams.Builder, open_vector_format.OpenVectorFormat.PowerGradientParamsOrBuilder> powerGradientBuilder_;
      /**
       * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
       * @return Whether the powerGradient field is set.
       */
      public boolean hasPowerGradient() {
        return ((bitField0_ & 0x01000000) != 0);
      }
      /**
       * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
       * @return The powerGradient.
       */
      public open_vector_format.OpenVectorFormat.PowerGradientParams getPowerGradient() {
        if (powerGradientBuilder_ == null) {
          return powerGradient_ == null ? open_vector_format.OpenVectorFormat.PowerGradientParams.getDefaultInstance() : powerGradient_;
        } else {
          return powerGradientBuilder_.getMessage();
        }
      }
      /**
       * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
       */
      public Builder setPowerGradient(open_vector_format.OpenVectorFormat.PowerGradientParams value) {
        if (powerGradientBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          powerGradient_ = value;
        } else {
          powerGradientBuilder_.setMessage(value);
        }
        bitField0_ |= 0x01000000;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
       */
      public Builder setPowerGradient(
          open_vector_format.OpenVectorFormat.PowerGradientParams.Builder builderForValue) {
        if (powerGradientBuilder_ == null) {
          powerGradient_ = builderForValue.build();
        } else {
          powerGradientBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x01000000;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
       */
      public Builder mergePowerGradient(open_vector_format.OpenVectorFormat.PowerGradientParams value) {
        if (powerGradientBuilder_ == null) {
          if (((bitField0_ & 0x01000000) != 0) &&
            powerGradient_ != null &&
            powerGradient_ != open_vector_format.OpenVectorFormat.PowerGradientParams.getDefaultInstance()) {
            getPowerGradientBuilder().mergeFrom(value);
          } else {
            powerGradient_ = value;
          }
        } else {
          powerGradientBuilder_.mergeFrom(value);
        }
        if (powerGradient_ != null) {
          bitField0_ |= 0x01000000;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
       */
      public Builder clearPowerGradient() {
        bitField0_ = (bitField0_ & ~0x01000000);
        powerGradient_ = null;
        if (powerGradientBuilder_ != null) {
          powerGradientBuilder_.dispose();
          powerGradientBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
       */
      public open_vector_format.OpenVectorFormat.PowerGradientParams.Builder getPowerGradientBuilder() {
        bitField0_ |= 0x01000000;
        onChanged();
        return getPowerGradientFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
       */
      public open_vector_format.OpenVectorFormat.PowerGradientParamsOrBuilder getPowerGradientOrBuilder() {
        if (powerGradientBuilder_ != null) {
          return powerGradientBuilder_.getMessageOrBuilder();
        } else {
          return powerGradient_ == null ?
              open_vector_format.OpenVectorFormat.PowerGradientParams.getDefaultInstance() : powerGradient_;
        }
      }
      /**
       * <code>.open_vector_format.PowerGradientParams powerGradient = 25;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.PowerGradientParams, open_vector_format.OpenVectorFormat.PowerGradientParams.Builder, open_vector_format.OpenVectorFormat.PowerGradientParamsOrBuilder> 
          getPowerGradientFieldBuilder() {
        if (powerGradientBuilder_ == null) {
          powerGradientBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.PowerGradientParams, open_vector_format.OpenVectorFormat.PowerGradientParams.Builder, open_vector_format.OpenVectorFormat.PowerGradientParamsOrBuilder>(
                  getPowerGradient(),
                  getParentForChildren(),
                  isClean());
          powerGradient_ = null;
        }
        return powerGradientBuilder_;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *meta data: custom, human readable name of this marking parameter set
       * </pre>
       *
       * <code>string name = 26;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *meta data: custom, human readable name of this marking parameter set
       * </pre>
       *
       * <code>string name = 26;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *meta data: custom, human readable name of this marking parameter set
       * </pre>
       *
       * <code>string name = 26;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *meta data: custom, human readable name of this marking parameter set
       * </pre>
       *
       * <code>string name = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x02000000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *meta data: custom, human readable name of this marking parameter set
       * </pre>
       *
       * <code>string name = 26;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:open_vector_format.MarkingParams)
    }

    // @@protoc_insertion_point(class_scope:open_vector_format.MarkingParams)
    private static final open_vector_format.OpenVectorFormat.MarkingParams DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.MarkingParams();
    }

    public static open_vector_format.OpenVectorFormat.MarkingParams getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MarkingParams>
        PARSER = new com.google.protobuf.AbstractParser<MarkingParams>() {
      @java.lang.Override
      public MarkingParams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MarkingParams> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MarkingParams> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public open_vector_format.OpenVectorFormat.MarkingParams getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PowerGradientParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:open_vector_format.PowerGradientParams)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float minPowerInW = 1;</code>
     * @return The minPowerInW.
     */
    float getMinPowerInW();

    /**
     * <code>float gradientInWPerS = 2;</code>
     * @return The gradientInWPerS.
     */
    float getGradientInWPerS();
  }
  /**
   * Protobuf type {@code open_vector_format.PowerGradientParams}
   */
  public static final class PowerGradientParams extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:open_vector_format.PowerGradientParams)
      PowerGradientParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PowerGradientParams.newBuilder() to construct.
    private PowerGradientParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PowerGradientParams() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PowerGradientParams();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_PowerGradientParams_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_PowerGradientParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              open_vector_format.OpenVectorFormat.PowerGradientParams.class, open_vector_format.OpenVectorFormat.PowerGradientParams.Builder.class);
    }

    public static final int MINPOWERINW_FIELD_NUMBER = 1;
    private float minPowerInW_ = 0F;
    /**
     * <code>float minPowerInW = 1;</code>
     * @return The minPowerInW.
     */
    @java.lang.Override
    public float getMinPowerInW() {
      return minPowerInW_;
    }

    public static final int GRADIENTINWPERS_FIELD_NUMBER = 2;
    private float gradientInWPerS_ = 0F;
    /**
     * <code>float gradientInWPerS = 2;</code>
     * @return The gradientInWPerS.
     */
    @java.lang.Override
    public float getGradientInWPerS() {
      return gradientInWPerS_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(minPowerInW_) != 0) {
        output.writeFloat(1, minPowerInW_);
      }
      if (java.lang.Float.floatToRawIntBits(gradientInWPerS_) != 0) {
        output.writeFloat(2, gradientInWPerS_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(minPowerInW_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, minPowerInW_);
      }
      if (java.lang.Float.floatToRawIntBits(gradientInWPerS_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, gradientInWPerS_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof open_vector_format.OpenVectorFormat.PowerGradientParams)) {
        return super.equals(obj);
      }
      open_vector_format.OpenVectorFormat.PowerGradientParams other = (open_vector_format.OpenVectorFormat.PowerGradientParams) obj;

      if (java.lang.Float.floatToIntBits(getMinPowerInW())
          != java.lang.Float.floatToIntBits(
              other.getMinPowerInW())) return false;
      if (java.lang.Float.floatToIntBits(getGradientInWPerS())
          != java.lang.Float.floatToIntBits(
              other.getGradientInWPerS())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MINPOWERINW_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMinPowerInW());
      hash = (37 * hash) + GRADIENTINWPERS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getGradientInWPerS());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static open_vector_format.OpenVectorFormat.PowerGradientParams parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.PowerGradientParams parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.PowerGradientParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.PowerGradientParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.PowerGradientParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.PowerGradientParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.PowerGradientParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.PowerGradientParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static open_vector_format.OpenVectorFormat.PowerGradientParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static open_vector_format.OpenVectorFormat.PowerGradientParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.PowerGradientParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.PowerGradientParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(open_vector_format.OpenVectorFormat.PowerGradientParams prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code open_vector_format.PowerGradientParams}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:open_vector_format.PowerGradientParams)
        open_vector_format.OpenVectorFormat.PowerGradientParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_PowerGradientParams_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_PowerGradientParams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.PowerGradientParams.class, open_vector_format.OpenVectorFormat.PowerGradientParams.Builder.class);
      }

      // Construct using open_vector_format.OpenVectorFormat.PowerGradientParams.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        minPowerInW_ = 0F;
        gradientInWPerS_ = 0F;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_PowerGradientParams_descriptor;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.PowerGradientParams getDefaultInstanceForType() {
        return open_vector_format.OpenVectorFormat.PowerGradientParams.getDefaultInstance();
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.PowerGradientParams build() {
        open_vector_format.OpenVectorFormat.PowerGradientParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.PowerGradientParams buildPartial() {
        open_vector_format.OpenVectorFormat.PowerGradientParams result = new open_vector_format.OpenVectorFormat.PowerGradientParams(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(open_vector_format.OpenVectorFormat.PowerGradientParams result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.minPowerInW_ = minPowerInW_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.gradientInWPerS_ = gradientInWPerS_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof open_vector_format.OpenVectorFormat.PowerGradientParams) {
          return mergeFrom((open_vector_format.OpenVectorFormat.PowerGradientParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(open_vector_format.OpenVectorFormat.PowerGradientParams other) {
        if (other == open_vector_format.OpenVectorFormat.PowerGradientParams.getDefaultInstance()) return this;
        if (other.getMinPowerInW() != 0F) {
          setMinPowerInW(other.getMinPowerInW());
        }
        if (other.getGradientInWPerS() != 0F) {
          setGradientInWPerS(other.getGradientInWPerS());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                minPowerInW_ = input.readFloat();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              case 21: {
                gradientInWPerS_ = input.readFloat();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private float minPowerInW_ ;
      /**
       * <code>float minPowerInW = 1;</code>
       * @return The minPowerInW.
       */
      @java.lang.Override
      public float getMinPowerInW() {
        return minPowerInW_;
      }
      /**
       * <code>float minPowerInW = 1;</code>
       * @param value The minPowerInW to set.
       * @return This builder for chaining.
       */
      public Builder setMinPowerInW(float value) {

        minPowerInW_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>float minPowerInW = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinPowerInW() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minPowerInW_ = 0F;
        onChanged();
        return this;
      }

      private float gradientInWPerS_ ;
      /**
       * <code>float gradientInWPerS = 2;</code>
       * @return The gradientInWPerS.
       */
      @java.lang.Override
      public float getGradientInWPerS() {
        return gradientInWPerS_;
      }
      /**
       * <code>float gradientInWPerS = 2;</code>
       * @param value The gradientInWPerS to set.
       * @return This builder for chaining.
       */
      public Builder setGradientInWPerS(float value) {

        gradientInWPerS_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>float gradientInWPerS = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearGradientInWPerS() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gradientInWPerS_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:open_vector_format.PowerGradientParams)
    }

    // @@protoc_insertion_point(class_scope:open_vector_format.PowerGradientParams)
    private static final open_vector_format.OpenVectorFormat.PowerGradientParams DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.PowerGradientParams();
    }

    public static open_vector_format.OpenVectorFormat.PowerGradientParams getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PowerGradientParams>
        PARSER = new com.google.protobuf.AbstractParser<PowerGradientParams>() {
      @java.lang.Override
      public PowerGradientParams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PowerGradientParams> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PowerGradientParams> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public open_vector_format.OpenVectorFormat.PowerGradientParams getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PartOrBuilder extends
      // @@protoc_insertion_point(interface_extends:open_vector_format.Part)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
     * @return Whether the geometryInfo field is set.
     */
    boolean hasGeometryInfo();
    /**
     * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
     * @return The geometryInfo.
     */
    open_vector_format.OpenVectorFormat.Part.GeometryInfo getGeometryInfo();
    /**
     * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
     */
    open_vector_format.OpenVectorFormat.Part.GeometryInfoOrBuilder getGeometryInfoOrBuilder();

    /**
     * <code>.open_vector_format.Part.Material material = 3;</code>
     * @return Whether the material field is set.
     */
    boolean hasMaterial();
    /**
     * <code>.open_vector_format.Part.Material material = 3;</code>
     * @return The material.
     */
    open_vector_format.OpenVectorFormat.Part.Material getMaterial();
    /**
     * <code>.open_vector_format.Part.Material material = 3;</code>
     */
    open_vector_format.OpenVectorFormat.Part.MaterialOrBuilder getMaterialOrBuilder();

    /**
     * <pre>
     *process strategy used for the in skin (volume) of the part
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
     * @return Whether the processStrategy field is set.
     */
    boolean hasProcessStrategy();
    /**
     * <pre>
     *process strategy used for the in skin (volume) of the part
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
     * @return The processStrategy.
     */
    open_vector_format.OpenVectorFormat.Part.ProcessStrategy getProcessStrategy();
    /**
     * <pre>
     *process strategy used for the in skin (volume) of the part
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
     */
    open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder getProcessStrategyOrBuilder();

    /**
     * <pre>
     *process strategy used for the down skin of the part, if differing
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
     * @return Whether the upSkinProcessStrategy field is set.
     */
    boolean hasUpSkinProcessStrategy();
    /**
     * <pre>
     *process strategy used for the down skin of the part, if differing
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
     * @return The upSkinProcessStrategy.
     */
    open_vector_format.OpenVectorFormat.Part.ProcessStrategy getUpSkinProcessStrategy();
    /**
     * <pre>
     *process strategy used for the down skin of the part, if differing
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
     */
    open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder getUpSkinProcessStrategyOrBuilder();

    /**
     * <pre>
     *process strategy used for the up skin of the part, if differing
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
     * @return Whether the downSkinProcessStrategy field is set.
     */
    boolean hasDownSkinProcessStrategy();
    /**
     * <pre>
     *process strategy used for the up skin of the part, if differing
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
     * @return The downSkinProcessStrategy.
     */
    open_vector_format.OpenVectorFormat.Part.ProcessStrategy getDownSkinProcessStrategy();
    /**
     * <pre>
     *process strategy used for the up skin of the part, if differing
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
     */
    open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder getDownSkinProcessStrategyOrBuilder();

    /**
     * <pre>
     *meta data defining the exposure order that was used to order the vector blocks of this part
     *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
     *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
     * </pre>
     *
     * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
     */
    java.util.List<open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata> 
        getExposureOrderList();
    /**
     * <pre>
     *meta data defining the exposure order that was used to order the vector blocks of this part
     *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
     *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
     * </pre>
     *
     * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata getExposureOrder(int index);
    /**
     * <pre>
     *meta data defining the exposure order that was used to order the vector blocks of this part
     *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
     *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
     * </pre>
     *
     * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
     */
    int getExposureOrderCount();
    /**
     * <pre>
     *meta data defining the exposure order that was used to order the vector blocks of this part
     *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
     *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
     * </pre>
     *
     * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
     */
    java.util.List<? extends open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder> 
        getExposureOrderOrBuilderList();
    /**
     * <pre>
     *meta data defining the exposure order that was used to order the vector blocks of this part
     *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
     *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
     * </pre>
     *
     * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder getExposureOrderOrBuilder(
        int index);

    /**
     * <pre>
     *reference to the original CAD 3D model this instance was created from
     * </pre>
     *
     * <code>string parent_part_name = 8;</code>
     * @return The parentPartName.
     */
    java.lang.String getParentPartName();
    /**
     * <pre>
     *reference to the original CAD 3D model this instance was created from
     * </pre>
     *
     * <code>string parent_part_name = 8;</code>
     * @return The bytes for parentPartName.
     */
    com.google.protobuf.ByteString
        getParentPartNameBytes();
  }
  /**
   * <pre>
   *Part is a reference to a CAD 3D model instance in this Job.
   *Instances in a job may differ in their position, orientation, process strategy, marking parameters or support structures,
   *even if they are derived from the same parent part.
   *Common parent parts of instances can be identified using the parent_part_name, if set.
   * </pre>
   *
   * Protobuf type {@code open_vector_format.Part}
   */
  public static final class Part extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:open_vector_format.Part)
      PartOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Part.newBuilder() to construct.
    private Part(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Part() {
      name_ = "";
      exposureOrder_ = java.util.Collections.emptyList();
      parentPartName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Part();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              open_vector_format.OpenVectorFormat.Part.class, open_vector_format.OpenVectorFormat.Part.Builder.class);
    }

    public interface GeometryInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.Part.GeometryInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *part volume in cubic millimeters
       * </pre>
       *
       * <code>double volume_in_mm3 = 1;</code>
       * @return The volumeInMm3.
       */
      double getVolumeInMm3();

      /**
       * <pre>
       *support volume in cubic millimeters
       * </pre>
       *
       * <code>double support_volume_in_mm3 = 2;</code>
       * @return The supportVolumeInMm3.
       */
      double getSupportVolumeInMm3();

      /**
       * <pre>
       *height (layer) of the top slice in millimeters
       * </pre>
       *
       * <code>double build_height_in_mm = 3;</code>
       * @return The buildHeightInMm.
       */
      double getBuildHeightInMm();

      /**
       * <pre>
       *surface area of the 3D model in square millimeters
       * </pre>
       *
       * <code>double surface_area_in_mm2 = 4;</code>
       * @return The surfaceAreaInMm2.
       */
      double getSurfaceAreaInMm2();

      /**
       * <pre>
       *surface area projected on the biuld plate in square millimeters
       * </pre>
       *
       * <code>double projected_surface_in_mm2 = 5;</code>
       * @return The projectedSurfaceInMm2.
       */
      double getProjectedSurfaceInMm2();
    }
    /**
     * <pre>
     *Metadata related to the geometry of the part
     * </pre>
     *
     * Protobuf type {@code open_vector_format.Part.GeometryInfo}
     */
    public static final class GeometryInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.Part.GeometryInfo)
        GeometryInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use GeometryInfo.newBuilder() to construct.
      private GeometryInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private GeometryInfo() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new GeometryInfo();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_GeometryInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_GeometryInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.Part.GeometryInfo.class, open_vector_format.OpenVectorFormat.Part.GeometryInfo.Builder.class);
      }

      public static final int VOLUME_IN_MM3_FIELD_NUMBER = 1;
      private double volumeInMm3_ = 0D;
      /**
       * <pre>
       *part volume in cubic millimeters
       * </pre>
       *
       * <code>double volume_in_mm3 = 1;</code>
       * @return The volumeInMm3.
       */
      @java.lang.Override
      public double getVolumeInMm3() {
        return volumeInMm3_;
      }

      public static final int SUPPORT_VOLUME_IN_MM3_FIELD_NUMBER = 2;
      private double supportVolumeInMm3_ = 0D;
      /**
       * <pre>
       *support volume in cubic millimeters
       * </pre>
       *
       * <code>double support_volume_in_mm3 = 2;</code>
       * @return The supportVolumeInMm3.
       */
      @java.lang.Override
      public double getSupportVolumeInMm3() {
        return supportVolumeInMm3_;
      }

      public static final int BUILD_HEIGHT_IN_MM_FIELD_NUMBER = 3;
      private double buildHeightInMm_ = 0D;
      /**
       * <pre>
       *height (layer) of the top slice in millimeters
       * </pre>
       *
       * <code>double build_height_in_mm = 3;</code>
       * @return The buildHeightInMm.
       */
      @java.lang.Override
      public double getBuildHeightInMm() {
        return buildHeightInMm_;
      }

      public static final int SURFACE_AREA_IN_MM2_FIELD_NUMBER = 4;
      private double surfaceAreaInMm2_ = 0D;
      /**
       * <pre>
       *surface area of the 3D model in square millimeters
       * </pre>
       *
       * <code>double surface_area_in_mm2 = 4;</code>
       * @return The surfaceAreaInMm2.
       */
      @java.lang.Override
      public double getSurfaceAreaInMm2() {
        return surfaceAreaInMm2_;
      }

      public static final int PROJECTED_SURFACE_IN_MM2_FIELD_NUMBER = 5;
      private double projectedSurfaceInMm2_ = 0D;
      /**
       * <pre>
       *surface area projected on the biuld plate in square millimeters
       * </pre>
       *
       * <code>double projected_surface_in_mm2 = 5;</code>
       * @return The projectedSurfaceInMm2.
       */
      @java.lang.Override
      public double getProjectedSurfaceInMm2() {
        return projectedSurfaceInMm2_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (java.lang.Double.doubleToRawLongBits(volumeInMm3_) != 0) {
          output.writeDouble(1, volumeInMm3_);
        }
        if (java.lang.Double.doubleToRawLongBits(supportVolumeInMm3_) != 0) {
          output.writeDouble(2, supportVolumeInMm3_);
        }
        if (java.lang.Double.doubleToRawLongBits(buildHeightInMm_) != 0) {
          output.writeDouble(3, buildHeightInMm_);
        }
        if (java.lang.Double.doubleToRawLongBits(surfaceAreaInMm2_) != 0) {
          output.writeDouble(4, surfaceAreaInMm2_);
        }
        if (java.lang.Double.doubleToRawLongBits(projectedSurfaceInMm2_) != 0) {
          output.writeDouble(5, projectedSurfaceInMm2_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (java.lang.Double.doubleToRawLongBits(volumeInMm3_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, volumeInMm3_);
        }
        if (java.lang.Double.doubleToRawLongBits(supportVolumeInMm3_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, supportVolumeInMm3_);
        }
        if (java.lang.Double.doubleToRawLongBits(buildHeightInMm_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, buildHeightInMm_);
        }
        if (java.lang.Double.doubleToRawLongBits(surfaceAreaInMm2_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, surfaceAreaInMm2_);
        }
        if (java.lang.Double.doubleToRawLongBits(projectedSurfaceInMm2_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, projectedSurfaceInMm2_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.Part.GeometryInfo)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.Part.GeometryInfo other = (open_vector_format.OpenVectorFormat.Part.GeometryInfo) obj;

        if (java.lang.Double.doubleToLongBits(getVolumeInMm3())
            != java.lang.Double.doubleToLongBits(
                other.getVolumeInMm3())) return false;
        if (java.lang.Double.doubleToLongBits(getSupportVolumeInMm3())
            != java.lang.Double.doubleToLongBits(
                other.getSupportVolumeInMm3())) return false;
        if (java.lang.Double.doubleToLongBits(getBuildHeightInMm())
            != java.lang.Double.doubleToLongBits(
                other.getBuildHeightInMm())) return false;
        if (java.lang.Double.doubleToLongBits(getSurfaceAreaInMm2())
            != java.lang.Double.doubleToLongBits(
                other.getSurfaceAreaInMm2())) return false;
        if (java.lang.Double.doubleToLongBits(getProjectedSurfaceInMm2())
            != java.lang.Double.doubleToLongBits(
                other.getProjectedSurfaceInMm2())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + VOLUME_IN_MM3_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getVolumeInMm3()));
        hash = (37 * hash) + SUPPORT_VOLUME_IN_MM3_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getSupportVolumeInMm3()));
        hash = (37 * hash) + BUILD_HEIGHT_IN_MM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getBuildHeightInMm()));
        hash = (37 * hash) + SURFACE_AREA_IN_MM2_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getSurfaceAreaInMm2()));
        hash = (37 * hash) + PROJECTED_SURFACE_IN_MM2_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getProjectedSurfaceInMm2()));
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.Part.GeometryInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.Part.GeometryInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Part.GeometryInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.Part.GeometryInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Part.GeometryInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.Part.GeometryInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Part.GeometryInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.Part.GeometryInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.Part.GeometryInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.Part.GeometryInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Part.GeometryInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.Part.GeometryInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.Part.GeometryInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *Metadata related to the geometry of the part
       * </pre>
       *
       * Protobuf type {@code open_vector_format.Part.GeometryInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.Part.GeometryInfo)
          open_vector_format.OpenVectorFormat.Part.GeometryInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_GeometryInfo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_GeometryInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.Part.GeometryInfo.class, open_vector_format.OpenVectorFormat.Part.GeometryInfo.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.Part.GeometryInfo.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          volumeInMm3_ = 0D;
          supportVolumeInMm3_ = 0D;
          buildHeightInMm_ = 0D;
          surfaceAreaInMm2_ = 0D;
          projectedSurfaceInMm2_ = 0D;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_GeometryInfo_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.Part.GeometryInfo getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.Part.GeometryInfo.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.Part.GeometryInfo build() {
          open_vector_format.OpenVectorFormat.Part.GeometryInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.Part.GeometryInfo buildPartial() {
          open_vector_format.OpenVectorFormat.Part.GeometryInfo result = new open_vector_format.OpenVectorFormat.Part.GeometryInfo(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.Part.GeometryInfo result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.volumeInMm3_ = volumeInMm3_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.supportVolumeInMm3_ = supportVolumeInMm3_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.buildHeightInMm_ = buildHeightInMm_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.surfaceAreaInMm2_ = surfaceAreaInMm2_;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.projectedSurfaceInMm2_ = projectedSurfaceInMm2_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.Part.GeometryInfo) {
            return mergeFrom((open_vector_format.OpenVectorFormat.Part.GeometryInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.Part.GeometryInfo other) {
          if (other == open_vector_format.OpenVectorFormat.Part.GeometryInfo.getDefaultInstance()) return this;
          if (other.getVolumeInMm3() != 0D) {
            setVolumeInMm3(other.getVolumeInMm3());
          }
          if (other.getSupportVolumeInMm3() != 0D) {
            setSupportVolumeInMm3(other.getSupportVolumeInMm3());
          }
          if (other.getBuildHeightInMm() != 0D) {
            setBuildHeightInMm(other.getBuildHeightInMm());
          }
          if (other.getSurfaceAreaInMm2() != 0D) {
            setSurfaceAreaInMm2(other.getSurfaceAreaInMm2());
          }
          if (other.getProjectedSurfaceInMm2() != 0D) {
            setProjectedSurfaceInMm2(other.getProjectedSurfaceInMm2());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {
                  volumeInMm3_ = input.readDouble();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 9
                case 17: {
                  supportVolumeInMm3_ = input.readDouble();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 17
                case 25: {
                  buildHeightInMm_ = input.readDouble();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 25
                case 33: {
                  surfaceAreaInMm2_ = input.readDouble();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 33
                case 41: {
                  projectedSurfaceInMm2_ = input.readDouble();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 41
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private double volumeInMm3_ ;
        /**
         * <pre>
         *part volume in cubic millimeters
         * </pre>
         *
         * <code>double volume_in_mm3 = 1;</code>
         * @return The volumeInMm3.
         */
        @java.lang.Override
        public double getVolumeInMm3() {
          return volumeInMm3_;
        }
        /**
         * <pre>
         *part volume in cubic millimeters
         * </pre>
         *
         * <code>double volume_in_mm3 = 1;</code>
         * @param value The volumeInMm3 to set.
         * @return This builder for chaining.
         */
        public Builder setVolumeInMm3(double value) {

          volumeInMm3_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *part volume in cubic millimeters
         * </pre>
         *
         * <code>double volume_in_mm3 = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearVolumeInMm3() {
          bitField0_ = (bitField0_ & ~0x00000001);
          volumeInMm3_ = 0D;
          onChanged();
          return this;
        }

        private double supportVolumeInMm3_ ;
        /**
         * <pre>
         *support volume in cubic millimeters
         * </pre>
         *
         * <code>double support_volume_in_mm3 = 2;</code>
         * @return The supportVolumeInMm3.
         */
        @java.lang.Override
        public double getSupportVolumeInMm3() {
          return supportVolumeInMm3_;
        }
        /**
         * <pre>
         *support volume in cubic millimeters
         * </pre>
         *
         * <code>double support_volume_in_mm3 = 2;</code>
         * @param value The supportVolumeInMm3 to set.
         * @return This builder for chaining.
         */
        public Builder setSupportVolumeInMm3(double value) {

          supportVolumeInMm3_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *support volume in cubic millimeters
         * </pre>
         *
         * <code>double support_volume_in_mm3 = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearSupportVolumeInMm3() {
          bitField0_ = (bitField0_ & ~0x00000002);
          supportVolumeInMm3_ = 0D;
          onChanged();
          return this;
        }

        private double buildHeightInMm_ ;
        /**
         * <pre>
         *height (layer) of the top slice in millimeters
         * </pre>
         *
         * <code>double build_height_in_mm = 3;</code>
         * @return The buildHeightInMm.
         */
        @java.lang.Override
        public double getBuildHeightInMm() {
          return buildHeightInMm_;
        }
        /**
         * <pre>
         *height (layer) of the top slice in millimeters
         * </pre>
         *
         * <code>double build_height_in_mm = 3;</code>
         * @param value The buildHeightInMm to set.
         * @return This builder for chaining.
         */
        public Builder setBuildHeightInMm(double value) {

          buildHeightInMm_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *height (layer) of the top slice in millimeters
         * </pre>
         *
         * <code>double build_height_in_mm = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearBuildHeightInMm() {
          bitField0_ = (bitField0_ & ~0x00000004);
          buildHeightInMm_ = 0D;
          onChanged();
          return this;
        }

        private double surfaceAreaInMm2_ ;
        /**
         * <pre>
         *surface area of the 3D model in square millimeters
         * </pre>
         *
         * <code>double surface_area_in_mm2 = 4;</code>
         * @return The surfaceAreaInMm2.
         */
        @java.lang.Override
        public double getSurfaceAreaInMm2() {
          return surfaceAreaInMm2_;
        }
        /**
         * <pre>
         *surface area of the 3D model in square millimeters
         * </pre>
         *
         * <code>double surface_area_in_mm2 = 4;</code>
         * @param value The surfaceAreaInMm2 to set.
         * @return This builder for chaining.
         */
        public Builder setSurfaceAreaInMm2(double value) {

          surfaceAreaInMm2_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *surface area of the 3D model in square millimeters
         * </pre>
         *
         * <code>double surface_area_in_mm2 = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearSurfaceAreaInMm2() {
          bitField0_ = (bitField0_ & ~0x00000008);
          surfaceAreaInMm2_ = 0D;
          onChanged();
          return this;
        }

        private double projectedSurfaceInMm2_ ;
        /**
         * <pre>
         *surface area projected on the biuld plate in square millimeters
         * </pre>
         *
         * <code>double projected_surface_in_mm2 = 5;</code>
         * @return The projectedSurfaceInMm2.
         */
        @java.lang.Override
        public double getProjectedSurfaceInMm2() {
          return projectedSurfaceInMm2_;
        }
        /**
         * <pre>
         *surface area projected on the biuld plate in square millimeters
         * </pre>
         *
         * <code>double projected_surface_in_mm2 = 5;</code>
         * @param value The projectedSurfaceInMm2 to set.
         * @return This builder for chaining.
         */
        public Builder setProjectedSurfaceInMm2(double value) {

          projectedSurfaceInMm2_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *surface area projected on the biuld plate in square millimeters
         * </pre>
         *
         * <code>double projected_surface_in_mm2 = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectedSurfaceInMm2() {
          bitField0_ = (bitField0_ & ~0x00000010);
          projectedSurfaceInMm2_ = 0D;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.Part.GeometryInfo)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.Part.GeometryInfo)
      private static final open_vector_format.OpenVectorFormat.Part.GeometryInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.Part.GeometryInfo();
      }

      public static open_vector_format.OpenVectorFormat.Part.GeometryInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<GeometryInfo>
          PARSER = new com.google.protobuf.AbstractParser<GeometryInfo>() {
        @java.lang.Override
        public GeometryInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<GeometryInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<GeometryInfo> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.Part.GeometryInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface MaterialOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.Part.Material)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>uint64 id = 1;</code>
       * @return The id.
       */
      long getId();

      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();
    }
    /**
     * Protobuf type {@code open_vector_format.Part.Material}
     */
    public static final class Material extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.Part.Material)
        MaterialOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Material.newBuilder() to construct.
      private Material(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Material() {
        name_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Material();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_Material_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_Material_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.Part.Material.class, open_vector_format.OpenVectorFormat.Part.Material.Builder.class);
      }

      public static final int ID_FIELD_NUMBER = 1;
      private long id_ = 0L;
      /**
       * <code>uint64 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return id_;
      }

      public static final int NAME_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (id_ != 0L) {
          output.writeUInt64(1, id_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (id_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, id_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.Part.Material)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.Part.Material other = (open_vector_format.OpenVectorFormat.Part.Material) obj;

        if (getId()
            != other.getId()) return false;
        if (!getName()
            .equals(other.getName())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getId());
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.Part.Material parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.Part.Material parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Part.Material parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.Part.Material parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Part.Material parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.Part.Material parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Part.Material parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.Part.Material parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.Part.Material parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.Part.Material parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Part.Material parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.Part.Material parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.Part.Material prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code open_vector_format.Part.Material}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.Part.Material)
          open_vector_format.OpenVectorFormat.Part.MaterialOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_Material_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_Material_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.Part.Material.class, open_vector_format.OpenVectorFormat.Part.Material.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.Part.Material.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          id_ = 0L;
          name_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_Material_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.Part.Material getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.Part.Material.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.Part.Material build() {
          open_vector_format.OpenVectorFormat.Part.Material result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.Part.Material buildPartial() {
          open_vector_format.OpenVectorFormat.Part.Material result = new open_vector_format.OpenVectorFormat.Part.Material(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.Part.Material result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.id_ = id_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.name_ = name_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.Part.Material) {
            return mergeFrom((open_vector_format.OpenVectorFormat.Part.Material)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.Part.Material other) {
          if (other == open_vector_format.OpenVectorFormat.Part.Material.getDefaultInstance()) return this;
          if (other.getId() != 0L) {
            setId(other.getId());
          }
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  id_ = input.readUInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  name_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long id_ ;
        /**
         * <code>uint64 id = 1;</code>
         * @return The id.
         */
        @java.lang.Override
        public long getId() {
          return id_;
        }
        /**
         * <code>uint64 id = 1;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(long value) {

          id_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>uint64 id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>string name = 2;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string name = 2;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string name = 2;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>string name = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>string name = 2;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          name_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.Part.Material)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.Part.Material)
      private static final open_vector_format.OpenVectorFormat.Part.Material DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.Part.Material();
      }

      public static open_vector_format.OpenVectorFormat.Part.Material getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Material>
          PARSER = new com.google.protobuf.AbstractParser<Material>() {
        @java.lang.Override
        public Material parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Material> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Material> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.Part.Material getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ProcessStrategyOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.Part.ProcessStrategy)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *start rotation angle of scan patches or layers
       * </pre>
       *
       * <code>float rot_angle_in_deg = 1;</code>
       * @return The rotAngleInDeg.
       */
      float getRotAngleInDeg();

      /**
       * <pre>
       *Angle increment of scan patches from layer to layer
       * </pre>
       *
       * <code>float increment_angle_in_deg = 2;</code>
       * @return The incrementAngleInDeg.
       */
      float getIncrementAngleInDeg();

      /**
       * <pre>
       *Shift of patches in the pattern from layer to layer
       * </pre>
       *
       * <code>float shift_in_mm = 3;</code>
       * @return The shiftInMm.
       */
      float getShiftInMm();

      /**
       * <pre>
       *Extension of patches in to each other. Synonym: overlap distance
       * </pre>
       *
       * <code>float extend_into_in_mm = 4;</code>
       * @return The extendIntoInMm.
       */
      float getExtendIntoInMm();

      /**
       * <pre>
       *maximum length of hatches when applying a pattern. Values &lt;= 0 result in no limitation.
       *for stripes and checkerboard this controls the size of the groups/patches
       *for single tracks (uni- or bidirectional) this does not apply
       * </pre>
       *
       * <code>float pattern_hatch_length_in_mm = 13;</code>
       * @return The patternHatchLengthInMm.
       */
      float getPatternHatchLengthInMm();

      /**
       * <pre>
       *pattern type of the hatches that fill the contours
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy.HatchingPattern hatching_pattern = 12;</code>
       * @return The enum numeric value on the wire for hatchingPattern.
       */
      int getHatchingPatternValue();
      /**
       * <pre>
       *pattern type of the hatches that fill the contours
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy.HatchingPattern hatching_pattern = 12;</code>
       * @return The hatchingPattern.
       */
      open_vector_format.OpenVectorFormat.Part.ProcessStrategy.HatchingPattern getHatchingPattern();

      /**
       * <pre>
       *thickness of a layer/workplane
       * </pre>
       *
       * <code>float layer_thickness_in_mm = 5;</code>
       * @return The layerThicknessInMm.
       */
      float getLayerThicknessInMm();

      /**
       * <pre>
       *distance between single material tracks
       * </pre>
       *
       * <code>float hatch_distance_in_mm = 6;</code>
       * @return The hatchDistanceInMm.
       */
      float getHatchDistanceInMm();

      /**
       * <pre>
       *distance between contour and filling
       * </pre>
       *
       * <code>float hatch_contour_distance_in_mm = 7;</code>
       * @return The hatchContourDistanceInMm.
       */
      float getHatchContourDistanceInMm();

      /**
       * <pre>
       *critical angle that is considered as overhang
       * </pre>
       *
       * <code>float overhang_angle_in_deg = 8;</code>
       * @return The overhangAngleInDeg.
       */
      float getOverhangAngleInDeg();

      /**
       * <pre>
       *offset of the first contour relative to the computed contour of the geometry.
       *often reffered to as "beam compensation" as well
       * </pre>
       *
       * <code>float contour_offset_in_mm = 9;</code>
       * @return The contourOffsetInMm.
       */
      float getContourOffsetInMm();

      /**
       * <pre>
       *number of generated contours. If &lt;= 0, there will only be hatches.
       * </pre>
       *
       * <code>int32 number_of_contours = 10;</code>
       * @return The numberOfContours.
       */
      int getNumberOfContours();

      /**
       * <pre>
       *distance inbetween multiple contour lines. Only takes effect if number_of_contours &gt; 1.
       * </pre>
       *
       * <code>float contour_distance_in_mm = 11;</code>
       * @return The contourDistanceInMm.
       */
      float getContourDistanceInMm();

      /**
       * <pre>
       *meta data: custom, human readable name of this process strategy
       * </pre>
       *
       * <code>string name = 90;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       *meta data: custom, human readable name of this process strategy
       * </pre>
       *
       * <code>string name = 90;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
       */
      java.util.List<open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam> 
          getAdditionalParametersList();
      /**
       * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
       */
      open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam getAdditionalParameters(int index);
      /**
       * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
       */
      int getAdditionalParametersCount();
      /**
       * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
       */
      java.util.List<? extends open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParamOrBuilder> 
          getAdditionalParametersOrBuilderList();
      /**
       * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
       */
      open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParamOrBuilder getAdditionalParametersOrBuilder(
          int index);
    }
    /**
     * <pre>
     *Metadata: parameters the job preprocessing program (e.g. Slicer, CAM) used to create the vector data
     * </pre>
     *
     * Protobuf type {@code open_vector_format.Part.ProcessStrategy}
     */
    public static final class ProcessStrategy extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.Part.ProcessStrategy)
        ProcessStrategyOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ProcessStrategy.newBuilder() to construct.
      private ProcessStrategy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ProcessStrategy() {
        hatchingPattern_ = 0;
        name_ = "";
        additionalParameters_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ProcessStrategy();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_ProcessStrategy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_ProcessStrategy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.Part.ProcessStrategy.class, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder.class);
      }

      /**
       * Protobuf enum {@code open_vector_format.Part.ProcessStrategy.HatchingPattern}
       */
      public enum HatchingPattern
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         *single hatch lines that follow the same direction. Long jumps are executed back to the start after each line.
         * </pre>
         *
         * <code>UNIDIRECTIONAL = 0;</code>
         */
        UNIDIRECTIONAL(0),
        /**
         * <pre>
         *single hatch lines that alternate directions with short jumps in between
         * </pre>
         *
         * <code>BIDIRECTIONAL = 1;</code>
         */
        BIDIRECTIONAL(1),
        /**
         * <pre>
         *hatches are seperated into patches with perpendicular direction following a checkerboard pattern
         *size of each patch is quadratic pattern_hatch_length_in_mm times pattern_hatch_length_in_mm
         *patch overlap (size of area with two patches) is of size extend_into_in_mm
         * </pre>
         *
         * <code>CHECKERBOARD = 2;</code>
         */
        CHECKERBOARD(2),
        /**
         * <pre>
         *hatches are seperated into patches ("stripes"), but opposed to checkerboard only in one direction perpendicular to the marking direction
         *size of each patch is pattern_hatch_length_in_mm in marking direction, unrestricted perpendicular to the marking direction
         *patch overlap (size of area with two patches) is of size extend_into_in_mm
         * </pre>
         *
         * <code>STRIPES = 3;</code>
         */
        STRIPES(3),
        /**
         * <pre>
         *hatches are seperated into patches ("hexagon")
         *size of each sidelength is pattern_hatch_length_in_mm and the long and short diagonal is calculated from it
         *patch overlap (size of area with two patches) is of size extend_into_in_mm
         * </pre>
         *
         * <code>HEXAGON = 4;</code>
         */
        HEXAGON(4),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         *single hatch lines that follow the same direction. Long jumps are executed back to the start after each line.
         * </pre>
         *
         * <code>UNIDIRECTIONAL = 0;</code>
         */
        public static final int UNIDIRECTIONAL_VALUE = 0;
        /**
         * <pre>
         *single hatch lines that alternate directions with short jumps in between
         * </pre>
         *
         * <code>BIDIRECTIONAL = 1;</code>
         */
        public static final int BIDIRECTIONAL_VALUE = 1;
        /**
         * <pre>
         *hatches are seperated into patches with perpendicular direction following a checkerboard pattern
         *size of each patch is quadratic pattern_hatch_length_in_mm times pattern_hatch_length_in_mm
         *patch overlap (size of area with two patches) is of size extend_into_in_mm
         * </pre>
         *
         * <code>CHECKERBOARD = 2;</code>
         */
        public static final int CHECKERBOARD_VALUE = 2;
        /**
         * <pre>
         *hatches are seperated into patches ("stripes"), but opposed to checkerboard only in one direction perpendicular to the marking direction
         *size of each patch is pattern_hatch_length_in_mm in marking direction, unrestricted perpendicular to the marking direction
         *patch overlap (size of area with two patches) is of size extend_into_in_mm
         * </pre>
         *
         * <code>STRIPES = 3;</code>
         */
        public static final int STRIPES_VALUE = 3;
        /**
         * <pre>
         *hatches are seperated into patches ("hexagon")
         *size of each sidelength is pattern_hatch_length_in_mm and the long and short diagonal is calculated from it
         *patch overlap (size of area with two patches) is of size extend_into_in_mm
         * </pre>
         *
         * <code>HEXAGON = 4;</code>
         */
        public static final int HEXAGON_VALUE = 4;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static HatchingPattern valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static HatchingPattern forNumber(int value) {
          switch (value) {
            case 0: return UNIDIRECTIONAL;
            case 1: return BIDIRECTIONAL;
            case 2: return CHECKERBOARD;
            case 3: return STRIPES;
            case 4: return HEXAGON;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<HatchingPattern>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            HatchingPattern> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<HatchingPattern>() {
                public HatchingPattern findValueByNumber(int number) {
                  return HatchingPattern.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDescriptor().getEnumTypes().get(0);
        }

        private static final HatchingPattern[] VALUES = values();

        public static HatchingPattern valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private HatchingPattern(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:open_vector_format.Part.ProcessStrategy.HatchingPattern)
      }

      public interface ProprietaryParamOrBuilder extends
          // @@protoc_insertion_point(interface_extends:open_vector_format.Part.ProcessStrategy.ProprietaryParam)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>string param_name = 1;</code>
         * @return The paramName.
         */
        java.lang.String getParamName();
        /**
         * <code>string param_name = 1;</code>
         * @return The bytes for paramName.
         */
        com.google.protobuf.ByteString
            getParamNameBytes();

        /**
         * <code>double param_value = 2;</code>
         * @return The paramValue.
         */
        double getParamValue();

        /**
         * <code>string param_description = 3;</code>
         * @return The paramDescription.
         */
        java.lang.String getParamDescription();
        /**
         * <code>string param_description = 3;</code>
         * @return The bytes for paramDescription.
         */
        com.google.protobuf.ByteString
            getParamDescriptionBytes();
      }
      /**
       * <pre>
       *generic definition of proprietary parameters descriptor
       * </pre>
       *
       * Protobuf type {@code open_vector_format.Part.ProcessStrategy.ProprietaryParam}
       */
      public static final class ProprietaryParam extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:open_vector_format.Part.ProcessStrategy.ProprietaryParam)
          ProprietaryParamOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ProprietaryParam.newBuilder() to construct.
        private ProprietaryParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ProprietaryParam() {
          paramName_ = "";
          paramDescription_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new ProprietaryParam();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_ProcessStrategy_ProprietaryParam_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_ProcessStrategy_ProprietaryParam_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.class, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.Builder.class);
        }

        public static final int PARAM_NAME_FIELD_NUMBER = 1;
        @SuppressWarnings("serial")
        private volatile java.lang.Object paramName_ = "";
        /**
         * <code>string param_name = 1;</code>
         * @return The paramName.
         */
        @java.lang.Override
        public java.lang.String getParamName() {
          java.lang.Object ref = paramName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            paramName_ = s;
            return s;
          }
        }
        /**
         * <code>string param_name = 1;</code>
         * @return The bytes for paramName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getParamNameBytes() {
          java.lang.Object ref = paramName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            paramName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int PARAM_VALUE_FIELD_NUMBER = 2;
        private double paramValue_ = 0D;
        /**
         * <code>double param_value = 2;</code>
         * @return The paramValue.
         */
        @java.lang.Override
        public double getParamValue() {
          return paramValue_;
        }

        public static final int PARAM_DESCRIPTION_FIELD_NUMBER = 3;
        @SuppressWarnings("serial")
        private volatile java.lang.Object paramDescription_ = "";
        /**
         * <code>string param_description = 3;</code>
         * @return The paramDescription.
         */
        @java.lang.Override
        public java.lang.String getParamDescription() {
          java.lang.Object ref = paramDescription_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            paramDescription_ = s;
            return s;
          }
        }
        /**
         * <code>string param_description = 3;</code>
         * @return The bytes for paramDescription.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getParamDescriptionBytes() {
          java.lang.Object ref = paramDescription_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            paramDescription_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(paramName_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, paramName_);
          }
          if (java.lang.Double.doubleToRawLongBits(paramValue_) != 0) {
            output.writeDouble(2, paramValue_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(paramDescription_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, paramDescription_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(paramName_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, paramName_);
          }
          if (java.lang.Double.doubleToRawLongBits(paramValue_) != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, paramValue_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(paramDescription_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, paramDescription_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam)) {
            return super.equals(obj);
          }
          open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam other = (open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam) obj;

          if (!getParamName()
              .equals(other.getParamName())) return false;
          if (java.lang.Double.doubleToLongBits(getParamValue())
              != java.lang.Double.doubleToLongBits(
                  other.getParamValue())) return false;
          if (!getParamDescription()
              .equals(other.getParamDescription())) return false;
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + PARAM_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getParamName().hashCode();
          hash = (37 * hash) + PARAM_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getParamValue()));
          hash = (37 * hash) + PARAM_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getParamDescription().hashCode();
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         *generic definition of proprietary parameters descriptor
         * </pre>
         *
         * Protobuf type {@code open_vector_format.Part.ProcessStrategy.ProprietaryParam}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:open_vector_format.Part.ProcessStrategy.ProprietaryParam)
            open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParamOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_ProcessStrategy_ProprietaryParam_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_ProcessStrategy_ProprietaryParam_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.class, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.Builder.class);
          }

          // Construct using open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            paramName_ = "";
            paramValue_ = 0D;
            paramDescription_ = "";
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_ProcessStrategy_ProprietaryParam_descriptor;
          }

          @java.lang.Override
          public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam getDefaultInstanceForType() {
            return open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.getDefaultInstance();
          }

          @java.lang.Override
          public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam build() {
            open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam buildPartial() {
            open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam result = new open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam result) {
            int from_bitField0_ = bitField0_;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.paramName_ = paramName_;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.paramValue_ = paramValue_;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.paramDescription_ = paramDescription_;
            }
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam) {
              return mergeFrom((open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam other) {
            if (other == open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.getDefaultInstance()) return this;
            if (!other.getParamName().isEmpty()) {
              paramName_ = other.paramName_;
              bitField0_ |= 0x00000001;
              onChanged();
            }
            if (other.getParamValue() != 0D) {
              setParamValue(other.getParamValue());
            }
            if (!other.getParamDescription().isEmpty()) {
              paramDescription_ = other.paramDescription_;
              bitField0_ |= 0x00000004;
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 10: {
                    paramName_ = input.readStringRequireUtf8();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 10
                  case 17: {
                    paramValue_ = input.readDouble();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 17
                  case 26: {
                    paramDescription_ = input.readStringRequireUtf8();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 26
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private java.lang.Object paramName_ = "";
          /**
           * <code>string param_name = 1;</code>
           * @return The paramName.
           */
          public java.lang.String getParamName() {
            java.lang.Object ref = paramName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              paramName_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>string param_name = 1;</code>
           * @return The bytes for paramName.
           */
          public com.google.protobuf.ByteString
              getParamNameBytes() {
            java.lang.Object ref = paramName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              paramName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>string param_name = 1;</code>
           * @param value The paramName to set.
           * @return This builder for chaining.
           */
          public Builder setParamName(
              java.lang.String value) {
            if (value == null) { throw new NullPointerException(); }
            paramName_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <code>string param_name = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearParamName() {
            paramName_ = getDefaultInstance().getParamName();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
            return this;
          }
          /**
           * <code>string param_name = 1;</code>
           * @param value The bytes for paramName to set.
           * @return This builder for chaining.
           */
          public Builder setParamNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            checkByteStringIsUtf8(value);
            paramName_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }

          private double paramValue_ ;
          /**
           * <code>double param_value = 2;</code>
           * @return The paramValue.
           */
          @java.lang.Override
          public double getParamValue() {
            return paramValue_;
          }
          /**
           * <code>double param_value = 2;</code>
           * @param value The paramValue to set.
           * @return This builder for chaining.
           */
          public Builder setParamValue(double value) {

            paramValue_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>double param_value = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearParamValue() {
            bitField0_ = (bitField0_ & ~0x00000002);
            paramValue_ = 0D;
            onChanged();
            return this;
          }

          private java.lang.Object paramDescription_ = "";
          /**
           * <code>string param_description = 3;</code>
           * @return The paramDescription.
           */
          public java.lang.String getParamDescription() {
            java.lang.Object ref = paramDescription_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              paramDescription_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>string param_description = 3;</code>
           * @return The bytes for paramDescription.
           */
          public com.google.protobuf.ByteString
              getParamDescriptionBytes() {
            java.lang.Object ref = paramDescription_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              paramDescription_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>string param_description = 3;</code>
           * @param value The paramDescription to set.
           * @return This builder for chaining.
           */
          public Builder setParamDescription(
              java.lang.String value) {
            if (value == null) { throw new NullPointerException(); }
            paramDescription_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <code>string param_description = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearParamDescription() {
            paramDescription_ = getDefaultInstance().getParamDescription();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
            return this;
          }
          /**
           * <code>string param_description = 3;</code>
           * @param value The bytes for paramDescription to set.
           * @return This builder for chaining.
           */
          public Builder setParamDescriptionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            checkByteStringIsUtf8(value);
            paramDescription_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:open_vector_format.Part.ProcessStrategy.ProprietaryParam)
        }

        // @@protoc_insertion_point(class_scope:open_vector_format.Part.ProcessStrategy.ProprietaryParam)
        private static final open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam();
        }

        public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ProprietaryParam>
            PARSER = new com.google.protobuf.AbstractParser<ProprietaryParam>() {
          @java.lang.Override
          public ProprietaryParam parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<ProprietaryParam> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ProprietaryParam> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int ROT_ANGLE_IN_DEG_FIELD_NUMBER = 1;
      private float rotAngleInDeg_ = 0F;
      /**
       * <pre>
       *start rotation angle of scan patches or layers
       * </pre>
       *
       * <code>float rot_angle_in_deg = 1;</code>
       * @return The rotAngleInDeg.
       */
      @java.lang.Override
      public float getRotAngleInDeg() {
        return rotAngleInDeg_;
      }

      public static final int INCREMENT_ANGLE_IN_DEG_FIELD_NUMBER = 2;
      private float incrementAngleInDeg_ = 0F;
      /**
       * <pre>
       *Angle increment of scan patches from layer to layer
       * </pre>
       *
       * <code>float increment_angle_in_deg = 2;</code>
       * @return The incrementAngleInDeg.
       */
      @java.lang.Override
      public float getIncrementAngleInDeg() {
        return incrementAngleInDeg_;
      }

      public static final int SHIFT_IN_MM_FIELD_NUMBER = 3;
      private float shiftInMm_ = 0F;
      /**
       * <pre>
       *Shift of patches in the pattern from layer to layer
       * </pre>
       *
       * <code>float shift_in_mm = 3;</code>
       * @return The shiftInMm.
       */
      @java.lang.Override
      public float getShiftInMm() {
        return shiftInMm_;
      }

      public static final int EXTEND_INTO_IN_MM_FIELD_NUMBER = 4;
      private float extendIntoInMm_ = 0F;
      /**
       * <pre>
       *Extension of patches in to each other. Synonym: overlap distance
       * </pre>
       *
       * <code>float extend_into_in_mm = 4;</code>
       * @return The extendIntoInMm.
       */
      @java.lang.Override
      public float getExtendIntoInMm() {
        return extendIntoInMm_;
      }

      public static final int PATTERN_HATCH_LENGTH_IN_MM_FIELD_NUMBER = 13;
      private float patternHatchLengthInMm_ = 0F;
      /**
       * <pre>
       *maximum length of hatches when applying a pattern. Values &lt;= 0 result in no limitation.
       *for stripes and checkerboard this controls the size of the groups/patches
       *for single tracks (uni- or bidirectional) this does not apply
       * </pre>
       *
       * <code>float pattern_hatch_length_in_mm = 13;</code>
       * @return The patternHatchLengthInMm.
       */
      @java.lang.Override
      public float getPatternHatchLengthInMm() {
        return patternHatchLengthInMm_;
      }

      public static final int HATCHING_PATTERN_FIELD_NUMBER = 12;
      private int hatchingPattern_ = 0;
      /**
       * <pre>
       *pattern type of the hatches that fill the contours
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy.HatchingPattern hatching_pattern = 12;</code>
       * @return The enum numeric value on the wire for hatchingPattern.
       */
      @java.lang.Override public int getHatchingPatternValue() {
        return hatchingPattern_;
      }
      /**
       * <pre>
       *pattern type of the hatches that fill the contours
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy.HatchingPattern hatching_pattern = 12;</code>
       * @return The hatchingPattern.
       */
      @java.lang.Override public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.HatchingPattern getHatchingPattern() {
        open_vector_format.OpenVectorFormat.Part.ProcessStrategy.HatchingPattern result = open_vector_format.OpenVectorFormat.Part.ProcessStrategy.HatchingPattern.forNumber(hatchingPattern_);
        return result == null ? open_vector_format.OpenVectorFormat.Part.ProcessStrategy.HatchingPattern.UNRECOGNIZED : result;
      }

      public static final int LAYER_THICKNESS_IN_MM_FIELD_NUMBER = 5;
      private float layerThicknessInMm_ = 0F;
      /**
       * <pre>
       *thickness of a layer/workplane
       * </pre>
       *
       * <code>float layer_thickness_in_mm = 5;</code>
       * @return The layerThicknessInMm.
       */
      @java.lang.Override
      public float getLayerThicknessInMm() {
        return layerThicknessInMm_;
      }

      public static final int HATCH_DISTANCE_IN_MM_FIELD_NUMBER = 6;
      private float hatchDistanceInMm_ = 0F;
      /**
       * <pre>
       *distance between single material tracks
       * </pre>
       *
       * <code>float hatch_distance_in_mm = 6;</code>
       * @return The hatchDistanceInMm.
       */
      @java.lang.Override
      public float getHatchDistanceInMm() {
        return hatchDistanceInMm_;
      }

      public static final int HATCH_CONTOUR_DISTANCE_IN_MM_FIELD_NUMBER = 7;
      private float hatchContourDistanceInMm_ = 0F;
      /**
       * <pre>
       *distance between contour and filling
       * </pre>
       *
       * <code>float hatch_contour_distance_in_mm = 7;</code>
       * @return The hatchContourDistanceInMm.
       */
      @java.lang.Override
      public float getHatchContourDistanceInMm() {
        return hatchContourDistanceInMm_;
      }

      public static final int OVERHANG_ANGLE_IN_DEG_FIELD_NUMBER = 8;
      private float overhangAngleInDeg_ = 0F;
      /**
       * <pre>
       *critical angle that is considered as overhang
       * </pre>
       *
       * <code>float overhang_angle_in_deg = 8;</code>
       * @return The overhangAngleInDeg.
       */
      @java.lang.Override
      public float getOverhangAngleInDeg() {
        return overhangAngleInDeg_;
      }

      public static final int CONTOUR_OFFSET_IN_MM_FIELD_NUMBER = 9;
      private float contourOffsetInMm_ = 0F;
      /**
       * <pre>
       *offset of the first contour relative to the computed contour of the geometry.
       *often reffered to as "beam compensation" as well
       * </pre>
       *
       * <code>float contour_offset_in_mm = 9;</code>
       * @return The contourOffsetInMm.
       */
      @java.lang.Override
      public float getContourOffsetInMm() {
        return contourOffsetInMm_;
      }

      public static final int NUMBER_OF_CONTOURS_FIELD_NUMBER = 10;
      private int numberOfContours_ = 0;
      /**
       * <pre>
       *number of generated contours. If &lt;= 0, there will only be hatches.
       * </pre>
       *
       * <code>int32 number_of_contours = 10;</code>
       * @return The numberOfContours.
       */
      @java.lang.Override
      public int getNumberOfContours() {
        return numberOfContours_;
      }

      public static final int CONTOUR_DISTANCE_IN_MM_FIELD_NUMBER = 11;
      private float contourDistanceInMm_ = 0F;
      /**
       * <pre>
       *distance inbetween multiple contour lines. Only takes effect if number_of_contours &gt; 1.
       * </pre>
       *
       * <code>float contour_distance_in_mm = 11;</code>
       * @return The contourDistanceInMm.
       */
      @java.lang.Override
      public float getContourDistanceInMm() {
        return contourDistanceInMm_;
      }

      public static final int NAME_FIELD_NUMBER = 90;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <pre>
       *meta data: custom, human readable name of this process strategy
       * </pre>
       *
       * <code>string name = 90;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <pre>
       *meta data: custom, human readable name of this process strategy
       * </pre>
       *
       * <code>string name = 90;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ADDITIONAL_PARAMETERS_FIELD_NUMBER = 100;
      @SuppressWarnings("serial")
      private java.util.List<open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam> additionalParameters_;
      /**
       * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
       */
      @java.lang.Override
      public java.util.List<open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam> getAdditionalParametersList() {
        return additionalParameters_;
      }
      /**
       * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
       */
      @java.lang.Override
      public java.util.List<? extends open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParamOrBuilder> 
          getAdditionalParametersOrBuilderList() {
        return additionalParameters_;
      }
      /**
       * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
       */
      @java.lang.Override
      public int getAdditionalParametersCount() {
        return additionalParameters_.size();
      }
      /**
       * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam getAdditionalParameters(int index) {
        return additionalParameters_.get(index);
      }
      /**
       * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParamOrBuilder getAdditionalParametersOrBuilder(
          int index) {
        return additionalParameters_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (java.lang.Float.floatToRawIntBits(rotAngleInDeg_) != 0) {
          output.writeFloat(1, rotAngleInDeg_);
        }
        if (java.lang.Float.floatToRawIntBits(incrementAngleInDeg_) != 0) {
          output.writeFloat(2, incrementAngleInDeg_);
        }
        if (java.lang.Float.floatToRawIntBits(shiftInMm_) != 0) {
          output.writeFloat(3, shiftInMm_);
        }
        if (java.lang.Float.floatToRawIntBits(extendIntoInMm_) != 0) {
          output.writeFloat(4, extendIntoInMm_);
        }
        if (java.lang.Float.floatToRawIntBits(layerThicknessInMm_) != 0) {
          output.writeFloat(5, layerThicknessInMm_);
        }
        if (java.lang.Float.floatToRawIntBits(hatchDistanceInMm_) != 0) {
          output.writeFloat(6, hatchDistanceInMm_);
        }
        if (java.lang.Float.floatToRawIntBits(hatchContourDistanceInMm_) != 0) {
          output.writeFloat(7, hatchContourDistanceInMm_);
        }
        if (java.lang.Float.floatToRawIntBits(overhangAngleInDeg_) != 0) {
          output.writeFloat(8, overhangAngleInDeg_);
        }
        if (java.lang.Float.floatToRawIntBits(contourOffsetInMm_) != 0) {
          output.writeFloat(9, contourOffsetInMm_);
        }
        if (numberOfContours_ != 0) {
          output.writeInt32(10, numberOfContours_);
        }
        if (java.lang.Float.floatToRawIntBits(contourDistanceInMm_) != 0) {
          output.writeFloat(11, contourDistanceInMm_);
        }
        if (hatchingPattern_ != open_vector_format.OpenVectorFormat.Part.ProcessStrategy.HatchingPattern.UNIDIRECTIONAL.getNumber()) {
          output.writeEnum(12, hatchingPattern_);
        }
        if (java.lang.Float.floatToRawIntBits(patternHatchLengthInMm_) != 0) {
          output.writeFloat(13, patternHatchLengthInMm_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 90, name_);
        }
        for (int i = 0; i < additionalParameters_.size(); i++) {
          output.writeMessage(100, additionalParameters_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (java.lang.Float.floatToRawIntBits(rotAngleInDeg_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, rotAngleInDeg_);
        }
        if (java.lang.Float.floatToRawIntBits(incrementAngleInDeg_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, incrementAngleInDeg_);
        }
        if (java.lang.Float.floatToRawIntBits(shiftInMm_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, shiftInMm_);
        }
        if (java.lang.Float.floatToRawIntBits(extendIntoInMm_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, extendIntoInMm_);
        }
        if (java.lang.Float.floatToRawIntBits(layerThicknessInMm_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, layerThicknessInMm_);
        }
        if (java.lang.Float.floatToRawIntBits(hatchDistanceInMm_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(6, hatchDistanceInMm_);
        }
        if (java.lang.Float.floatToRawIntBits(hatchContourDistanceInMm_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(7, hatchContourDistanceInMm_);
        }
        if (java.lang.Float.floatToRawIntBits(overhangAngleInDeg_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(8, overhangAngleInDeg_);
        }
        if (java.lang.Float.floatToRawIntBits(contourOffsetInMm_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(9, contourOffsetInMm_);
        }
        if (numberOfContours_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10, numberOfContours_);
        }
        if (java.lang.Float.floatToRawIntBits(contourDistanceInMm_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(11, contourDistanceInMm_);
        }
        if (hatchingPattern_ != open_vector_format.OpenVectorFormat.Part.ProcessStrategy.HatchingPattern.UNIDIRECTIONAL.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(12, hatchingPattern_);
        }
        if (java.lang.Float.floatToRawIntBits(patternHatchLengthInMm_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(13, patternHatchLengthInMm_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(90, name_);
        }
        for (int i = 0; i < additionalParameters_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(100, additionalParameters_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.Part.ProcessStrategy)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.Part.ProcessStrategy other = (open_vector_format.OpenVectorFormat.Part.ProcessStrategy) obj;

        if (java.lang.Float.floatToIntBits(getRotAngleInDeg())
            != java.lang.Float.floatToIntBits(
                other.getRotAngleInDeg())) return false;
        if (java.lang.Float.floatToIntBits(getIncrementAngleInDeg())
            != java.lang.Float.floatToIntBits(
                other.getIncrementAngleInDeg())) return false;
        if (java.lang.Float.floatToIntBits(getShiftInMm())
            != java.lang.Float.floatToIntBits(
                other.getShiftInMm())) return false;
        if (java.lang.Float.floatToIntBits(getExtendIntoInMm())
            != java.lang.Float.floatToIntBits(
                other.getExtendIntoInMm())) return false;
        if (java.lang.Float.floatToIntBits(getPatternHatchLengthInMm())
            != java.lang.Float.floatToIntBits(
                other.getPatternHatchLengthInMm())) return false;
        if (hatchingPattern_ != other.hatchingPattern_) return false;
        if (java.lang.Float.floatToIntBits(getLayerThicknessInMm())
            != java.lang.Float.floatToIntBits(
                other.getLayerThicknessInMm())) return false;
        if (java.lang.Float.floatToIntBits(getHatchDistanceInMm())
            != java.lang.Float.floatToIntBits(
                other.getHatchDistanceInMm())) return false;
        if (java.lang.Float.floatToIntBits(getHatchContourDistanceInMm())
            != java.lang.Float.floatToIntBits(
                other.getHatchContourDistanceInMm())) return false;
        if (java.lang.Float.floatToIntBits(getOverhangAngleInDeg())
            != java.lang.Float.floatToIntBits(
                other.getOverhangAngleInDeg())) return false;
        if (java.lang.Float.floatToIntBits(getContourOffsetInMm())
            != java.lang.Float.floatToIntBits(
                other.getContourOffsetInMm())) return false;
        if (getNumberOfContours()
            != other.getNumberOfContours()) return false;
        if (java.lang.Float.floatToIntBits(getContourDistanceInMm())
            != java.lang.Float.floatToIntBits(
                other.getContourDistanceInMm())) return false;
        if (!getName()
            .equals(other.getName())) return false;
        if (!getAdditionalParametersList()
            .equals(other.getAdditionalParametersList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ROT_ANGLE_IN_DEG_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRotAngleInDeg());
        hash = (37 * hash) + INCREMENT_ANGLE_IN_DEG_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getIncrementAngleInDeg());
        hash = (37 * hash) + SHIFT_IN_MM_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getShiftInMm());
        hash = (37 * hash) + EXTEND_INTO_IN_MM_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getExtendIntoInMm());
        hash = (37 * hash) + PATTERN_HATCH_LENGTH_IN_MM_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getPatternHatchLengthInMm());
        hash = (37 * hash) + HATCHING_PATTERN_FIELD_NUMBER;
        hash = (53 * hash) + hatchingPattern_;
        hash = (37 * hash) + LAYER_THICKNESS_IN_MM_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getLayerThicknessInMm());
        hash = (37 * hash) + HATCH_DISTANCE_IN_MM_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getHatchDistanceInMm());
        hash = (37 * hash) + HATCH_CONTOUR_DISTANCE_IN_MM_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getHatchContourDistanceInMm());
        hash = (37 * hash) + OVERHANG_ANGLE_IN_DEG_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getOverhangAngleInDeg());
        hash = (37 * hash) + CONTOUR_OFFSET_IN_MM_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getContourOffsetInMm());
        hash = (37 * hash) + NUMBER_OF_CONTOURS_FIELD_NUMBER;
        hash = (53 * hash) + getNumberOfContours();
        hash = (37 * hash) + CONTOUR_DISTANCE_IN_MM_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getContourDistanceInMm());
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        if (getAdditionalParametersCount() > 0) {
          hash = (37 * hash) + ADDITIONAL_PARAMETERS_FIELD_NUMBER;
          hash = (53 * hash) + getAdditionalParametersList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.Part.ProcessStrategy prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *Metadata: parameters the job preprocessing program (e.g. Slicer, CAM) used to create the vector data
       * </pre>
       *
       * Protobuf type {@code open_vector_format.Part.ProcessStrategy}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.Part.ProcessStrategy)
          open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_ProcessStrategy_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_ProcessStrategy_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.Part.ProcessStrategy.class, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.Part.ProcessStrategy.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          rotAngleInDeg_ = 0F;
          incrementAngleInDeg_ = 0F;
          shiftInMm_ = 0F;
          extendIntoInMm_ = 0F;
          patternHatchLengthInMm_ = 0F;
          hatchingPattern_ = 0;
          layerThicknessInMm_ = 0F;
          hatchDistanceInMm_ = 0F;
          hatchContourDistanceInMm_ = 0F;
          overhangAngleInDeg_ = 0F;
          contourOffsetInMm_ = 0F;
          numberOfContours_ = 0;
          contourDistanceInMm_ = 0F;
          name_ = "";
          if (additionalParametersBuilder_ == null) {
            additionalParameters_ = java.util.Collections.emptyList();
          } else {
            additionalParameters_ = null;
            additionalParametersBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00004000);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_ProcessStrategy_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.Part.ProcessStrategy getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.Part.ProcessStrategy build() {
          open_vector_format.OpenVectorFormat.Part.ProcessStrategy result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.Part.ProcessStrategy buildPartial() {
          open_vector_format.OpenVectorFormat.Part.ProcessStrategy result = new open_vector_format.OpenVectorFormat.Part.ProcessStrategy(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(open_vector_format.OpenVectorFormat.Part.ProcessStrategy result) {
          if (additionalParametersBuilder_ == null) {
            if (((bitField0_ & 0x00004000) != 0)) {
              additionalParameters_ = java.util.Collections.unmodifiableList(additionalParameters_);
              bitField0_ = (bitField0_ & ~0x00004000);
            }
            result.additionalParameters_ = additionalParameters_;
          } else {
            result.additionalParameters_ = additionalParametersBuilder_.build();
          }
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.Part.ProcessStrategy result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.rotAngleInDeg_ = rotAngleInDeg_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.incrementAngleInDeg_ = incrementAngleInDeg_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.shiftInMm_ = shiftInMm_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.extendIntoInMm_ = extendIntoInMm_;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.patternHatchLengthInMm_ = patternHatchLengthInMm_;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.hatchingPattern_ = hatchingPattern_;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.layerThicknessInMm_ = layerThicknessInMm_;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.hatchDistanceInMm_ = hatchDistanceInMm_;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.hatchContourDistanceInMm_ = hatchContourDistanceInMm_;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.overhangAngleInDeg_ = overhangAngleInDeg_;
          }
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.contourOffsetInMm_ = contourOffsetInMm_;
          }
          if (((from_bitField0_ & 0x00000800) != 0)) {
            result.numberOfContours_ = numberOfContours_;
          }
          if (((from_bitField0_ & 0x00001000) != 0)) {
            result.contourDistanceInMm_ = contourDistanceInMm_;
          }
          if (((from_bitField0_ & 0x00002000) != 0)) {
            result.name_ = name_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.Part.ProcessStrategy) {
            return mergeFrom((open_vector_format.OpenVectorFormat.Part.ProcessStrategy)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.Part.ProcessStrategy other) {
          if (other == open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance()) return this;
          if (other.getRotAngleInDeg() != 0F) {
            setRotAngleInDeg(other.getRotAngleInDeg());
          }
          if (other.getIncrementAngleInDeg() != 0F) {
            setIncrementAngleInDeg(other.getIncrementAngleInDeg());
          }
          if (other.getShiftInMm() != 0F) {
            setShiftInMm(other.getShiftInMm());
          }
          if (other.getExtendIntoInMm() != 0F) {
            setExtendIntoInMm(other.getExtendIntoInMm());
          }
          if (other.getPatternHatchLengthInMm() != 0F) {
            setPatternHatchLengthInMm(other.getPatternHatchLengthInMm());
          }
          if (other.hatchingPattern_ != 0) {
            setHatchingPatternValue(other.getHatchingPatternValue());
          }
          if (other.getLayerThicknessInMm() != 0F) {
            setLayerThicknessInMm(other.getLayerThicknessInMm());
          }
          if (other.getHatchDistanceInMm() != 0F) {
            setHatchDistanceInMm(other.getHatchDistanceInMm());
          }
          if (other.getHatchContourDistanceInMm() != 0F) {
            setHatchContourDistanceInMm(other.getHatchContourDistanceInMm());
          }
          if (other.getOverhangAngleInDeg() != 0F) {
            setOverhangAngleInDeg(other.getOverhangAngleInDeg());
          }
          if (other.getContourOffsetInMm() != 0F) {
            setContourOffsetInMm(other.getContourOffsetInMm());
          }
          if (other.getNumberOfContours() != 0) {
            setNumberOfContours(other.getNumberOfContours());
          }
          if (other.getContourDistanceInMm() != 0F) {
            setContourDistanceInMm(other.getContourDistanceInMm());
          }
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            bitField0_ |= 0x00002000;
            onChanged();
          }
          if (additionalParametersBuilder_ == null) {
            if (!other.additionalParameters_.isEmpty()) {
              if (additionalParameters_.isEmpty()) {
                additionalParameters_ = other.additionalParameters_;
                bitField0_ = (bitField0_ & ~0x00004000);
              } else {
                ensureAdditionalParametersIsMutable();
                additionalParameters_.addAll(other.additionalParameters_);
              }
              onChanged();
            }
          } else {
            if (!other.additionalParameters_.isEmpty()) {
              if (additionalParametersBuilder_.isEmpty()) {
                additionalParametersBuilder_.dispose();
                additionalParametersBuilder_ = null;
                additionalParameters_ = other.additionalParameters_;
                bitField0_ = (bitField0_ & ~0x00004000);
                additionalParametersBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getAdditionalParametersFieldBuilder() : null;
              } else {
                additionalParametersBuilder_.addAllMessages(other.additionalParameters_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  rotAngleInDeg_ = input.readFloat();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 13
                case 21: {
                  incrementAngleInDeg_ = input.readFloat();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 21
                case 29: {
                  shiftInMm_ = input.readFloat();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 29
                case 37: {
                  extendIntoInMm_ = input.readFloat();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 37
                case 45: {
                  layerThicknessInMm_ = input.readFloat();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 45
                case 53: {
                  hatchDistanceInMm_ = input.readFloat();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 53
                case 61: {
                  hatchContourDistanceInMm_ = input.readFloat();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 61
                case 69: {
                  overhangAngleInDeg_ = input.readFloat();
                  bitField0_ |= 0x00000200;
                  break;
                } // case 69
                case 77: {
                  contourOffsetInMm_ = input.readFloat();
                  bitField0_ |= 0x00000400;
                  break;
                } // case 77
                case 80: {
                  numberOfContours_ = input.readInt32();
                  bitField0_ |= 0x00000800;
                  break;
                } // case 80
                case 93: {
                  contourDistanceInMm_ = input.readFloat();
                  bitField0_ |= 0x00001000;
                  break;
                } // case 93
                case 96: {
                  hatchingPattern_ = input.readEnum();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 96
                case 109: {
                  patternHatchLengthInMm_ = input.readFloat();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 109
                case 722: {
                  name_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00002000;
                  break;
                } // case 722
                case 802: {
                  open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam m =
                      input.readMessage(
                          open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.parser(),
                          extensionRegistry);
                  if (additionalParametersBuilder_ == null) {
                    ensureAdditionalParametersIsMutable();
                    additionalParameters_.add(m);
                  } else {
                    additionalParametersBuilder_.addMessage(m);
                  }
                  break;
                } // case 802
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private float rotAngleInDeg_ ;
        /**
         * <pre>
         *start rotation angle of scan patches or layers
         * </pre>
         *
         * <code>float rot_angle_in_deg = 1;</code>
         * @return The rotAngleInDeg.
         */
        @java.lang.Override
        public float getRotAngleInDeg() {
          return rotAngleInDeg_;
        }
        /**
         * <pre>
         *start rotation angle of scan patches or layers
         * </pre>
         *
         * <code>float rot_angle_in_deg = 1;</code>
         * @param value The rotAngleInDeg to set.
         * @return This builder for chaining.
         */
        public Builder setRotAngleInDeg(float value) {

          rotAngleInDeg_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *start rotation angle of scan patches or layers
         * </pre>
         *
         * <code>float rot_angle_in_deg = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearRotAngleInDeg() {
          bitField0_ = (bitField0_ & ~0x00000001);
          rotAngleInDeg_ = 0F;
          onChanged();
          return this;
        }

        private float incrementAngleInDeg_ ;
        /**
         * <pre>
         *Angle increment of scan patches from layer to layer
         * </pre>
         *
         * <code>float increment_angle_in_deg = 2;</code>
         * @return The incrementAngleInDeg.
         */
        @java.lang.Override
        public float getIncrementAngleInDeg() {
          return incrementAngleInDeg_;
        }
        /**
         * <pre>
         *Angle increment of scan patches from layer to layer
         * </pre>
         *
         * <code>float increment_angle_in_deg = 2;</code>
         * @param value The incrementAngleInDeg to set.
         * @return This builder for chaining.
         */
        public Builder setIncrementAngleInDeg(float value) {

          incrementAngleInDeg_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *Angle increment of scan patches from layer to layer
         * </pre>
         *
         * <code>float increment_angle_in_deg = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearIncrementAngleInDeg() {
          bitField0_ = (bitField0_ & ~0x00000002);
          incrementAngleInDeg_ = 0F;
          onChanged();
          return this;
        }

        private float shiftInMm_ ;
        /**
         * <pre>
         *Shift of patches in the pattern from layer to layer
         * </pre>
         *
         * <code>float shift_in_mm = 3;</code>
         * @return The shiftInMm.
         */
        @java.lang.Override
        public float getShiftInMm() {
          return shiftInMm_;
        }
        /**
         * <pre>
         *Shift of patches in the pattern from layer to layer
         * </pre>
         *
         * <code>float shift_in_mm = 3;</code>
         * @param value The shiftInMm to set.
         * @return This builder for chaining.
         */
        public Builder setShiftInMm(float value) {

          shiftInMm_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *Shift of patches in the pattern from layer to layer
         * </pre>
         *
         * <code>float shift_in_mm = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearShiftInMm() {
          bitField0_ = (bitField0_ & ~0x00000004);
          shiftInMm_ = 0F;
          onChanged();
          return this;
        }

        private float extendIntoInMm_ ;
        /**
         * <pre>
         *Extension of patches in to each other. Synonym: overlap distance
         * </pre>
         *
         * <code>float extend_into_in_mm = 4;</code>
         * @return The extendIntoInMm.
         */
        @java.lang.Override
        public float getExtendIntoInMm() {
          return extendIntoInMm_;
        }
        /**
         * <pre>
         *Extension of patches in to each other. Synonym: overlap distance
         * </pre>
         *
         * <code>float extend_into_in_mm = 4;</code>
         * @param value The extendIntoInMm to set.
         * @return This builder for chaining.
         */
        public Builder setExtendIntoInMm(float value) {

          extendIntoInMm_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *Extension of patches in to each other. Synonym: overlap distance
         * </pre>
         *
         * <code>float extend_into_in_mm = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearExtendIntoInMm() {
          bitField0_ = (bitField0_ & ~0x00000008);
          extendIntoInMm_ = 0F;
          onChanged();
          return this;
        }

        private float patternHatchLengthInMm_ ;
        /**
         * <pre>
         *maximum length of hatches when applying a pattern. Values &lt;= 0 result in no limitation.
         *for stripes and checkerboard this controls the size of the groups/patches
         *for single tracks (uni- or bidirectional) this does not apply
         * </pre>
         *
         * <code>float pattern_hatch_length_in_mm = 13;</code>
         * @return The patternHatchLengthInMm.
         */
        @java.lang.Override
        public float getPatternHatchLengthInMm() {
          return patternHatchLengthInMm_;
        }
        /**
         * <pre>
         *maximum length of hatches when applying a pattern. Values &lt;= 0 result in no limitation.
         *for stripes and checkerboard this controls the size of the groups/patches
         *for single tracks (uni- or bidirectional) this does not apply
         * </pre>
         *
         * <code>float pattern_hatch_length_in_mm = 13;</code>
         * @param value The patternHatchLengthInMm to set.
         * @return This builder for chaining.
         */
        public Builder setPatternHatchLengthInMm(float value) {

          patternHatchLengthInMm_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *maximum length of hatches when applying a pattern. Values &lt;= 0 result in no limitation.
         *for stripes and checkerboard this controls the size of the groups/patches
         *for single tracks (uni- or bidirectional) this does not apply
         * </pre>
         *
         * <code>float pattern_hatch_length_in_mm = 13;</code>
         * @return This builder for chaining.
         */
        public Builder clearPatternHatchLengthInMm() {
          bitField0_ = (bitField0_ & ~0x00000010);
          patternHatchLengthInMm_ = 0F;
          onChanged();
          return this;
        }

        private int hatchingPattern_ = 0;
        /**
         * <pre>
         *pattern type of the hatches that fill the contours
         * </pre>
         *
         * <code>.open_vector_format.Part.ProcessStrategy.HatchingPattern hatching_pattern = 12;</code>
         * @return The enum numeric value on the wire for hatchingPattern.
         */
        @java.lang.Override public int getHatchingPatternValue() {
          return hatchingPattern_;
        }
        /**
         * <pre>
         *pattern type of the hatches that fill the contours
         * </pre>
         *
         * <code>.open_vector_format.Part.ProcessStrategy.HatchingPattern hatching_pattern = 12;</code>
         * @param value The enum numeric value on the wire for hatchingPattern to set.
         * @return This builder for chaining.
         */
        public Builder setHatchingPatternValue(int value) {
          hatchingPattern_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *pattern type of the hatches that fill the contours
         * </pre>
         *
         * <code>.open_vector_format.Part.ProcessStrategy.HatchingPattern hatching_pattern = 12;</code>
         * @return The hatchingPattern.
         */
        @java.lang.Override
        public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.HatchingPattern getHatchingPattern() {
          open_vector_format.OpenVectorFormat.Part.ProcessStrategy.HatchingPattern result = open_vector_format.OpenVectorFormat.Part.ProcessStrategy.HatchingPattern.forNumber(hatchingPattern_);
          return result == null ? open_vector_format.OpenVectorFormat.Part.ProcessStrategy.HatchingPattern.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         *pattern type of the hatches that fill the contours
         * </pre>
         *
         * <code>.open_vector_format.Part.ProcessStrategy.HatchingPattern hatching_pattern = 12;</code>
         * @param value The hatchingPattern to set.
         * @return This builder for chaining.
         */
        public Builder setHatchingPattern(open_vector_format.OpenVectorFormat.Part.ProcessStrategy.HatchingPattern value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          hatchingPattern_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         *pattern type of the hatches that fill the contours
         * </pre>
         *
         * <code>.open_vector_format.Part.ProcessStrategy.HatchingPattern hatching_pattern = 12;</code>
         * @return This builder for chaining.
         */
        public Builder clearHatchingPattern() {
          bitField0_ = (bitField0_ & ~0x00000020);
          hatchingPattern_ = 0;
          onChanged();
          return this;
        }

        private float layerThicknessInMm_ ;
        /**
         * <pre>
         *thickness of a layer/workplane
         * </pre>
         *
         * <code>float layer_thickness_in_mm = 5;</code>
         * @return The layerThicknessInMm.
         */
        @java.lang.Override
        public float getLayerThicknessInMm() {
          return layerThicknessInMm_;
        }
        /**
         * <pre>
         *thickness of a layer/workplane
         * </pre>
         *
         * <code>float layer_thickness_in_mm = 5;</code>
         * @param value The layerThicknessInMm to set.
         * @return This builder for chaining.
         */
        public Builder setLayerThicknessInMm(float value) {

          layerThicknessInMm_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *thickness of a layer/workplane
         * </pre>
         *
         * <code>float layer_thickness_in_mm = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearLayerThicknessInMm() {
          bitField0_ = (bitField0_ & ~0x00000040);
          layerThicknessInMm_ = 0F;
          onChanged();
          return this;
        }

        private float hatchDistanceInMm_ ;
        /**
         * <pre>
         *distance between single material tracks
         * </pre>
         *
         * <code>float hatch_distance_in_mm = 6;</code>
         * @return The hatchDistanceInMm.
         */
        @java.lang.Override
        public float getHatchDistanceInMm() {
          return hatchDistanceInMm_;
        }
        /**
         * <pre>
         *distance between single material tracks
         * </pre>
         *
         * <code>float hatch_distance_in_mm = 6;</code>
         * @param value The hatchDistanceInMm to set.
         * @return This builder for chaining.
         */
        public Builder setHatchDistanceInMm(float value) {

          hatchDistanceInMm_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *distance between single material tracks
         * </pre>
         *
         * <code>float hatch_distance_in_mm = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearHatchDistanceInMm() {
          bitField0_ = (bitField0_ & ~0x00000080);
          hatchDistanceInMm_ = 0F;
          onChanged();
          return this;
        }

        private float hatchContourDistanceInMm_ ;
        /**
         * <pre>
         *distance between contour and filling
         * </pre>
         *
         * <code>float hatch_contour_distance_in_mm = 7;</code>
         * @return The hatchContourDistanceInMm.
         */
        @java.lang.Override
        public float getHatchContourDistanceInMm() {
          return hatchContourDistanceInMm_;
        }
        /**
         * <pre>
         *distance between contour and filling
         * </pre>
         *
         * <code>float hatch_contour_distance_in_mm = 7;</code>
         * @param value The hatchContourDistanceInMm to set.
         * @return This builder for chaining.
         */
        public Builder setHatchContourDistanceInMm(float value) {

          hatchContourDistanceInMm_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *distance between contour and filling
         * </pre>
         *
         * <code>float hatch_contour_distance_in_mm = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearHatchContourDistanceInMm() {
          bitField0_ = (bitField0_ & ~0x00000100);
          hatchContourDistanceInMm_ = 0F;
          onChanged();
          return this;
        }

        private float overhangAngleInDeg_ ;
        /**
         * <pre>
         *critical angle that is considered as overhang
         * </pre>
         *
         * <code>float overhang_angle_in_deg = 8;</code>
         * @return The overhangAngleInDeg.
         */
        @java.lang.Override
        public float getOverhangAngleInDeg() {
          return overhangAngleInDeg_;
        }
        /**
         * <pre>
         *critical angle that is considered as overhang
         * </pre>
         *
         * <code>float overhang_angle_in_deg = 8;</code>
         * @param value The overhangAngleInDeg to set.
         * @return This builder for chaining.
         */
        public Builder setOverhangAngleInDeg(float value) {

          overhangAngleInDeg_ = value;
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *critical angle that is considered as overhang
         * </pre>
         *
         * <code>float overhang_angle_in_deg = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearOverhangAngleInDeg() {
          bitField0_ = (bitField0_ & ~0x00000200);
          overhangAngleInDeg_ = 0F;
          onChanged();
          return this;
        }

        private float contourOffsetInMm_ ;
        /**
         * <pre>
         *offset of the first contour relative to the computed contour of the geometry.
         *often reffered to as "beam compensation" as well
         * </pre>
         *
         * <code>float contour_offset_in_mm = 9;</code>
         * @return The contourOffsetInMm.
         */
        @java.lang.Override
        public float getContourOffsetInMm() {
          return contourOffsetInMm_;
        }
        /**
         * <pre>
         *offset of the first contour relative to the computed contour of the geometry.
         *often reffered to as "beam compensation" as well
         * </pre>
         *
         * <code>float contour_offset_in_mm = 9;</code>
         * @param value The contourOffsetInMm to set.
         * @return This builder for chaining.
         */
        public Builder setContourOffsetInMm(float value) {

          contourOffsetInMm_ = value;
          bitField0_ |= 0x00000400;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *offset of the first contour relative to the computed contour of the geometry.
         *often reffered to as "beam compensation" as well
         * </pre>
         *
         * <code>float contour_offset_in_mm = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearContourOffsetInMm() {
          bitField0_ = (bitField0_ & ~0x00000400);
          contourOffsetInMm_ = 0F;
          onChanged();
          return this;
        }

        private int numberOfContours_ ;
        /**
         * <pre>
         *number of generated contours. If &lt;= 0, there will only be hatches.
         * </pre>
         *
         * <code>int32 number_of_contours = 10;</code>
         * @return The numberOfContours.
         */
        @java.lang.Override
        public int getNumberOfContours() {
          return numberOfContours_;
        }
        /**
         * <pre>
         *number of generated contours. If &lt;= 0, there will only be hatches.
         * </pre>
         *
         * <code>int32 number_of_contours = 10;</code>
         * @param value The numberOfContours to set.
         * @return This builder for chaining.
         */
        public Builder setNumberOfContours(int value) {

          numberOfContours_ = value;
          bitField0_ |= 0x00000800;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *number of generated contours. If &lt;= 0, there will only be hatches.
         * </pre>
         *
         * <code>int32 number_of_contours = 10;</code>
         * @return This builder for chaining.
         */
        public Builder clearNumberOfContours() {
          bitField0_ = (bitField0_ & ~0x00000800);
          numberOfContours_ = 0;
          onChanged();
          return this;
        }

        private float contourDistanceInMm_ ;
        /**
         * <pre>
         *distance inbetween multiple contour lines. Only takes effect if number_of_contours &gt; 1.
         * </pre>
         *
         * <code>float contour_distance_in_mm = 11;</code>
         * @return The contourDistanceInMm.
         */
        @java.lang.Override
        public float getContourDistanceInMm() {
          return contourDistanceInMm_;
        }
        /**
         * <pre>
         *distance inbetween multiple contour lines. Only takes effect if number_of_contours &gt; 1.
         * </pre>
         *
         * <code>float contour_distance_in_mm = 11;</code>
         * @param value The contourDistanceInMm to set.
         * @return This builder for chaining.
         */
        public Builder setContourDistanceInMm(float value) {

          contourDistanceInMm_ = value;
          bitField0_ |= 0x00001000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *distance inbetween multiple contour lines. Only takes effect if number_of_contours &gt; 1.
         * </pre>
         *
         * <code>float contour_distance_in_mm = 11;</code>
         * @return This builder for chaining.
         */
        public Builder clearContourDistanceInMm() {
          bitField0_ = (bitField0_ & ~0x00001000);
          contourDistanceInMm_ = 0F;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <pre>
         *meta data: custom, human readable name of this process strategy
         * </pre>
         *
         * <code>string name = 90;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         *meta data: custom, human readable name of this process strategy
         * </pre>
         *
         * <code>string name = 90;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         *meta data: custom, human readable name of this process strategy
         * </pre>
         *
         * <code>string name = 90;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00002000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *meta data: custom, human readable name of this process strategy
         * </pre>
         *
         * <code>string name = 90;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *meta data: custom, human readable name of this process strategy
         * </pre>
         *
         * <code>string name = 90;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          name_ = value;
          bitField0_ |= 0x00002000;
          onChanged();
          return this;
        }

        private java.util.List<open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam> additionalParameters_ =
          java.util.Collections.emptyList();
        private void ensureAdditionalParametersIsMutable() {
          if (!((bitField0_ & 0x00004000) != 0)) {
            additionalParameters_ = new java.util.ArrayList<open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam>(additionalParameters_);
            bitField0_ |= 0x00004000;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.Builder, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParamOrBuilder> additionalParametersBuilder_;

        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public java.util.List<open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam> getAdditionalParametersList() {
          if (additionalParametersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(additionalParameters_);
          } else {
            return additionalParametersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public int getAdditionalParametersCount() {
          if (additionalParametersBuilder_ == null) {
            return additionalParameters_.size();
          } else {
            return additionalParametersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam getAdditionalParameters(int index) {
          if (additionalParametersBuilder_ == null) {
            return additionalParameters_.get(index);
          } else {
            return additionalParametersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public Builder setAdditionalParameters(
            int index, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam value) {
          if (additionalParametersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAdditionalParametersIsMutable();
            additionalParameters_.set(index, value);
            onChanged();
          } else {
            additionalParametersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public Builder setAdditionalParameters(
            int index, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.Builder builderForValue) {
          if (additionalParametersBuilder_ == null) {
            ensureAdditionalParametersIsMutable();
            additionalParameters_.set(index, builderForValue.build());
            onChanged();
          } else {
            additionalParametersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public Builder addAdditionalParameters(open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam value) {
          if (additionalParametersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAdditionalParametersIsMutable();
            additionalParameters_.add(value);
            onChanged();
          } else {
            additionalParametersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public Builder addAdditionalParameters(
            int index, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam value) {
          if (additionalParametersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAdditionalParametersIsMutable();
            additionalParameters_.add(index, value);
            onChanged();
          } else {
            additionalParametersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public Builder addAdditionalParameters(
            open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.Builder builderForValue) {
          if (additionalParametersBuilder_ == null) {
            ensureAdditionalParametersIsMutable();
            additionalParameters_.add(builderForValue.build());
            onChanged();
          } else {
            additionalParametersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public Builder addAdditionalParameters(
            int index, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.Builder builderForValue) {
          if (additionalParametersBuilder_ == null) {
            ensureAdditionalParametersIsMutable();
            additionalParameters_.add(index, builderForValue.build());
            onChanged();
          } else {
            additionalParametersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public Builder addAllAdditionalParameters(
            java.lang.Iterable<? extends open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam> values) {
          if (additionalParametersBuilder_ == null) {
            ensureAdditionalParametersIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, additionalParameters_);
            onChanged();
          } else {
            additionalParametersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public Builder clearAdditionalParameters() {
          if (additionalParametersBuilder_ == null) {
            additionalParameters_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00004000);
            onChanged();
          } else {
            additionalParametersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public Builder removeAdditionalParameters(int index) {
          if (additionalParametersBuilder_ == null) {
            ensureAdditionalParametersIsMutable();
            additionalParameters_.remove(index);
            onChanged();
          } else {
            additionalParametersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.Builder getAdditionalParametersBuilder(
            int index) {
          return getAdditionalParametersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParamOrBuilder getAdditionalParametersOrBuilder(
            int index) {
          if (additionalParametersBuilder_ == null) {
            return additionalParameters_.get(index);  } else {
            return additionalParametersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public java.util.List<? extends open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParamOrBuilder> 
             getAdditionalParametersOrBuilderList() {
          if (additionalParametersBuilder_ != null) {
            return additionalParametersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(additionalParameters_);
          }
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.Builder addAdditionalParametersBuilder() {
          return getAdditionalParametersFieldBuilder().addBuilder(
              open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.getDefaultInstance());
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.Builder addAdditionalParametersBuilder(
            int index) {
          return getAdditionalParametersFieldBuilder().addBuilder(
              index, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.getDefaultInstance());
        }
        /**
         * <code>repeated .open_vector_format.Part.ProcessStrategy.ProprietaryParam additional_parameters = 100;</code>
         */
        public java.util.List<open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.Builder> 
             getAdditionalParametersBuilderList() {
          return getAdditionalParametersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.Builder, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParamOrBuilder> 
            getAdditionalParametersFieldBuilder() {
          if (additionalParametersBuilder_ == null) {
            additionalParametersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParam.Builder, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.ProprietaryParamOrBuilder>(
                    additionalParameters_,
                    ((bitField0_ & 0x00004000) != 0),
                    getParentForChildren(),
                    isClean());
            additionalParameters_ = null;
          }
          return additionalParametersBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.Part.ProcessStrategy)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.Part.ProcessStrategy)
      private static final open_vector_format.OpenVectorFormat.Part.ProcessStrategy DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.Part.ProcessStrategy();
      }

      public static open_vector_format.OpenVectorFormat.Part.ProcessStrategy getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ProcessStrategy>
          PARSER = new com.google.protobuf.AbstractParser<ProcessStrategy>() {
        @java.lang.Override
        public ProcessStrategy parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ProcessStrategy> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ProcessStrategy> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.Part.ProcessStrategy getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GEOMETRY_INFO_FIELD_NUMBER = 2;
    private open_vector_format.OpenVectorFormat.Part.GeometryInfo geometryInfo_;
    /**
     * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
     * @return Whether the geometryInfo field is set.
     */
    @java.lang.Override
    public boolean hasGeometryInfo() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
     * @return The geometryInfo.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Part.GeometryInfo getGeometryInfo() {
      return geometryInfo_ == null ? open_vector_format.OpenVectorFormat.Part.GeometryInfo.getDefaultInstance() : geometryInfo_;
    }
    /**
     * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Part.GeometryInfoOrBuilder getGeometryInfoOrBuilder() {
      return geometryInfo_ == null ? open_vector_format.OpenVectorFormat.Part.GeometryInfo.getDefaultInstance() : geometryInfo_;
    }

    public static final int MATERIAL_FIELD_NUMBER = 3;
    private open_vector_format.OpenVectorFormat.Part.Material material_;
    /**
     * <code>.open_vector_format.Part.Material material = 3;</code>
     * @return Whether the material field is set.
     */
    @java.lang.Override
    public boolean hasMaterial() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>.open_vector_format.Part.Material material = 3;</code>
     * @return The material.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Part.Material getMaterial() {
      return material_ == null ? open_vector_format.OpenVectorFormat.Part.Material.getDefaultInstance() : material_;
    }
    /**
     * <code>.open_vector_format.Part.Material material = 3;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Part.MaterialOrBuilder getMaterialOrBuilder() {
      return material_ == null ? open_vector_format.OpenVectorFormat.Part.Material.getDefaultInstance() : material_;
    }

    public static final int PROCESS_STRATEGY_FIELD_NUMBER = 4;
    private open_vector_format.OpenVectorFormat.Part.ProcessStrategy processStrategy_;
    /**
     * <pre>
     *process strategy used for the in skin (volume) of the part
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
     * @return Whether the processStrategy field is set.
     */
    @java.lang.Override
    public boolean hasProcessStrategy() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *process strategy used for the in skin (volume) of the part
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
     * @return The processStrategy.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Part.ProcessStrategy getProcessStrategy() {
      return processStrategy_ == null ? open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance() : processStrategy_;
    }
    /**
     * <pre>
     *process strategy used for the in skin (volume) of the part
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder getProcessStrategyOrBuilder() {
      return processStrategy_ == null ? open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance() : processStrategy_;
    }

    public static final int UP_SKIN_PROCESS_STRATEGY_FIELD_NUMBER = 5;
    private open_vector_format.OpenVectorFormat.Part.ProcessStrategy upSkinProcessStrategy_;
    /**
     * <pre>
     *process strategy used for the down skin of the part, if differing
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
     * @return Whether the upSkinProcessStrategy field is set.
     */
    @java.lang.Override
    public boolean hasUpSkinProcessStrategy() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *process strategy used for the down skin of the part, if differing
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
     * @return The upSkinProcessStrategy.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Part.ProcessStrategy getUpSkinProcessStrategy() {
      return upSkinProcessStrategy_ == null ? open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance() : upSkinProcessStrategy_;
    }
    /**
     * <pre>
     *process strategy used for the down skin of the part, if differing
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder getUpSkinProcessStrategyOrBuilder() {
      return upSkinProcessStrategy_ == null ? open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance() : upSkinProcessStrategy_;
    }

    public static final int DOWN_SKIN_PROCESS_STRATEGY_FIELD_NUMBER = 6;
    private open_vector_format.OpenVectorFormat.Part.ProcessStrategy downSkinProcessStrategy_;
    /**
     * <pre>
     *process strategy used for the up skin of the part, if differing
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
     * @return Whether the downSkinProcessStrategy field is set.
     */
    @java.lang.Override
    public boolean hasDownSkinProcessStrategy() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     *process strategy used for the up skin of the part, if differing
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
     * @return The downSkinProcessStrategy.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Part.ProcessStrategy getDownSkinProcessStrategy() {
      return downSkinProcessStrategy_ == null ? open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance() : downSkinProcessStrategy_;
    }
    /**
     * <pre>
     *process strategy used for the up skin of the part, if differing
     * </pre>
     *
     * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder getDownSkinProcessStrategyOrBuilder() {
      return downSkinProcessStrategy_ == null ? open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance() : downSkinProcessStrategy_;
    }

    public static final int EXPOSURE_ORDER_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private java.util.List<open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata> exposureOrder_;
    /**
     * <pre>
     *meta data defining the exposure order that was used to order the vector blocks of this part
     *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
     *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
     * </pre>
     *
     * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
     */
    @java.lang.Override
    public java.util.List<open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata> getExposureOrderList() {
      return exposureOrder_;
    }
    /**
     * <pre>
     *meta data defining the exposure order that was used to order the vector blocks of this part
     *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
     *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
     * </pre>
     *
     * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder> 
        getExposureOrderOrBuilderList() {
      return exposureOrder_;
    }
    /**
     * <pre>
     *meta data defining the exposure order that was used to order the vector blocks of this part
     *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
     *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
     * </pre>
     *
     * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
     */
    @java.lang.Override
    public int getExposureOrderCount() {
      return exposureOrder_.size();
    }
    /**
     * <pre>
     *meta data defining the exposure order that was used to order the vector blocks of this part
     *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
     *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
     * </pre>
     *
     * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata getExposureOrder(int index) {
      return exposureOrder_.get(index);
    }
    /**
     * <pre>
     *meta data defining the exposure order that was used to order the vector blocks of this part
     *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
     *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
     * </pre>
     *
     * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder getExposureOrderOrBuilder(
        int index) {
      return exposureOrder_.get(index);
    }

    public static final int PARENT_PART_NAME_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private volatile java.lang.Object parentPartName_ = "";
    /**
     * <pre>
     *reference to the original CAD 3D model this instance was created from
     * </pre>
     *
     * <code>string parent_part_name = 8;</code>
     * @return The parentPartName.
     */
    @java.lang.Override
    public java.lang.String getParentPartName() {
      java.lang.Object ref = parentPartName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parentPartName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *reference to the original CAD 3D model this instance was created from
     * </pre>
     *
     * <code>string parent_part_name = 8;</code>
     * @return The bytes for parentPartName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getParentPartNameBytes() {
      java.lang.Object ref = parentPartName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parentPartName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getGeometryInfo());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(3, getMaterial());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(4, getProcessStrategy());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(5, getUpSkinProcessStrategy());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(6, getDownSkinProcessStrategy());
      }
      for (int i = 0; i < exposureOrder_.size(); i++) {
        output.writeMessage(7, exposureOrder_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parentPartName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, parentPartName_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGeometryInfo());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMaterial());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getProcessStrategy());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getUpSkinProcessStrategy());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getDownSkinProcessStrategy());
      }
      for (int i = 0; i < exposureOrder_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, exposureOrder_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parentPartName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, parentPartName_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof open_vector_format.OpenVectorFormat.Part)) {
        return super.equals(obj);
      }
      open_vector_format.OpenVectorFormat.Part other = (open_vector_format.OpenVectorFormat.Part) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (hasGeometryInfo() != other.hasGeometryInfo()) return false;
      if (hasGeometryInfo()) {
        if (!getGeometryInfo()
            .equals(other.getGeometryInfo())) return false;
      }
      if (hasMaterial() != other.hasMaterial()) return false;
      if (hasMaterial()) {
        if (!getMaterial()
            .equals(other.getMaterial())) return false;
      }
      if (hasProcessStrategy() != other.hasProcessStrategy()) return false;
      if (hasProcessStrategy()) {
        if (!getProcessStrategy()
            .equals(other.getProcessStrategy())) return false;
      }
      if (hasUpSkinProcessStrategy() != other.hasUpSkinProcessStrategy()) return false;
      if (hasUpSkinProcessStrategy()) {
        if (!getUpSkinProcessStrategy()
            .equals(other.getUpSkinProcessStrategy())) return false;
      }
      if (hasDownSkinProcessStrategy() != other.hasDownSkinProcessStrategy()) return false;
      if (hasDownSkinProcessStrategy()) {
        if (!getDownSkinProcessStrategy()
            .equals(other.getDownSkinProcessStrategy())) return false;
      }
      if (!getExposureOrderList()
          .equals(other.getExposureOrderList())) return false;
      if (!getParentPartName()
          .equals(other.getParentPartName())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasGeometryInfo()) {
        hash = (37 * hash) + GEOMETRY_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getGeometryInfo().hashCode();
      }
      if (hasMaterial()) {
        hash = (37 * hash) + MATERIAL_FIELD_NUMBER;
        hash = (53 * hash) + getMaterial().hashCode();
      }
      if (hasProcessStrategy()) {
        hash = (37 * hash) + PROCESS_STRATEGY_FIELD_NUMBER;
        hash = (53 * hash) + getProcessStrategy().hashCode();
      }
      if (hasUpSkinProcessStrategy()) {
        hash = (37 * hash) + UP_SKIN_PROCESS_STRATEGY_FIELD_NUMBER;
        hash = (53 * hash) + getUpSkinProcessStrategy().hashCode();
      }
      if (hasDownSkinProcessStrategy()) {
        hash = (37 * hash) + DOWN_SKIN_PROCESS_STRATEGY_FIELD_NUMBER;
        hash = (53 * hash) + getDownSkinProcessStrategy().hashCode();
      }
      if (getExposureOrderCount() > 0) {
        hash = (37 * hash) + EXPOSURE_ORDER_FIELD_NUMBER;
        hash = (53 * hash) + getExposureOrderList().hashCode();
      }
      hash = (37 * hash) + PARENT_PART_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getParentPartName().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static open_vector_format.OpenVectorFormat.Part parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.Part parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.Part parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.Part parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.Part parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.Part parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.Part parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.Part parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static open_vector_format.OpenVectorFormat.Part parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static open_vector_format.OpenVectorFormat.Part parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.Part parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.Part parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(open_vector_format.OpenVectorFormat.Part prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *Part is a reference to a CAD 3D model instance in this Job.
     *Instances in a job may differ in their position, orientation, process strategy, marking parameters or support structures,
     *even if they are derived from the same parent part.
     *Common parent parts of instances can be identified using the parent_part_name, if set.
     * </pre>
     *
     * Protobuf type {@code open_vector_format.Part}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:open_vector_format.Part)
        open_vector_format.OpenVectorFormat.PartOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.Part.class, open_vector_format.OpenVectorFormat.Part.Builder.class);
      }

      // Construct using open_vector_format.OpenVectorFormat.Part.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getGeometryInfoFieldBuilder();
          getMaterialFieldBuilder();
          getProcessStrategyFieldBuilder();
          getUpSkinProcessStrategyFieldBuilder();
          getDownSkinProcessStrategyFieldBuilder();
          getExposureOrderFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        geometryInfo_ = null;
        if (geometryInfoBuilder_ != null) {
          geometryInfoBuilder_.dispose();
          geometryInfoBuilder_ = null;
        }
        material_ = null;
        if (materialBuilder_ != null) {
          materialBuilder_.dispose();
          materialBuilder_ = null;
        }
        processStrategy_ = null;
        if (processStrategyBuilder_ != null) {
          processStrategyBuilder_.dispose();
          processStrategyBuilder_ = null;
        }
        upSkinProcessStrategy_ = null;
        if (upSkinProcessStrategyBuilder_ != null) {
          upSkinProcessStrategyBuilder_.dispose();
          upSkinProcessStrategyBuilder_ = null;
        }
        downSkinProcessStrategy_ = null;
        if (downSkinProcessStrategyBuilder_ != null) {
          downSkinProcessStrategyBuilder_.dispose();
          downSkinProcessStrategyBuilder_ = null;
        }
        if (exposureOrderBuilder_ == null) {
          exposureOrder_ = java.util.Collections.emptyList();
        } else {
          exposureOrder_ = null;
          exposureOrderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        parentPartName_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_Part_descriptor;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.Part getDefaultInstanceForType() {
        return open_vector_format.OpenVectorFormat.Part.getDefaultInstance();
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.Part build() {
        open_vector_format.OpenVectorFormat.Part result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.Part buildPartial() {
        open_vector_format.OpenVectorFormat.Part result = new open_vector_format.OpenVectorFormat.Part(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(open_vector_format.OpenVectorFormat.Part result) {
        if (exposureOrderBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            exposureOrder_ = java.util.Collections.unmodifiableList(exposureOrder_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.exposureOrder_ = exposureOrder_;
        } else {
          result.exposureOrder_ = exposureOrderBuilder_.build();
        }
      }

      private void buildPartial0(open_vector_format.OpenVectorFormat.Part result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.geometryInfo_ = geometryInfoBuilder_ == null
              ? geometryInfo_
              : geometryInfoBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.material_ = materialBuilder_ == null
              ? material_
              : materialBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.processStrategy_ = processStrategyBuilder_ == null
              ? processStrategy_
              : processStrategyBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.upSkinProcessStrategy_ = upSkinProcessStrategyBuilder_ == null
              ? upSkinProcessStrategy_
              : upSkinProcessStrategyBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.downSkinProcessStrategy_ = downSkinProcessStrategyBuilder_ == null
              ? downSkinProcessStrategy_
              : downSkinProcessStrategyBuilder_.build();
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.parentPartName_ = parentPartName_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof open_vector_format.OpenVectorFormat.Part) {
          return mergeFrom((open_vector_format.OpenVectorFormat.Part)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(open_vector_format.OpenVectorFormat.Part other) {
        if (other == open_vector_format.OpenVectorFormat.Part.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasGeometryInfo()) {
          mergeGeometryInfo(other.getGeometryInfo());
        }
        if (other.hasMaterial()) {
          mergeMaterial(other.getMaterial());
        }
        if (other.hasProcessStrategy()) {
          mergeProcessStrategy(other.getProcessStrategy());
        }
        if (other.hasUpSkinProcessStrategy()) {
          mergeUpSkinProcessStrategy(other.getUpSkinProcessStrategy());
        }
        if (other.hasDownSkinProcessStrategy()) {
          mergeDownSkinProcessStrategy(other.getDownSkinProcessStrategy());
        }
        if (exposureOrderBuilder_ == null) {
          if (!other.exposureOrder_.isEmpty()) {
            if (exposureOrder_.isEmpty()) {
              exposureOrder_ = other.exposureOrder_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureExposureOrderIsMutable();
              exposureOrder_.addAll(other.exposureOrder_);
            }
            onChanged();
          }
        } else {
          if (!other.exposureOrder_.isEmpty()) {
            if (exposureOrderBuilder_.isEmpty()) {
              exposureOrderBuilder_.dispose();
              exposureOrderBuilder_ = null;
              exposureOrder_ = other.exposureOrder_;
              bitField0_ = (bitField0_ & ~0x00000040);
              exposureOrderBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExposureOrderFieldBuilder() : null;
            } else {
              exposureOrderBuilder_.addAllMessages(other.exposureOrder_);
            }
          }
        }
        if (!other.getParentPartName().isEmpty()) {
          parentPartName_ = other.parentPartName_;
          bitField0_ |= 0x00000080;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getGeometryInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getMaterialFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getProcessStrategyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getUpSkinProcessStrategyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getDownSkinProcessStrategyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata m =
                    input.readMessage(
                        open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.parser(),
                        extensionRegistry);
                if (exposureOrderBuilder_ == null) {
                  ensureExposureOrderIsMutable();
                  exposureOrder_.add(m);
                } else {
                  exposureOrderBuilder_.addMessage(m);
                }
                break;
              } // case 58
              case 66: {
                parentPartName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private open_vector_format.OpenVectorFormat.Part.GeometryInfo geometryInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.Part.GeometryInfo, open_vector_format.OpenVectorFormat.Part.GeometryInfo.Builder, open_vector_format.OpenVectorFormat.Part.GeometryInfoOrBuilder> geometryInfoBuilder_;
      /**
       * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
       * @return Whether the geometryInfo field is set.
       */
      public boolean hasGeometryInfo() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
       * @return The geometryInfo.
       */
      public open_vector_format.OpenVectorFormat.Part.GeometryInfo getGeometryInfo() {
        if (geometryInfoBuilder_ == null) {
          return geometryInfo_ == null ? open_vector_format.OpenVectorFormat.Part.GeometryInfo.getDefaultInstance() : geometryInfo_;
        } else {
          return geometryInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
       */
      public Builder setGeometryInfo(open_vector_format.OpenVectorFormat.Part.GeometryInfo value) {
        if (geometryInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          geometryInfo_ = value;
        } else {
          geometryInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
       */
      public Builder setGeometryInfo(
          open_vector_format.OpenVectorFormat.Part.GeometryInfo.Builder builderForValue) {
        if (geometryInfoBuilder_ == null) {
          geometryInfo_ = builderForValue.build();
        } else {
          geometryInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
       */
      public Builder mergeGeometryInfo(open_vector_format.OpenVectorFormat.Part.GeometryInfo value) {
        if (geometryInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            geometryInfo_ != null &&
            geometryInfo_ != open_vector_format.OpenVectorFormat.Part.GeometryInfo.getDefaultInstance()) {
            getGeometryInfoBuilder().mergeFrom(value);
          } else {
            geometryInfo_ = value;
          }
        } else {
          geometryInfoBuilder_.mergeFrom(value);
        }
        if (geometryInfo_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
       */
      public Builder clearGeometryInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        geometryInfo_ = null;
        if (geometryInfoBuilder_ != null) {
          geometryInfoBuilder_.dispose();
          geometryInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
       */
      public open_vector_format.OpenVectorFormat.Part.GeometryInfo.Builder getGeometryInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getGeometryInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
       */
      public open_vector_format.OpenVectorFormat.Part.GeometryInfoOrBuilder getGeometryInfoOrBuilder() {
        if (geometryInfoBuilder_ != null) {
          return geometryInfoBuilder_.getMessageOrBuilder();
        } else {
          return geometryInfo_ == null ?
              open_vector_format.OpenVectorFormat.Part.GeometryInfo.getDefaultInstance() : geometryInfo_;
        }
      }
      /**
       * <code>.open_vector_format.Part.GeometryInfo geometry_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.Part.GeometryInfo, open_vector_format.OpenVectorFormat.Part.GeometryInfo.Builder, open_vector_format.OpenVectorFormat.Part.GeometryInfoOrBuilder> 
          getGeometryInfoFieldBuilder() {
        if (geometryInfoBuilder_ == null) {
          geometryInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.Part.GeometryInfo, open_vector_format.OpenVectorFormat.Part.GeometryInfo.Builder, open_vector_format.OpenVectorFormat.Part.GeometryInfoOrBuilder>(
                  getGeometryInfo(),
                  getParentForChildren(),
                  isClean());
          geometryInfo_ = null;
        }
        return geometryInfoBuilder_;
      }

      private open_vector_format.OpenVectorFormat.Part.Material material_;
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.Part.Material, open_vector_format.OpenVectorFormat.Part.Material.Builder, open_vector_format.OpenVectorFormat.Part.MaterialOrBuilder> materialBuilder_;
      /**
       * <code>.open_vector_format.Part.Material material = 3;</code>
       * @return Whether the material field is set.
       */
      public boolean hasMaterial() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>.open_vector_format.Part.Material material = 3;</code>
       * @return The material.
       */
      public open_vector_format.OpenVectorFormat.Part.Material getMaterial() {
        if (materialBuilder_ == null) {
          return material_ == null ? open_vector_format.OpenVectorFormat.Part.Material.getDefaultInstance() : material_;
        } else {
          return materialBuilder_.getMessage();
        }
      }
      /**
       * <code>.open_vector_format.Part.Material material = 3;</code>
       */
      public Builder setMaterial(open_vector_format.OpenVectorFormat.Part.Material value) {
        if (materialBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          material_ = value;
        } else {
          materialBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.Part.Material material = 3;</code>
       */
      public Builder setMaterial(
          open_vector_format.OpenVectorFormat.Part.Material.Builder builderForValue) {
        if (materialBuilder_ == null) {
          material_ = builderForValue.build();
        } else {
          materialBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.Part.Material material = 3;</code>
       */
      public Builder mergeMaterial(open_vector_format.OpenVectorFormat.Part.Material value) {
        if (materialBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            material_ != null &&
            material_ != open_vector_format.OpenVectorFormat.Part.Material.getDefaultInstance()) {
            getMaterialBuilder().mergeFrom(value);
          } else {
            material_ = value;
          }
        } else {
          materialBuilder_.mergeFrom(value);
        }
        if (material_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.Part.Material material = 3;</code>
       */
      public Builder clearMaterial() {
        bitField0_ = (bitField0_ & ~0x00000004);
        material_ = null;
        if (materialBuilder_ != null) {
          materialBuilder_.dispose();
          materialBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.Part.Material material = 3;</code>
       */
      public open_vector_format.OpenVectorFormat.Part.Material.Builder getMaterialBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMaterialFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.Part.Material material = 3;</code>
       */
      public open_vector_format.OpenVectorFormat.Part.MaterialOrBuilder getMaterialOrBuilder() {
        if (materialBuilder_ != null) {
          return materialBuilder_.getMessageOrBuilder();
        } else {
          return material_ == null ?
              open_vector_format.OpenVectorFormat.Part.Material.getDefaultInstance() : material_;
        }
      }
      /**
       * <code>.open_vector_format.Part.Material material = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.Part.Material, open_vector_format.OpenVectorFormat.Part.Material.Builder, open_vector_format.OpenVectorFormat.Part.MaterialOrBuilder> 
          getMaterialFieldBuilder() {
        if (materialBuilder_ == null) {
          materialBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.Part.Material, open_vector_format.OpenVectorFormat.Part.Material.Builder, open_vector_format.OpenVectorFormat.Part.MaterialOrBuilder>(
                  getMaterial(),
                  getParentForChildren(),
                  isClean());
          material_ = null;
        }
        return materialBuilder_;
      }

      private open_vector_format.OpenVectorFormat.Part.ProcessStrategy processStrategy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.Part.ProcessStrategy, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder, open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder> processStrategyBuilder_;
      /**
       * <pre>
       *process strategy used for the in skin (volume) of the part
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
       * @return Whether the processStrategy field is set.
       */
      public boolean hasProcessStrategy() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *process strategy used for the in skin (volume) of the part
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
       * @return The processStrategy.
       */
      public open_vector_format.OpenVectorFormat.Part.ProcessStrategy getProcessStrategy() {
        if (processStrategyBuilder_ == null) {
          return processStrategy_ == null ? open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance() : processStrategy_;
        } else {
          return processStrategyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *process strategy used for the in skin (volume) of the part
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
       */
      public Builder setProcessStrategy(open_vector_format.OpenVectorFormat.Part.ProcessStrategy value) {
        if (processStrategyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          processStrategy_ = value;
        } else {
          processStrategyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *process strategy used for the in skin (volume) of the part
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
       */
      public Builder setProcessStrategy(
          open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder builderForValue) {
        if (processStrategyBuilder_ == null) {
          processStrategy_ = builderForValue.build();
        } else {
          processStrategyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *process strategy used for the in skin (volume) of the part
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
       */
      public Builder mergeProcessStrategy(open_vector_format.OpenVectorFormat.Part.ProcessStrategy value) {
        if (processStrategyBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            processStrategy_ != null &&
            processStrategy_ != open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance()) {
            getProcessStrategyBuilder().mergeFrom(value);
          } else {
            processStrategy_ = value;
          }
        } else {
          processStrategyBuilder_.mergeFrom(value);
        }
        if (processStrategy_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       *process strategy used for the in skin (volume) of the part
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
       */
      public Builder clearProcessStrategy() {
        bitField0_ = (bitField0_ & ~0x00000008);
        processStrategy_ = null;
        if (processStrategyBuilder_ != null) {
          processStrategyBuilder_.dispose();
          processStrategyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       *process strategy used for the in skin (volume) of the part
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
       */
      public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder getProcessStrategyBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getProcessStrategyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *process strategy used for the in skin (volume) of the part
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
       */
      public open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder getProcessStrategyOrBuilder() {
        if (processStrategyBuilder_ != null) {
          return processStrategyBuilder_.getMessageOrBuilder();
        } else {
          return processStrategy_ == null ?
              open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance() : processStrategy_;
        }
      }
      /**
       * <pre>
       *process strategy used for the in skin (volume) of the part
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy process_strategy = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.Part.ProcessStrategy, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder, open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder> 
          getProcessStrategyFieldBuilder() {
        if (processStrategyBuilder_ == null) {
          processStrategyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.Part.ProcessStrategy, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder, open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder>(
                  getProcessStrategy(),
                  getParentForChildren(),
                  isClean());
          processStrategy_ = null;
        }
        return processStrategyBuilder_;
      }

      private open_vector_format.OpenVectorFormat.Part.ProcessStrategy upSkinProcessStrategy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.Part.ProcessStrategy, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder, open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder> upSkinProcessStrategyBuilder_;
      /**
       * <pre>
       *process strategy used for the down skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
       * @return Whether the upSkinProcessStrategy field is set.
       */
      public boolean hasUpSkinProcessStrategy() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *process strategy used for the down skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
       * @return The upSkinProcessStrategy.
       */
      public open_vector_format.OpenVectorFormat.Part.ProcessStrategy getUpSkinProcessStrategy() {
        if (upSkinProcessStrategyBuilder_ == null) {
          return upSkinProcessStrategy_ == null ? open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance() : upSkinProcessStrategy_;
        } else {
          return upSkinProcessStrategyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *process strategy used for the down skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
       */
      public Builder setUpSkinProcessStrategy(open_vector_format.OpenVectorFormat.Part.ProcessStrategy value) {
        if (upSkinProcessStrategyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          upSkinProcessStrategy_ = value;
        } else {
          upSkinProcessStrategyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *process strategy used for the down skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
       */
      public Builder setUpSkinProcessStrategy(
          open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder builderForValue) {
        if (upSkinProcessStrategyBuilder_ == null) {
          upSkinProcessStrategy_ = builderForValue.build();
        } else {
          upSkinProcessStrategyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *process strategy used for the down skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
       */
      public Builder mergeUpSkinProcessStrategy(open_vector_format.OpenVectorFormat.Part.ProcessStrategy value) {
        if (upSkinProcessStrategyBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            upSkinProcessStrategy_ != null &&
            upSkinProcessStrategy_ != open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance()) {
            getUpSkinProcessStrategyBuilder().mergeFrom(value);
          } else {
            upSkinProcessStrategy_ = value;
          }
        } else {
          upSkinProcessStrategyBuilder_.mergeFrom(value);
        }
        if (upSkinProcessStrategy_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       *process strategy used for the down skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
       */
      public Builder clearUpSkinProcessStrategy() {
        bitField0_ = (bitField0_ & ~0x00000010);
        upSkinProcessStrategy_ = null;
        if (upSkinProcessStrategyBuilder_ != null) {
          upSkinProcessStrategyBuilder_.dispose();
          upSkinProcessStrategyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       *process strategy used for the down skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
       */
      public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder getUpSkinProcessStrategyBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getUpSkinProcessStrategyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *process strategy used for the down skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
       */
      public open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder getUpSkinProcessStrategyOrBuilder() {
        if (upSkinProcessStrategyBuilder_ != null) {
          return upSkinProcessStrategyBuilder_.getMessageOrBuilder();
        } else {
          return upSkinProcessStrategy_ == null ?
              open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance() : upSkinProcessStrategy_;
        }
      }
      /**
       * <pre>
       *process strategy used for the down skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy up_skin_process_strategy = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.Part.ProcessStrategy, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder, open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder> 
          getUpSkinProcessStrategyFieldBuilder() {
        if (upSkinProcessStrategyBuilder_ == null) {
          upSkinProcessStrategyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.Part.ProcessStrategy, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder, open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder>(
                  getUpSkinProcessStrategy(),
                  getParentForChildren(),
                  isClean());
          upSkinProcessStrategy_ = null;
        }
        return upSkinProcessStrategyBuilder_;
      }

      private open_vector_format.OpenVectorFormat.Part.ProcessStrategy downSkinProcessStrategy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.Part.ProcessStrategy, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder, open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder> downSkinProcessStrategyBuilder_;
      /**
       * <pre>
       *process strategy used for the up skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
       * @return Whether the downSkinProcessStrategy field is set.
       */
      public boolean hasDownSkinProcessStrategy() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *process strategy used for the up skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
       * @return The downSkinProcessStrategy.
       */
      public open_vector_format.OpenVectorFormat.Part.ProcessStrategy getDownSkinProcessStrategy() {
        if (downSkinProcessStrategyBuilder_ == null) {
          return downSkinProcessStrategy_ == null ? open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance() : downSkinProcessStrategy_;
        } else {
          return downSkinProcessStrategyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *process strategy used for the up skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
       */
      public Builder setDownSkinProcessStrategy(open_vector_format.OpenVectorFormat.Part.ProcessStrategy value) {
        if (downSkinProcessStrategyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          downSkinProcessStrategy_ = value;
        } else {
          downSkinProcessStrategyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *process strategy used for the up skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
       */
      public Builder setDownSkinProcessStrategy(
          open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder builderForValue) {
        if (downSkinProcessStrategyBuilder_ == null) {
          downSkinProcessStrategy_ = builderForValue.build();
        } else {
          downSkinProcessStrategyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *process strategy used for the up skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
       */
      public Builder mergeDownSkinProcessStrategy(open_vector_format.OpenVectorFormat.Part.ProcessStrategy value) {
        if (downSkinProcessStrategyBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            downSkinProcessStrategy_ != null &&
            downSkinProcessStrategy_ != open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance()) {
            getDownSkinProcessStrategyBuilder().mergeFrom(value);
          } else {
            downSkinProcessStrategy_ = value;
          }
        } else {
          downSkinProcessStrategyBuilder_.mergeFrom(value);
        }
        if (downSkinProcessStrategy_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       *process strategy used for the up skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
       */
      public Builder clearDownSkinProcessStrategy() {
        bitField0_ = (bitField0_ & ~0x00000020);
        downSkinProcessStrategy_ = null;
        if (downSkinProcessStrategyBuilder_ != null) {
          downSkinProcessStrategyBuilder_.dispose();
          downSkinProcessStrategyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       *process strategy used for the up skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
       */
      public open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder getDownSkinProcessStrategyBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getDownSkinProcessStrategyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *process strategy used for the up skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
       */
      public open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder getDownSkinProcessStrategyOrBuilder() {
        if (downSkinProcessStrategyBuilder_ != null) {
          return downSkinProcessStrategyBuilder_.getMessageOrBuilder();
        } else {
          return downSkinProcessStrategy_ == null ?
              open_vector_format.OpenVectorFormat.Part.ProcessStrategy.getDefaultInstance() : downSkinProcessStrategy_;
        }
      }
      /**
       * <pre>
       *process strategy used for the up skin of the part, if differing
       * </pre>
       *
       * <code>.open_vector_format.Part.ProcessStrategy down_skin_process_strategy = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.Part.ProcessStrategy, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder, open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder> 
          getDownSkinProcessStrategyFieldBuilder() {
        if (downSkinProcessStrategyBuilder_ == null) {
          downSkinProcessStrategyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.Part.ProcessStrategy, open_vector_format.OpenVectorFormat.Part.ProcessStrategy.Builder, open_vector_format.OpenVectorFormat.Part.ProcessStrategyOrBuilder>(
                  getDownSkinProcessStrategy(),
                  getParentForChildren(),
                  isClean());
          downSkinProcessStrategy_ = null;
        }
        return downSkinProcessStrategyBuilder_;
      }

      private java.util.List<open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata> exposureOrder_ =
        java.util.Collections.emptyList();
      private void ensureExposureOrderIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          exposureOrder_ = new java.util.ArrayList<open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata>(exposureOrder_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder> exposureOrderBuilder_;

      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public java.util.List<open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata> getExposureOrderList() {
        if (exposureOrderBuilder_ == null) {
          return java.util.Collections.unmodifiableList(exposureOrder_);
        } else {
          return exposureOrderBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public int getExposureOrderCount() {
        if (exposureOrderBuilder_ == null) {
          return exposureOrder_.size();
        } else {
          return exposureOrderBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata getExposureOrder(int index) {
        if (exposureOrderBuilder_ == null) {
          return exposureOrder_.get(index);
        } else {
          return exposureOrderBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public Builder setExposureOrder(
          int index, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata value) {
        if (exposureOrderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExposureOrderIsMutable();
          exposureOrder_.set(index, value);
          onChanged();
        } else {
          exposureOrderBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public Builder setExposureOrder(
          int index, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder builderForValue) {
        if (exposureOrderBuilder_ == null) {
          ensureExposureOrderIsMutable();
          exposureOrder_.set(index, builderForValue.build());
          onChanged();
        } else {
          exposureOrderBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public Builder addExposureOrder(open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata value) {
        if (exposureOrderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExposureOrderIsMutable();
          exposureOrder_.add(value);
          onChanged();
        } else {
          exposureOrderBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public Builder addExposureOrder(
          int index, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata value) {
        if (exposureOrderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExposureOrderIsMutable();
          exposureOrder_.add(index, value);
          onChanged();
        } else {
          exposureOrderBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public Builder addExposureOrder(
          open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder builderForValue) {
        if (exposureOrderBuilder_ == null) {
          ensureExposureOrderIsMutable();
          exposureOrder_.add(builderForValue.build());
          onChanged();
        } else {
          exposureOrderBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public Builder addExposureOrder(
          int index, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder builderForValue) {
        if (exposureOrderBuilder_ == null) {
          ensureExposureOrderIsMutable();
          exposureOrder_.add(index, builderForValue.build());
          onChanged();
        } else {
          exposureOrderBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public Builder addAllExposureOrder(
          java.lang.Iterable<? extends open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata> values) {
        if (exposureOrderBuilder_ == null) {
          ensureExposureOrderIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, exposureOrder_);
          onChanged();
        } else {
          exposureOrderBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public Builder clearExposureOrder() {
        if (exposureOrderBuilder_ == null) {
          exposureOrder_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          exposureOrderBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public Builder removeExposureOrder(int index) {
        if (exposureOrderBuilder_ == null) {
          ensureExposureOrderIsMutable();
          exposureOrder_.remove(index);
          onChanged();
        } else {
          exposureOrderBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder getExposureOrderBuilder(
          int index) {
        return getExposureOrderFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder getExposureOrderOrBuilder(
          int index) {
        if (exposureOrderBuilder_ == null) {
          return exposureOrder_.get(index);  } else {
          return exposureOrderBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public java.util.List<? extends open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder> 
           getExposureOrderOrBuilderList() {
        if (exposureOrderBuilder_ != null) {
          return exposureOrderBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(exposureOrder_);
        }
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder addExposureOrderBuilder() {
        return getExposureOrderFieldBuilder().addBuilder(
            open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.getDefaultInstance());
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder addExposureOrderBuilder(
          int index) {
        return getExposureOrderFieldBuilder().addBuilder(
            index, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.getDefaultInstance());
      }
      /**
       * <pre>
       *meta data defining the exposure order that was used to order the vector blocks of this part
       *the first item gets exposed first, e.g. exposure starts with downskin hatches, followed by inskin hatches
       *two LPBFMetadata objects are added with PartArea set to VOLUME in both, SkinType set to DOWN_SKIN in first and IN_SKIN in second
       * </pre>
       *
       * <code>repeated .open_vector_format.VectorBlock.LPBFMetadata exposure_order = 7;</code>
       */
      public java.util.List<open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder> 
           getExposureOrderBuilderList() {
        return getExposureOrderFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder> 
          getExposureOrderFieldBuilder() {
        if (exposureOrderBuilder_ == null) {
          exposureOrderBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder>(
                  exposureOrder_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          exposureOrder_ = null;
        }
        return exposureOrderBuilder_;
      }

      private java.lang.Object parentPartName_ = "";
      /**
       * <pre>
       *reference to the original CAD 3D model this instance was created from
       * </pre>
       *
       * <code>string parent_part_name = 8;</code>
       * @return The parentPartName.
       */
      public java.lang.String getParentPartName() {
        java.lang.Object ref = parentPartName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          parentPartName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *reference to the original CAD 3D model this instance was created from
       * </pre>
       *
       * <code>string parent_part_name = 8;</code>
       * @return The bytes for parentPartName.
       */
      public com.google.protobuf.ByteString
          getParentPartNameBytes() {
        java.lang.Object ref = parentPartName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          parentPartName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *reference to the original CAD 3D model this instance was created from
       * </pre>
       *
       * <code>string parent_part_name = 8;</code>
       * @param value The parentPartName to set.
       * @return This builder for chaining.
       */
      public Builder setParentPartName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        parentPartName_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *reference to the original CAD 3D model this instance was created from
       * </pre>
       *
       * <code>string parent_part_name = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearParentPartName() {
        parentPartName_ = getDefaultInstance().getParentPartName();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *reference to the original CAD 3D model this instance was created from
       * </pre>
       *
       * <code>string parent_part_name = 8;</code>
       * @param value The bytes for parentPartName to set.
       * @return This builder for chaining.
       */
      public Builder setParentPartNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        parentPartName_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:open_vector_format.Part)
    }

    // @@protoc_insertion_point(class_scope:open_vector_format.Part)
    private static final open_vector_format.OpenVectorFormat.Part DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.Part();
    }

    public static open_vector_format.OpenVectorFormat.Part getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Part>
        PARSER = new com.google.protobuf.AbstractParser<Part>() {
      @java.lang.Override
      public Part parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Part> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Part> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public open_vector_format.OpenVectorFormat.Part getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WorkPlaneOrBuilder extends
      // @@protoc_insertion_point(interface_extends:open_vector_format.WorkPlane)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
     */
    java.util.List<open_vector_format.OpenVectorFormat.VectorBlock> 
        getVectorBlocksList();
    /**
     * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock getVectorBlocks(int index);
    /**
     * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
     */
    int getVectorBlocksCount();
    /**
     * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
     */
    java.util.List<? extends open_vector_format.OpenVectorFormat.VectorBlockOrBuilder> 
        getVectorBlocksOrBuilderList();
    /**
     * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlockOrBuilder getVectorBlocksOrBuilder(
        int index);

    /**
     * <pre>
     * Axis positions - can be used for tiling
     * </pre>
     *
     * <code>float x_pos_in_mm = 2;</code>
     * @return The xPosInMm.
     */
    float getXPosInMm();

    /**
     * <code>float y_pos_in_mm = 3;</code>
     * @return The yPosInMm.
     */
    float getYPosInMm();

    /**
     * <pre>
     * for PBF processes bed position
     * </pre>
     *
     * <code>float z_pos_in_mm = 4;</code>
     * @return The zPosInMm.
     */
    float getZPosInMm();

    /**
     * <code>float x_rot_in_deg = 5;</code>
     * @return The xRotInDeg.
     */
    float getXRotInDeg();

    /**
     * <code>float y_rot_in_deg = 6;</code>
     * @return The yRotInDeg.
     */
    float getYRotInDeg();

    /**
     * <code>float z_rot_in_deg = 7;</code>
     * @return The zRotInDeg.
     */
    float getZRotInDeg();

    /**
     * <code>int32 num_blocks = 8;</code>
     * @return The numBlocks.
     */
    int getNumBlocks();

    /**
     * <pre>
     *how many times the WorkPlane will be executed
     *this will execute all vector blocks in order once, then repeat [repeats] times starting with the first block again etc.
     * </pre>
     *
     * <code>uint32 repeats = 9;</code>
     * @return The repeats.
     */
    int getRepeats();

    /**
     * <pre>
     *reference for syncing or asynchronious execution (keeping correct order)
     * </pre>
     *
     * <code>int32 work_plane_number = 10;</code>
     * @return The workPlaneNumber.
     */
    int getWorkPlaneNumber();

    /**
     * <pre>
     *identifier of the machine to prevent type mismatch, has to be verified by the machine controller
     * </pre>
     *
     * <code>string machine_type = 11;</code>
     * @return The machineType.
     */
    java.lang.String getMachineType();
    /**
     * <pre>
     *identifier of the machine to prevent type mismatch, has to be verified by the machine controller
     * </pre>
     *
     * <code>string machine_type = 11;</code>
     * @return The bytes for machineType.
     */
    com.google.protobuf.ByteString
        getMachineTypeBytes();

    /**
     * <pre>
     *goal positions of the axis in order of machine axis number
     * </pre>
     *
     * <code>repeated float additional_axis_positions = 12;</code>
     * @return A list containing the additionalAxisPositions.
     */
    java.util.List<java.lang.Float> getAdditionalAxisPositionsList();
    /**
     * <pre>
     *goal positions of the axis in order of machine axis number
     * </pre>
     *
     * <code>repeated float additional_axis_positions = 12;</code>
     * @return The count of additionalAxisPositions.
     */
    int getAdditionalAxisPositionsCount();
    /**
     * <pre>
     *goal positions of the axis in order of machine axis number
     * </pre>
     *
     * <code>repeated float additional_axis_positions = 12;</code>
     * @param index The index of the element to return.
     * @return The additionalAxisPositions at the given index.
     */
    float getAdditionalAxisPositions(int index);

    /**
     * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
     * @return Whether the metaData field is set.
     */
    boolean hasMetaData();
    /**
     * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
     * @return The metaData.
     */
    open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData getMetaData();
    /**
     * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
     */
    open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaDataOrBuilder getMetaDataOrBuilder();
  }
  /**
   * <pre>
   *A WorkingPlane is a 2D working plane of the tool (e.g. laser scanfield, electron beam scan field)
   *in the global 3D coordinate system that is set by moving one or more physical axis relative to the workpiece.
   *It follows the same concept as a sketch plane in CAD applications.
   *Any axis movement that changes the work plane position will require a new WorkingPlane message.
   *synonyms: Layer (LPBF) / 3DPatches (Structuring) / Scanfields (MultiBeam)
   * </pre>
   *
   * Protobuf type {@code open_vector_format.WorkPlane}
   */
  public static final class WorkPlane extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:open_vector_format.WorkPlane)
      WorkPlaneOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WorkPlane.newBuilder() to construct.
    private WorkPlane(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WorkPlane() {
      vectorBlocks_ = java.util.Collections.emptyList();
      machineType_ = "";
      additionalAxisPositions_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WorkPlane();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              open_vector_format.OpenVectorFormat.WorkPlane.class, open_vector_format.OpenVectorFormat.WorkPlane.Builder.class);
    }

    public interface WorkPlaneMetaDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.WorkPlane.WorkPlaneMetaData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *total scan distance of this WorkPlane in mm
       * </pre>
       *
       * <code>double total_scan_distance_in_mm = 1;</code>
       * @return The totalScanDistanceInMm.
       */
      double getTotalScanDistanceInMm();

      /**
       * <pre>
       *total scan distance of this WorkPlane in mm
       * </pre>
       *
       * <code>double total_jump_distance_in_mm = 2;</code>
       * @return The totalJumpDistanceInMm.
       */
      double getTotalJumpDistanceInMm();

      /**
       * <pre>
       *map containing all patches in this workplane
       * </pre>
       *
       * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
       */
      int getPatchesMapCount();
      /**
       * <pre>
       *map containing all patches in this workplane
       * </pre>
       *
       * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
       */
      boolean containsPatchesMap(
          int key);
      /**
       * Use {@link #getPatchesMapMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch>
      getPatchesMap();
      /**
       * <pre>
       *map containing all patches in this workplane
       * </pre>
       *
       * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
       */
      java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch>
      getPatchesMapMap();
      /**
       * <pre>
       *map containing all patches in this workplane
       * </pre>
       *
       * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
       */
      /* nullable */
open_vector_format.OpenVectorFormat.WorkPlane.Patch getPatchesMapOrDefault(
          int key,
          /* nullable */
open_vector_format.OpenVectorFormat.WorkPlane.Patch defaultValue);
      /**
       * <pre>
       *map containing all patches in this workplane
       * </pre>
       *
       * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
       */
      open_vector_format.OpenVectorFormat.WorkPlane.Patch getPatchesMapOrThrow(
          int key);

      /**
       * <pre>
       *actually applied max laser power after dynamic parameter allocation in this workPlane
       * </pre>
       *
       * <code>float maxPower = 4;</code>
       * @return The maxPower.
       */
      float getMaxPower();

      /**
       * <pre>
       *actually applied min laser power after dynamic parameter allocation in this workPlane
       * </pre>
       *
       * <code>float minPower = 5;</code>
       * @return The minPower.
       */
      float getMinPower();

      /**
       * <pre>
       *all closed contours present in this workplane
       * </pre>
       *
       * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
       */
      java.util.List<open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour> 
          getContoursList();
      /**
       * <pre>
       *all closed contours present in this workplane
       * </pre>
       *
       * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
       */
      open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour getContours(int index);
      /**
       * <pre>
       *all closed contours present in this workplane
       * </pre>
       *
       * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
       */
      int getContoursCount();
      /**
       * <pre>
       *all closed contours present in this workplane
       * </pre>
       *
       * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
       */
      java.util.List<? extends open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContourOrBuilder> 
          getContoursOrBuilderList();
      /**
       * <pre>
       *all closed contours present in this workplane
       * </pre>
       *
       * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
       */
      open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContourOrBuilder getContoursOrBuilder(
          int index);

      /**
       * <pre>
       *2D axis aligned bounding box of all the workplanes vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
       * @return Whether the bounds field is set.
       */
      boolean hasBounds();
      /**
       * <pre>
       *2D axis aligned bounding box of all the workplanes vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
       * @return The bounds.
       */
      open_vector_format.OpenVectorFormat.AxisAlignedBox2D getBounds();
      /**
       * <pre>
       *2D axis aligned bounding box of all the workplanes vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
       */
      open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder getBoundsOrBuilder();
    }
    /**
     * <pre>
     *optional metadata of this work plane
     * </pre>
     *
     * Protobuf type {@code open_vector_format.WorkPlane.WorkPlaneMetaData}
     */
    public static final class WorkPlaneMetaData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.WorkPlane.WorkPlaneMetaData)
        WorkPlaneMetaDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use WorkPlaneMetaData.newBuilder() to construct.
      private WorkPlaneMetaData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private WorkPlaneMetaData() {
        contours_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new WorkPlaneMetaData();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetPatchesMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.class, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.Builder.class);
      }

      public interface closedContourOrBuilder extends
          // @@protoc_insertion_point(interface_extends:open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *indices of the vector blocks in vector_blocks repeated field that represent different sections of one closed contour
         *sections are necessary to indicate parameter set changes along the contour
         *with this meta data reconstruction of original contours is possible
         * </pre>
         *
         * <code>repeated int32 contour_section_vector_block_indices = 1;</code>
         * @return A list containing the contourSectionVectorBlockIndices.
         */
        java.util.List<java.lang.Integer> getContourSectionVectorBlockIndicesList();
        /**
         * <pre>
         *indices of the vector blocks in vector_blocks repeated field that represent different sections of one closed contour
         *sections are necessary to indicate parameter set changes along the contour
         *with this meta data reconstruction of original contours is possible
         * </pre>
         *
         * <code>repeated int32 contour_section_vector_block_indices = 1;</code>
         * @return The count of contourSectionVectorBlockIndices.
         */
        int getContourSectionVectorBlockIndicesCount();
        /**
         * <pre>
         *indices of the vector blocks in vector_blocks repeated field that represent different sections of one closed contour
         *sections are necessary to indicate parameter set changes along the contour
         *with this meta data reconstruction of original contours is possible
         * </pre>
         *
         * <code>repeated int32 contour_section_vector_block_indices = 1;</code>
         * @param index The index of the element to return.
         * @return The contourSectionVectorBlockIndices at the given index.
         */
        int getContourSectionVectorBlockIndices(int index);

        /**
         * <pre>
         *this closed contours area in square millimeters
         * </pre>
         *
         * <code>float area_in_mm_2 = 2;</code>
         * @return The areaInMm2.
         */
        float getAreaInMm2();

        /**
         * <pre>
         *this closed contours total length in millimeters
         * </pre>
         *
         * <code>float length_in_mm = 3;</code>
         * @return The lengthInMm.
         */
        float getLengthInMm();

        /**
         * <pre>
         *index of the parent (containing) contour in this workplanes' repeated contours field
         *if the parent index points to the contour itself, it is one outermost contour
         * </pre>
         *
         * <code>int32 parent_index = 5;</code>
         * @return The parentIndex.
         */
        int getParentIndex();

        /**
         * <pre>
         *defines the winding number of the contour around the contours centroid
         *also indicateing its direction: negative = clockwise / positive = counterclockwise
         * </pre>
         *
         * <code>int32 winding_number = 6;</code>
         * @return The windingNumber.
         */
        int getWindingNumber();

        /**
         * <pre>
         *indicates the ContourType of this contour
         * </pre>
         *
         * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour.ContourType type = 7;</code>
         * @return The enum numeric value on the wire for type.
         */
        int getTypeValue();
        /**
         * <pre>
         *indicates the ContourType of this contour
         * </pre>
         *
         * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour.ContourType type = 7;</code>
         * @return The type.
         */
        open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.ContourType getType();
      }
      /**
       * Protobuf type {@code open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour}
       */
      public static final class closedContour extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour)
          closedContourOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use closedContour.newBuilder() to construct.
        private closedContour(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private closedContour() {
          contourSectionVectorBlockIndices_ = emptyIntList();
          type_ = 0;
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new closedContour();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_closedContour_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_closedContour_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.class, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.Builder.class);
        }

        /**
         * Protobuf enum {@code open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour.ContourType}
         */
        public enum ContourType
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <pre>
           *an outer contour of the unprocessed part slice
           *for non overlapping contour groups, outer an inner contours always alternate
           *the hierarchy of the contours is stored in parent_index instead
           * </pre>
           *
           * <code>PART_OUTER_CONTOUR = 0;</code>
           */
          PART_OUTER_CONTOUR(0),
          /**
           * <pre>
           *an inner contour of the unprocessed part slice
           *for non overlapping contour groups, outer an inner contours always alternate
           *the hierarchy of the contours is stored in parent_index instead
           * </pre>
           *
           * <code>PART_INNER_CONTOUR = 1;</code>
           */
          PART_INNER_CONTOUR(1),
          /**
           * <pre>
           *an additional contour that has been offset from a contour of the unprocessed part slice
           *e.g. because number_of_contours &gt; 1 in the part process strategy
           *these contours are not part of the unprocessed part slices contour hierarchy
           *they instead are offset to their parent contour indicated by parent_index
           *and typically are used to weld the parent contour to the hatches
           * </pre>
           *
           * <code>OFFSET_CONTOUR = 2;</code>
           */
          OFFSET_CONTOUR(2),
          UNRECOGNIZED(-1),
          ;

          /**
           * <pre>
           *an outer contour of the unprocessed part slice
           *for non overlapping contour groups, outer an inner contours always alternate
           *the hierarchy of the contours is stored in parent_index instead
           * </pre>
           *
           * <code>PART_OUTER_CONTOUR = 0;</code>
           */
          public static final int PART_OUTER_CONTOUR_VALUE = 0;
          /**
           * <pre>
           *an inner contour of the unprocessed part slice
           *for non overlapping contour groups, outer an inner contours always alternate
           *the hierarchy of the contours is stored in parent_index instead
           * </pre>
           *
           * <code>PART_INNER_CONTOUR = 1;</code>
           */
          public static final int PART_INNER_CONTOUR_VALUE = 1;
          /**
           * <pre>
           *an additional contour that has been offset from a contour of the unprocessed part slice
           *e.g. because number_of_contours &gt; 1 in the part process strategy
           *these contours are not part of the unprocessed part slices contour hierarchy
           *they instead are offset to their parent contour indicated by parent_index
           *and typically are used to weld the parent contour to the hatches
           * </pre>
           *
           * <code>OFFSET_CONTOUR = 2;</code>
           */
          public static final int OFFSET_CONTOUR_VALUE = 2;


          public final int getNumber() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
            }
            return value;
          }

          /**
           * @param value The numeric wire value of the corresponding enum entry.
           * @return The enum associated with the given numeric wire value.
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static ContourType valueOf(int value) {
            return forNumber(value);
          }

          /**
           * @param value The numeric wire value of the corresponding enum entry.
           * @return The enum associated with the given numeric wire value.
           */
          public static ContourType forNumber(int value) {
            switch (value) {
              case 0: return PART_OUTER_CONTOUR;
              case 1: return PART_INNER_CONTOUR;
              case 2: return OFFSET_CONTOUR;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<ContourType>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              ContourType> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<ContourType>() {
                  public ContourType findValueByNumber(int number) {
                    return ContourType.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalStateException(
                  "Can't get the descriptor of an unrecognized enum value.");
            }
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.getDescriptor().getEnumTypes().get(0);
          }

          private static final ContourType[] VALUES = values();

          public static ContourType valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
              return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private ContourType(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour.ContourType)
        }

        public static final int CONTOUR_SECTION_VECTOR_BLOCK_INDICES_FIELD_NUMBER = 1;
        @SuppressWarnings("serial")
        private com.google.protobuf.Internal.IntList contourSectionVectorBlockIndices_ =
            emptyIntList();
        /**
         * <pre>
         *indices of the vector blocks in vector_blocks repeated field that represent different sections of one closed contour
         *sections are necessary to indicate parameter set changes along the contour
         *with this meta data reconstruction of original contours is possible
         * </pre>
         *
         * <code>repeated int32 contour_section_vector_block_indices = 1;</code>
         * @return A list containing the contourSectionVectorBlockIndices.
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getContourSectionVectorBlockIndicesList() {
          return contourSectionVectorBlockIndices_;
        }
        /**
         * <pre>
         *indices of the vector blocks in vector_blocks repeated field that represent different sections of one closed contour
         *sections are necessary to indicate parameter set changes along the contour
         *with this meta data reconstruction of original contours is possible
         * </pre>
         *
         * <code>repeated int32 contour_section_vector_block_indices = 1;</code>
         * @return The count of contourSectionVectorBlockIndices.
         */
        public int getContourSectionVectorBlockIndicesCount() {
          return contourSectionVectorBlockIndices_.size();
        }
        /**
         * <pre>
         *indices of the vector blocks in vector_blocks repeated field that represent different sections of one closed contour
         *sections are necessary to indicate parameter set changes along the contour
         *with this meta data reconstruction of original contours is possible
         * </pre>
         *
         * <code>repeated int32 contour_section_vector_block_indices = 1;</code>
         * @param index The index of the element to return.
         * @return The contourSectionVectorBlockIndices at the given index.
         */
        public int getContourSectionVectorBlockIndices(int index) {
          return contourSectionVectorBlockIndices_.getInt(index);
        }
        private int contourSectionVectorBlockIndicesMemoizedSerializedSize = -1;

        public static final int AREA_IN_MM_2_FIELD_NUMBER = 2;
        private float areaInMm2_ = 0F;
        /**
         * <pre>
         *this closed contours area in square millimeters
         * </pre>
         *
         * <code>float area_in_mm_2 = 2;</code>
         * @return The areaInMm2.
         */
        @java.lang.Override
        public float getAreaInMm2() {
          return areaInMm2_;
        }

        public static final int LENGTH_IN_MM_FIELD_NUMBER = 3;
        private float lengthInMm_ = 0F;
        /**
         * <pre>
         *this closed contours total length in millimeters
         * </pre>
         *
         * <code>float length_in_mm = 3;</code>
         * @return The lengthInMm.
         */
        @java.lang.Override
        public float getLengthInMm() {
          return lengthInMm_;
        }

        public static final int PARENT_INDEX_FIELD_NUMBER = 5;
        private int parentIndex_ = 0;
        /**
         * <pre>
         *index of the parent (containing) contour in this workplanes' repeated contours field
         *if the parent index points to the contour itself, it is one outermost contour
         * </pre>
         *
         * <code>int32 parent_index = 5;</code>
         * @return The parentIndex.
         */
        @java.lang.Override
        public int getParentIndex() {
          return parentIndex_;
        }

        public static final int WINDING_NUMBER_FIELD_NUMBER = 6;
        private int windingNumber_ = 0;
        /**
         * <pre>
         *defines the winding number of the contour around the contours centroid
         *also indicateing its direction: negative = clockwise / positive = counterclockwise
         * </pre>
         *
         * <code>int32 winding_number = 6;</code>
         * @return The windingNumber.
         */
        @java.lang.Override
        public int getWindingNumber() {
          return windingNumber_;
        }

        public static final int TYPE_FIELD_NUMBER = 7;
        private int type_ = 0;
        /**
         * <pre>
         *indicates the ContourType of this contour
         * </pre>
         *
         * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour.ContourType type = 7;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <pre>
         *indicates the ContourType of this contour
         * </pre>
         *
         * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour.ContourType type = 7;</code>
         * @return The type.
         */
        @java.lang.Override public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.ContourType getType() {
          open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.ContourType result = open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.ContourType.forNumber(type_);
          return result == null ? open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.ContourType.UNRECOGNIZED : result;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (getContourSectionVectorBlockIndicesList().size() > 0) {
            output.writeUInt32NoTag(10);
            output.writeUInt32NoTag(contourSectionVectorBlockIndicesMemoizedSerializedSize);
          }
          for (int i = 0; i < contourSectionVectorBlockIndices_.size(); i++) {
            output.writeInt32NoTag(contourSectionVectorBlockIndices_.getInt(i));
          }
          if (java.lang.Float.floatToRawIntBits(areaInMm2_) != 0) {
            output.writeFloat(2, areaInMm2_);
          }
          if (java.lang.Float.floatToRawIntBits(lengthInMm_) != 0) {
            output.writeFloat(3, lengthInMm_);
          }
          if (parentIndex_ != 0) {
            output.writeInt32(5, parentIndex_);
          }
          if (windingNumber_ != 0) {
            output.writeInt32(6, windingNumber_);
          }
          if (type_ != open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.ContourType.PART_OUTER_CONTOUR.getNumber()) {
            output.writeEnum(7, type_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          {
            int dataSize = 0;
            for (int i = 0; i < contourSectionVectorBlockIndices_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(contourSectionVectorBlockIndices_.getInt(i));
            }
            size += dataSize;
            if (!getContourSectionVectorBlockIndicesList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            contourSectionVectorBlockIndicesMemoizedSerializedSize = dataSize;
          }
          if (java.lang.Float.floatToRawIntBits(areaInMm2_) != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, areaInMm2_);
          }
          if (java.lang.Float.floatToRawIntBits(lengthInMm_) != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(3, lengthInMm_);
          }
          if (parentIndex_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(5, parentIndex_);
          }
          if (windingNumber_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(6, windingNumber_);
          }
          if (type_ != open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.ContourType.PART_OUTER_CONTOUR.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(7, type_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour)) {
            return super.equals(obj);
          }
          open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour other = (open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour) obj;

          if (!getContourSectionVectorBlockIndicesList()
              .equals(other.getContourSectionVectorBlockIndicesList())) return false;
          if (java.lang.Float.floatToIntBits(getAreaInMm2())
              != java.lang.Float.floatToIntBits(
                  other.getAreaInMm2())) return false;
          if (java.lang.Float.floatToIntBits(getLengthInMm())
              != java.lang.Float.floatToIntBits(
                  other.getLengthInMm())) return false;
          if (getParentIndex()
              != other.getParentIndex()) return false;
          if (getWindingNumber()
              != other.getWindingNumber()) return false;
          if (type_ != other.type_) return false;
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (getContourSectionVectorBlockIndicesCount() > 0) {
            hash = (37 * hash) + CONTOUR_SECTION_VECTOR_BLOCK_INDICES_FIELD_NUMBER;
            hash = (53 * hash) + getContourSectionVectorBlockIndicesList().hashCode();
          }
          hash = (37 * hash) + AREA_IN_MM_2_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getAreaInMm2());
          hash = (37 * hash) + LENGTH_IN_MM_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getLengthInMm());
          hash = (37 * hash) + PARENT_INDEX_FIELD_NUMBER;
          hash = (53 * hash) + getParentIndex();
          hash = (37 * hash) + WINDING_NUMBER_FIELD_NUMBER;
          hash = (53 * hash) + getWindingNumber();
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + type_;
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour)
            open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContourOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_closedContour_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_closedContour_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.class, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.Builder.class);
          }

          // Construct using open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            contourSectionVectorBlockIndices_ = emptyIntList();
            areaInMm2_ = 0F;
            lengthInMm_ = 0F;
            parentIndex_ = 0;
            windingNumber_ = 0;
            type_ = 0;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_closedContour_descriptor;
          }

          @java.lang.Override
          public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour getDefaultInstanceForType() {
            return open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.getDefaultInstance();
          }

          @java.lang.Override
          public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour build() {
            open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour buildPartial() {
            open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour result = new open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour result) {
            int from_bitField0_ = bitField0_;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              contourSectionVectorBlockIndices_.makeImmutable();
              result.contourSectionVectorBlockIndices_ = contourSectionVectorBlockIndices_;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.areaInMm2_ = areaInMm2_;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.lengthInMm_ = lengthInMm_;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.parentIndex_ = parentIndex_;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.windingNumber_ = windingNumber_;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.type_ = type_;
            }
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour) {
              return mergeFrom((open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour other) {
            if (other == open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.getDefaultInstance()) return this;
            if (!other.contourSectionVectorBlockIndices_.isEmpty()) {
              if (contourSectionVectorBlockIndices_.isEmpty()) {
                contourSectionVectorBlockIndices_ = other.contourSectionVectorBlockIndices_;
                contourSectionVectorBlockIndices_.makeImmutable();
                bitField0_ |= 0x00000001;
              } else {
                ensureContourSectionVectorBlockIndicesIsMutable();
                contourSectionVectorBlockIndices_.addAll(other.contourSectionVectorBlockIndices_);
              }
              onChanged();
            }
            if (other.getAreaInMm2() != 0F) {
              setAreaInMm2(other.getAreaInMm2());
            }
            if (other.getLengthInMm() != 0F) {
              setLengthInMm(other.getLengthInMm());
            }
            if (other.getParentIndex() != 0) {
              setParentIndex(other.getParentIndex());
            }
            if (other.getWindingNumber() != 0) {
              setWindingNumber(other.getWindingNumber());
            }
            if (other.type_ != 0) {
              setTypeValue(other.getTypeValue());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    int v = input.readInt32();
                    ensureContourSectionVectorBlockIndicesIsMutable();
                    contourSectionVectorBlockIndices_.addInt(v);
                    break;
                  } // case 8
                  case 10: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    ensureContourSectionVectorBlockIndicesIsMutable();
                    while (input.getBytesUntilLimit() > 0) {
                      contourSectionVectorBlockIndices_.addInt(input.readInt32());
                    }
                    input.popLimit(limit);
                    break;
                  } // case 10
                  case 21: {
                    areaInMm2_ = input.readFloat();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 21
                  case 29: {
                    lengthInMm_ = input.readFloat();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 29
                  case 40: {
                    parentIndex_ = input.readInt32();
                    bitField0_ |= 0x00000008;
                    break;
                  } // case 40
                  case 48: {
                    windingNumber_ = input.readInt32();
                    bitField0_ |= 0x00000010;
                    break;
                  } // case 48
                  case 56: {
                    type_ = input.readEnum();
                    bitField0_ |= 0x00000020;
                    break;
                  } // case 56
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private com.google.protobuf.Internal.IntList contourSectionVectorBlockIndices_ = emptyIntList();
          private void ensureContourSectionVectorBlockIndicesIsMutable() {
            if (!contourSectionVectorBlockIndices_.isModifiable()) {
              contourSectionVectorBlockIndices_ = makeMutableCopy(contourSectionVectorBlockIndices_);
            }
            bitField0_ |= 0x00000001;
          }
          /**
           * <pre>
           *indices of the vector blocks in vector_blocks repeated field that represent different sections of one closed contour
           *sections are necessary to indicate parameter set changes along the contour
           *with this meta data reconstruction of original contours is possible
           * </pre>
           *
           * <code>repeated int32 contour_section_vector_block_indices = 1;</code>
           * @return A list containing the contourSectionVectorBlockIndices.
           */
          public java.util.List<java.lang.Integer>
              getContourSectionVectorBlockIndicesList() {
            contourSectionVectorBlockIndices_.makeImmutable();
            return contourSectionVectorBlockIndices_;
          }
          /**
           * <pre>
           *indices of the vector blocks in vector_blocks repeated field that represent different sections of one closed contour
           *sections are necessary to indicate parameter set changes along the contour
           *with this meta data reconstruction of original contours is possible
           * </pre>
           *
           * <code>repeated int32 contour_section_vector_block_indices = 1;</code>
           * @return The count of contourSectionVectorBlockIndices.
           */
          public int getContourSectionVectorBlockIndicesCount() {
            return contourSectionVectorBlockIndices_.size();
          }
          /**
           * <pre>
           *indices of the vector blocks in vector_blocks repeated field that represent different sections of one closed contour
           *sections are necessary to indicate parameter set changes along the contour
           *with this meta data reconstruction of original contours is possible
           * </pre>
           *
           * <code>repeated int32 contour_section_vector_block_indices = 1;</code>
           * @param index The index of the element to return.
           * @return The contourSectionVectorBlockIndices at the given index.
           */
          public int getContourSectionVectorBlockIndices(int index) {
            return contourSectionVectorBlockIndices_.getInt(index);
          }
          /**
           * <pre>
           *indices of the vector blocks in vector_blocks repeated field that represent different sections of one closed contour
           *sections are necessary to indicate parameter set changes along the contour
           *with this meta data reconstruction of original contours is possible
           * </pre>
           *
           * <code>repeated int32 contour_section_vector_block_indices = 1;</code>
           * @param index The index to set the value at.
           * @param value The contourSectionVectorBlockIndices to set.
           * @return This builder for chaining.
           */
          public Builder setContourSectionVectorBlockIndices(
              int index, int value) {

            ensureContourSectionVectorBlockIndicesIsMutable();
            contourSectionVectorBlockIndices_.setInt(index, value);
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *indices of the vector blocks in vector_blocks repeated field that represent different sections of one closed contour
           *sections are necessary to indicate parameter set changes along the contour
           *with this meta data reconstruction of original contours is possible
           * </pre>
           *
           * <code>repeated int32 contour_section_vector_block_indices = 1;</code>
           * @param value The contourSectionVectorBlockIndices to add.
           * @return This builder for chaining.
           */
          public Builder addContourSectionVectorBlockIndices(int value) {

            ensureContourSectionVectorBlockIndicesIsMutable();
            contourSectionVectorBlockIndices_.addInt(value);
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *indices of the vector blocks in vector_blocks repeated field that represent different sections of one closed contour
           *sections are necessary to indicate parameter set changes along the contour
           *with this meta data reconstruction of original contours is possible
           * </pre>
           *
           * <code>repeated int32 contour_section_vector_block_indices = 1;</code>
           * @param values The contourSectionVectorBlockIndices to add.
           * @return This builder for chaining.
           */
          public Builder addAllContourSectionVectorBlockIndices(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureContourSectionVectorBlockIndicesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, contourSectionVectorBlockIndices_);
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *indices of the vector blocks in vector_blocks repeated field that represent different sections of one closed contour
           *sections are necessary to indicate parameter set changes along the contour
           *with this meta data reconstruction of original contours is possible
           * </pre>
           *
           * <code>repeated int32 contour_section_vector_block_indices = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearContourSectionVectorBlockIndices() {
            contourSectionVectorBlockIndices_ = emptyIntList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
            return this;
          }

          private float areaInMm2_ ;
          /**
           * <pre>
           *this closed contours area in square millimeters
           * </pre>
           *
           * <code>float area_in_mm_2 = 2;</code>
           * @return The areaInMm2.
           */
          @java.lang.Override
          public float getAreaInMm2() {
            return areaInMm2_;
          }
          /**
           * <pre>
           *this closed contours area in square millimeters
           * </pre>
           *
           * <code>float area_in_mm_2 = 2;</code>
           * @param value The areaInMm2 to set.
           * @return This builder for chaining.
           */
          public Builder setAreaInMm2(float value) {

            areaInMm2_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *this closed contours area in square millimeters
           * </pre>
           *
           * <code>float area_in_mm_2 = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearAreaInMm2() {
            bitField0_ = (bitField0_ & ~0x00000002);
            areaInMm2_ = 0F;
            onChanged();
            return this;
          }

          private float lengthInMm_ ;
          /**
           * <pre>
           *this closed contours total length in millimeters
           * </pre>
           *
           * <code>float length_in_mm = 3;</code>
           * @return The lengthInMm.
           */
          @java.lang.Override
          public float getLengthInMm() {
            return lengthInMm_;
          }
          /**
           * <pre>
           *this closed contours total length in millimeters
           * </pre>
           *
           * <code>float length_in_mm = 3;</code>
           * @param value The lengthInMm to set.
           * @return This builder for chaining.
           */
          public Builder setLengthInMm(float value) {

            lengthInMm_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *this closed contours total length in millimeters
           * </pre>
           *
           * <code>float length_in_mm = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearLengthInMm() {
            bitField0_ = (bitField0_ & ~0x00000004);
            lengthInMm_ = 0F;
            onChanged();
            return this;
          }

          private int parentIndex_ ;
          /**
           * <pre>
           *index of the parent (containing) contour in this workplanes' repeated contours field
           *if the parent index points to the contour itself, it is one outermost contour
           * </pre>
           *
           * <code>int32 parent_index = 5;</code>
           * @return The parentIndex.
           */
          @java.lang.Override
          public int getParentIndex() {
            return parentIndex_;
          }
          /**
           * <pre>
           *index of the parent (containing) contour in this workplanes' repeated contours field
           *if the parent index points to the contour itself, it is one outermost contour
           * </pre>
           *
           * <code>int32 parent_index = 5;</code>
           * @param value The parentIndex to set.
           * @return This builder for chaining.
           */
          public Builder setParentIndex(int value) {

            parentIndex_ = value;
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *index of the parent (containing) contour in this workplanes' repeated contours field
           *if the parent index points to the contour itself, it is one outermost contour
           * </pre>
           *
           * <code>int32 parent_index = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearParentIndex() {
            bitField0_ = (bitField0_ & ~0x00000008);
            parentIndex_ = 0;
            onChanged();
            return this;
          }

          private int windingNumber_ ;
          /**
           * <pre>
           *defines the winding number of the contour around the contours centroid
           *also indicateing its direction: negative = clockwise / positive = counterclockwise
           * </pre>
           *
           * <code>int32 winding_number = 6;</code>
           * @return The windingNumber.
           */
          @java.lang.Override
          public int getWindingNumber() {
            return windingNumber_;
          }
          /**
           * <pre>
           *defines the winding number of the contour around the contours centroid
           *also indicateing its direction: negative = clockwise / positive = counterclockwise
           * </pre>
           *
           * <code>int32 winding_number = 6;</code>
           * @param value The windingNumber to set.
           * @return This builder for chaining.
           */
          public Builder setWindingNumber(int value) {

            windingNumber_ = value;
            bitField0_ |= 0x00000010;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *defines the winding number of the contour around the contours centroid
           *also indicateing its direction: negative = clockwise / positive = counterclockwise
           * </pre>
           *
           * <code>int32 winding_number = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearWindingNumber() {
            bitField0_ = (bitField0_ & ~0x00000010);
            windingNumber_ = 0;
            onChanged();
            return this;
          }

          private int type_ = 0;
          /**
           * <pre>
           *indicates the ContourType of this contour
           * </pre>
           *
           * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour.ContourType type = 7;</code>
           * @return The enum numeric value on the wire for type.
           */
          @java.lang.Override public int getTypeValue() {
            return type_;
          }
          /**
           * <pre>
           *indicates the ContourType of this contour
           * </pre>
           *
           * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour.ContourType type = 7;</code>
           * @param value The enum numeric value on the wire for type to set.
           * @return This builder for chaining.
           */
          public Builder setTypeValue(int value) {
            type_ = value;
            bitField0_ |= 0x00000020;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *indicates the ContourType of this contour
           * </pre>
           *
           * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour.ContourType type = 7;</code>
           * @return The type.
           */
          @java.lang.Override
          public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.ContourType getType() {
            open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.ContourType result = open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.ContourType.forNumber(type_);
            return result == null ? open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.ContourType.UNRECOGNIZED : result;
          }
          /**
           * <pre>
           *indicates the ContourType of this contour
           * </pre>
           *
           * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour.ContourType type = 7;</code>
           * @param value The type to set.
           * @return This builder for chaining.
           */
          public Builder setType(open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.ContourType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000020;
            type_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           *indicates the ContourType of this contour
           * </pre>
           *
           * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour.ContourType type = 7;</code>
           * @return This builder for chaining.
           */
          public Builder clearType() {
            bitField0_ = (bitField0_ & ~0x00000020);
            type_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour)
        }

        // @@protoc_insertion_point(class_scope:open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour)
        private static final open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour();
        }

        public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<closedContour>
            PARSER = new com.google.protobuf.AbstractParser<closedContour>() {
          @java.lang.Override
          public closedContour parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<closedContour> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<closedContour> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int TOTAL_SCAN_DISTANCE_IN_MM_FIELD_NUMBER = 1;
      private double totalScanDistanceInMm_ = 0D;
      /**
       * <pre>
       *total scan distance of this WorkPlane in mm
       * </pre>
       *
       * <code>double total_scan_distance_in_mm = 1;</code>
       * @return The totalScanDistanceInMm.
       */
      @java.lang.Override
      public double getTotalScanDistanceInMm() {
        return totalScanDistanceInMm_;
      }

      public static final int TOTAL_JUMP_DISTANCE_IN_MM_FIELD_NUMBER = 2;
      private double totalJumpDistanceInMm_ = 0D;
      /**
       * <pre>
       *total scan distance of this WorkPlane in mm
       * </pre>
       *
       * <code>double total_jump_distance_in_mm = 2;</code>
       * @return The totalJumpDistanceInMm.
       */
      @java.lang.Override
      public double getTotalJumpDistanceInMm() {
        return totalJumpDistanceInMm_;
      }

      public static final int PATCHES_MAP_FIELD_NUMBER = 3;
      private static final class PatchesMapDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch>newDefaultInstance(
                    open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_PatchesMapEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.INT32,
                    0,
                    com.google.protobuf.WireFormat.FieldType.MESSAGE,
                    open_vector_format.OpenVectorFormat.WorkPlane.Patch.getDefaultInstance());
      }
      @SuppressWarnings("serial")
      private com.google.protobuf.MapField<
          java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch> patchesMap_;
      private com.google.protobuf.MapField<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch>
      internalGetPatchesMap() {
        if (patchesMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PatchesMapDefaultEntryHolder.defaultEntry);
        }
        return patchesMap_;
      }
      public int getPatchesMapCount() {
        return internalGetPatchesMap().getMap().size();
      }
      /**
       * <pre>
       *map containing all patches in this workplane
       * </pre>
       *
       * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
       */
      @java.lang.Override
      public boolean containsPatchesMap(
          int key) {

        return internalGetPatchesMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPatchesMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch> getPatchesMap() {
        return getPatchesMapMap();
      }
      /**
       * <pre>
       *map containing all patches in this workplane
       * </pre>
       *
       * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch> getPatchesMapMap() {
        return internalGetPatchesMap().getMap();
      }
      /**
       * <pre>
       *map containing all patches in this workplane
       * </pre>
       *
       * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
       */
      @java.lang.Override
      public /* nullable */
open_vector_format.OpenVectorFormat.WorkPlane.Patch getPatchesMapOrDefault(
          int key,
          /* nullable */
open_vector_format.OpenVectorFormat.WorkPlane.Patch defaultValue) {

        java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch> map =
            internalGetPatchesMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *map containing all patches in this workplane
       * </pre>
       *
       * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.WorkPlane.Patch getPatchesMapOrThrow(
          int key) {

        java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch> map =
            internalGetPatchesMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public static final int MAXPOWER_FIELD_NUMBER = 4;
      private float maxPower_ = 0F;
      /**
       * <pre>
       *actually applied max laser power after dynamic parameter allocation in this workPlane
       * </pre>
       *
       * <code>float maxPower = 4;</code>
       * @return The maxPower.
       */
      @java.lang.Override
      public float getMaxPower() {
        return maxPower_;
      }

      public static final int MINPOWER_FIELD_NUMBER = 5;
      private float minPower_ = 0F;
      /**
       * <pre>
       *actually applied min laser power after dynamic parameter allocation in this workPlane
       * </pre>
       *
       * <code>float minPower = 5;</code>
       * @return The minPower.
       */
      @java.lang.Override
      public float getMinPower() {
        return minPower_;
      }

      public static final int CONTOURS_FIELD_NUMBER = 6;
      @SuppressWarnings("serial")
      private java.util.List<open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour> contours_;
      /**
       * <pre>
       *all closed contours present in this workplane
       * </pre>
       *
       * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
       */
      @java.lang.Override
      public java.util.List<open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour> getContoursList() {
        return contours_;
      }
      /**
       * <pre>
       *all closed contours present in this workplane
       * </pre>
       *
       * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
       */
      @java.lang.Override
      public java.util.List<? extends open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContourOrBuilder> 
          getContoursOrBuilderList() {
        return contours_;
      }
      /**
       * <pre>
       *all closed contours present in this workplane
       * </pre>
       *
       * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
       */
      @java.lang.Override
      public int getContoursCount() {
        return contours_.size();
      }
      /**
       * <pre>
       *all closed contours present in this workplane
       * </pre>
       *
       * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour getContours(int index) {
        return contours_.get(index);
      }
      /**
       * <pre>
       *all closed contours present in this workplane
       * </pre>
       *
       * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContourOrBuilder getContoursOrBuilder(
          int index) {
        return contours_.get(index);
      }

      public static final int BOUNDS_FIELD_NUMBER = 7;
      private open_vector_format.OpenVectorFormat.AxisAlignedBox2D bounds_;
      /**
       * <pre>
       *2D axis aligned bounding box of all the workplanes vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
       * @return Whether the bounds field is set.
       */
      @java.lang.Override
      public boolean hasBounds() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *2D axis aligned bounding box of all the workplanes vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
       * @return The bounds.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.AxisAlignedBox2D getBounds() {
        return bounds_ == null ? open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance() : bounds_;
      }
      /**
       * <pre>
       *2D axis aligned bounding box of all the workplanes vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder getBoundsOrBuilder() {
        return bounds_ == null ? open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance() : bounds_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (java.lang.Double.doubleToRawLongBits(totalScanDistanceInMm_) != 0) {
          output.writeDouble(1, totalScanDistanceInMm_);
        }
        if (java.lang.Double.doubleToRawLongBits(totalJumpDistanceInMm_) != 0) {
          output.writeDouble(2, totalJumpDistanceInMm_);
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeIntegerMapTo(
            output,
            internalGetPatchesMap(),
            PatchesMapDefaultEntryHolder.defaultEntry,
            3);
        if (java.lang.Float.floatToRawIntBits(maxPower_) != 0) {
          output.writeFloat(4, maxPower_);
        }
        if (java.lang.Float.floatToRawIntBits(minPower_) != 0) {
          output.writeFloat(5, minPower_);
        }
        for (int i = 0; i < contours_.size(); i++) {
          output.writeMessage(6, contours_.get(i));
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(7, getBounds());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (java.lang.Double.doubleToRawLongBits(totalScanDistanceInMm_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, totalScanDistanceInMm_);
        }
        if (java.lang.Double.doubleToRawLongBits(totalJumpDistanceInMm_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, totalJumpDistanceInMm_);
        }
        for (java.util.Map.Entry<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch> entry
             : internalGetPatchesMap().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch>
          patchesMap__ = PatchesMapDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, patchesMap__);
        }
        if (java.lang.Float.floatToRawIntBits(maxPower_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, maxPower_);
        }
        if (java.lang.Float.floatToRawIntBits(minPower_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, minPower_);
        }
        for (int i = 0; i < contours_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, contours_.get(i));
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, getBounds());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData other = (open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData) obj;

        if (java.lang.Double.doubleToLongBits(getTotalScanDistanceInMm())
            != java.lang.Double.doubleToLongBits(
                other.getTotalScanDistanceInMm())) return false;
        if (java.lang.Double.doubleToLongBits(getTotalJumpDistanceInMm())
            != java.lang.Double.doubleToLongBits(
                other.getTotalJumpDistanceInMm())) return false;
        if (!internalGetPatchesMap().equals(
            other.internalGetPatchesMap())) return false;
        if (java.lang.Float.floatToIntBits(getMaxPower())
            != java.lang.Float.floatToIntBits(
                other.getMaxPower())) return false;
        if (java.lang.Float.floatToIntBits(getMinPower())
            != java.lang.Float.floatToIntBits(
                other.getMinPower())) return false;
        if (!getContoursList()
            .equals(other.getContoursList())) return false;
        if (hasBounds() != other.hasBounds()) return false;
        if (hasBounds()) {
          if (!getBounds()
              .equals(other.getBounds())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TOTAL_SCAN_DISTANCE_IN_MM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalScanDistanceInMm()));
        hash = (37 * hash) + TOTAL_JUMP_DISTANCE_IN_MM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalJumpDistanceInMm()));
        if (!internalGetPatchesMap().getMap().isEmpty()) {
          hash = (37 * hash) + PATCHES_MAP_FIELD_NUMBER;
          hash = (53 * hash) + internalGetPatchesMap().hashCode();
        }
        hash = (37 * hash) + MAXPOWER_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxPower());
        hash = (37 * hash) + MINPOWER_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinPower());
        if (getContoursCount() > 0) {
          hash = (37 * hash) + CONTOURS_FIELD_NUMBER;
          hash = (53 * hash) + getContoursList().hashCode();
        }
        if (hasBounds()) {
          hash = (37 * hash) + BOUNDS_FIELD_NUMBER;
          hash = (53 * hash) + getBounds().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *optional metadata of this work plane
       * </pre>
       *
       * Protobuf type {@code open_vector_format.WorkPlane.WorkPlaneMetaData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.WorkPlane.WorkPlaneMetaData)
          open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 3:
              return internalGetPatchesMap();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 3:
              return internalGetMutablePatchesMap();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.class, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getContoursFieldBuilder();
            getBoundsFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          totalScanDistanceInMm_ = 0D;
          totalJumpDistanceInMm_ = 0D;
          internalGetMutablePatchesMap().clear();
          maxPower_ = 0F;
          minPower_ = 0F;
          if (contoursBuilder_ == null) {
            contours_ = java.util.Collections.emptyList();
          } else {
            contours_ = null;
            contoursBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          bounds_ = null;
          if (boundsBuilder_ != null) {
            boundsBuilder_.dispose();
            boundsBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData build() {
          open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData buildPartial() {
          open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData result = new open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData result) {
          if (contoursBuilder_ == null) {
            if (((bitField0_ & 0x00000020) != 0)) {
              contours_ = java.util.Collections.unmodifiableList(contours_);
              bitField0_ = (bitField0_ & ~0x00000020);
            }
            result.contours_ = contours_;
          } else {
            result.contours_ = contoursBuilder_.build();
          }
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.totalScanDistanceInMm_ = totalScanDistanceInMm_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.totalJumpDistanceInMm_ = totalJumpDistanceInMm_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.patchesMap_ = internalGetPatchesMap();
            result.patchesMap_.makeImmutable();
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.maxPower_ = maxPower_;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.minPower_ = minPower_;
          }
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.bounds_ = boundsBuilder_ == null
                ? bounds_
                : boundsBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData) {
            return mergeFrom((open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData other) {
          if (other == open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.getDefaultInstance()) return this;
          if (other.getTotalScanDistanceInMm() != 0D) {
            setTotalScanDistanceInMm(other.getTotalScanDistanceInMm());
          }
          if (other.getTotalJumpDistanceInMm() != 0D) {
            setTotalJumpDistanceInMm(other.getTotalJumpDistanceInMm());
          }
          internalGetMutablePatchesMap().mergeFrom(
              other.internalGetPatchesMap());
          bitField0_ |= 0x00000004;
          if (other.getMaxPower() != 0F) {
            setMaxPower(other.getMaxPower());
          }
          if (other.getMinPower() != 0F) {
            setMinPower(other.getMinPower());
          }
          if (contoursBuilder_ == null) {
            if (!other.contours_.isEmpty()) {
              if (contours_.isEmpty()) {
                contours_ = other.contours_;
                bitField0_ = (bitField0_ & ~0x00000020);
              } else {
                ensureContoursIsMutable();
                contours_.addAll(other.contours_);
              }
              onChanged();
            }
          } else {
            if (!other.contours_.isEmpty()) {
              if (contoursBuilder_.isEmpty()) {
                contoursBuilder_.dispose();
                contoursBuilder_ = null;
                contours_ = other.contours_;
                bitField0_ = (bitField0_ & ~0x00000020);
                contoursBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getContoursFieldBuilder() : null;
              } else {
                contoursBuilder_.addAllMessages(other.contours_);
              }
            }
          }
          if (other.hasBounds()) {
            mergeBounds(other.getBounds());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {
                  totalScanDistanceInMm_ = input.readDouble();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 9
                case 17: {
                  totalJumpDistanceInMm_ = input.readDouble();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 17
                case 26: {
                  com.google.protobuf.MapEntry<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch>
                  patchesMap__ = input.readMessage(
                      PatchesMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  internalGetMutablePatchesMap().getMutableMap().put(
                      patchesMap__.getKey(), patchesMap__.getValue());
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                case 37: {
                  maxPower_ = input.readFloat();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 37
                case 45: {
                  minPower_ = input.readFloat();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 45
                case 50: {
                  open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour m =
                      input.readMessage(
                          open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.parser(),
                          extensionRegistry);
                  if (contoursBuilder_ == null) {
                    ensureContoursIsMutable();
                    contours_.add(m);
                  } else {
                    contoursBuilder_.addMessage(m);
                  }
                  break;
                } // case 50
                case 58: {
                  input.readMessage(
                      getBoundsFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000040;
                  break;
                } // case 58
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private double totalScanDistanceInMm_ ;
        /**
         * <pre>
         *total scan distance of this WorkPlane in mm
         * </pre>
         *
         * <code>double total_scan_distance_in_mm = 1;</code>
         * @return The totalScanDistanceInMm.
         */
        @java.lang.Override
        public double getTotalScanDistanceInMm() {
          return totalScanDistanceInMm_;
        }
        /**
         * <pre>
         *total scan distance of this WorkPlane in mm
         * </pre>
         *
         * <code>double total_scan_distance_in_mm = 1;</code>
         * @param value The totalScanDistanceInMm to set.
         * @return This builder for chaining.
         */
        public Builder setTotalScanDistanceInMm(double value) {

          totalScanDistanceInMm_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *total scan distance of this WorkPlane in mm
         * </pre>
         *
         * <code>double total_scan_distance_in_mm = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTotalScanDistanceInMm() {
          bitField0_ = (bitField0_ & ~0x00000001);
          totalScanDistanceInMm_ = 0D;
          onChanged();
          return this;
        }

        private double totalJumpDistanceInMm_ ;
        /**
         * <pre>
         *total scan distance of this WorkPlane in mm
         * </pre>
         *
         * <code>double total_jump_distance_in_mm = 2;</code>
         * @return The totalJumpDistanceInMm.
         */
        @java.lang.Override
        public double getTotalJumpDistanceInMm() {
          return totalJumpDistanceInMm_;
        }
        /**
         * <pre>
         *total scan distance of this WorkPlane in mm
         * </pre>
         *
         * <code>double total_jump_distance_in_mm = 2;</code>
         * @param value The totalJumpDistanceInMm to set.
         * @return This builder for chaining.
         */
        public Builder setTotalJumpDistanceInMm(double value) {

          totalJumpDistanceInMm_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *total scan distance of this WorkPlane in mm
         * </pre>
         *
         * <code>double total_jump_distance_in_mm = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTotalJumpDistanceInMm() {
          bitField0_ = (bitField0_ & ~0x00000002);
          totalJumpDistanceInMm_ = 0D;
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch> patchesMap_;
        private com.google.protobuf.MapField<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch>
            internalGetPatchesMap() {
          if (patchesMap_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                PatchesMapDefaultEntryHolder.defaultEntry);
          }
          return patchesMap_;
        }
        private com.google.protobuf.MapField<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch>
            internalGetMutablePatchesMap() {
          if (patchesMap_ == null) {
            patchesMap_ = com.google.protobuf.MapField.newMapField(
                PatchesMapDefaultEntryHolder.defaultEntry);
          }
          if (!patchesMap_.isMutable()) {
            patchesMap_ = patchesMap_.copy();
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return patchesMap_;
        }
        public int getPatchesMapCount() {
          return internalGetPatchesMap().getMap().size();
        }
        /**
         * <pre>
         *map containing all patches in this workplane
         * </pre>
         *
         * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
         */
        @java.lang.Override
        public boolean containsPatchesMap(
            int key) {

          return internalGetPatchesMap().getMap().containsKey(key);
        }
        /**
         * Use {@link #getPatchesMapMap()} instead.
         */
        @java.lang.Override
        @java.lang.Deprecated
        public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch> getPatchesMap() {
          return getPatchesMapMap();
        }
        /**
         * <pre>
         *map containing all patches in this workplane
         * </pre>
         *
         * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
         */
        @java.lang.Override
        public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch> getPatchesMapMap() {
          return internalGetPatchesMap().getMap();
        }
        /**
         * <pre>
         *map containing all patches in this workplane
         * </pre>
         *
         * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
         */
        @java.lang.Override
        public /* nullable */
open_vector_format.OpenVectorFormat.WorkPlane.Patch getPatchesMapOrDefault(
            int key,
            /* nullable */
open_vector_format.OpenVectorFormat.WorkPlane.Patch defaultValue) {

          java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch> map =
              internalGetPatchesMap().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         *map containing all patches in this workplane
         * </pre>
         *
         * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
         */
        @java.lang.Override
        public open_vector_format.OpenVectorFormat.WorkPlane.Patch getPatchesMapOrThrow(
            int key) {

          java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch> map =
              internalGetPatchesMap().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }
        public Builder clearPatchesMap() {
          bitField0_ = (bitField0_ & ~0x00000004);
          internalGetMutablePatchesMap().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         *map containing all patches in this workplane
         * </pre>
         *
         * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
         */
        public Builder removePatchesMap(
            int key) {

          internalGetMutablePatchesMap().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch>
            getMutablePatchesMap() {
          bitField0_ |= 0x00000004;
          return internalGetMutablePatchesMap().getMutableMap();
        }
        /**
         * <pre>
         *map containing all patches in this workplane
         * </pre>
         *
         * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
         */
        public Builder putPatchesMap(
            int key,
            open_vector_format.OpenVectorFormat.WorkPlane.Patch value) {

          if (value == null) { throw new NullPointerException("map value"); }
          internalGetMutablePatchesMap().getMutableMap()
              .put(key, value);
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <pre>
         *map containing all patches in this workplane
         * </pre>
         *
         * <code>map&lt;int32, .open_vector_format.WorkPlane.Patch&gt; patches_map = 3;</code>
         */
        public Builder putAllPatchesMap(
            java.util.Map<java.lang.Integer, open_vector_format.OpenVectorFormat.WorkPlane.Patch> values) {
          internalGetMutablePatchesMap().getMutableMap()
              .putAll(values);
          bitField0_ |= 0x00000004;
          return this;
        }

        private float maxPower_ ;
        /**
         * <pre>
         *actually applied max laser power after dynamic parameter allocation in this workPlane
         * </pre>
         *
         * <code>float maxPower = 4;</code>
         * @return The maxPower.
         */
        @java.lang.Override
        public float getMaxPower() {
          return maxPower_;
        }
        /**
         * <pre>
         *actually applied max laser power after dynamic parameter allocation in this workPlane
         * </pre>
         *
         * <code>float maxPower = 4;</code>
         * @param value The maxPower to set.
         * @return This builder for chaining.
         */
        public Builder setMaxPower(float value) {

          maxPower_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *actually applied max laser power after dynamic parameter allocation in this workPlane
         * </pre>
         *
         * <code>float maxPower = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearMaxPower() {
          bitField0_ = (bitField0_ & ~0x00000008);
          maxPower_ = 0F;
          onChanged();
          return this;
        }

        private float minPower_ ;
        /**
         * <pre>
         *actually applied min laser power after dynamic parameter allocation in this workPlane
         * </pre>
         *
         * <code>float minPower = 5;</code>
         * @return The minPower.
         */
        @java.lang.Override
        public float getMinPower() {
          return minPower_;
        }
        /**
         * <pre>
         *actually applied min laser power after dynamic parameter allocation in this workPlane
         * </pre>
         *
         * <code>float minPower = 5;</code>
         * @param value The minPower to set.
         * @return This builder for chaining.
         */
        public Builder setMinPower(float value) {

          minPower_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *actually applied min laser power after dynamic parameter allocation in this workPlane
         * </pre>
         *
         * <code>float minPower = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearMinPower() {
          bitField0_ = (bitField0_ & ~0x00000010);
          minPower_ = 0F;
          onChanged();
          return this;
        }

        private java.util.List<open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour> contours_ =
          java.util.Collections.emptyList();
        private void ensureContoursIsMutable() {
          if (!((bitField0_ & 0x00000020) != 0)) {
            contours_ = new java.util.ArrayList<open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour>(contours_);
            bitField0_ |= 0x00000020;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.Builder, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContourOrBuilder> contoursBuilder_;

        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public java.util.List<open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour> getContoursList() {
          if (contoursBuilder_ == null) {
            return java.util.Collections.unmodifiableList(contours_);
          } else {
            return contoursBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public int getContoursCount() {
          if (contoursBuilder_ == null) {
            return contours_.size();
          } else {
            return contoursBuilder_.getCount();
          }
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour getContours(int index) {
          if (contoursBuilder_ == null) {
            return contours_.get(index);
          } else {
            return contoursBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public Builder setContours(
            int index, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour value) {
          if (contoursBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureContoursIsMutable();
            contours_.set(index, value);
            onChanged();
          } else {
            contoursBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public Builder setContours(
            int index, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.Builder builderForValue) {
          if (contoursBuilder_ == null) {
            ensureContoursIsMutable();
            contours_.set(index, builderForValue.build());
            onChanged();
          } else {
            contoursBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public Builder addContours(open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour value) {
          if (contoursBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureContoursIsMutable();
            contours_.add(value);
            onChanged();
          } else {
            contoursBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public Builder addContours(
            int index, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour value) {
          if (contoursBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureContoursIsMutable();
            contours_.add(index, value);
            onChanged();
          } else {
            contoursBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public Builder addContours(
            open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.Builder builderForValue) {
          if (contoursBuilder_ == null) {
            ensureContoursIsMutable();
            contours_.add(builderForValue.build());
            onChanged();
          } else {
            contoursBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public Builder addContours(
            int index, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.Builder builderForValue) {
          if (contoursBuilder_ == null) {
            ensureContoursIsMutable();
            contours_.add(index, builderForValue.build());
            onChanged();
          } else {
            contoursBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public Builder addAllContours(
            java.lang.Iterable<? extends open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour> values) {
          if (contoursBuilder_ == null) {
            ensureContoursIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, contours_);
            onChanged();
          } else {
            contoursBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public Builder clearContours() {
          if (contoursBuilder_ == null) {
            contours_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
            onChanged();
          } else {
            contoursBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public Builder removeContours(int index) {
          if (contoursBuilder_ == null) {
            ensureContoursIsMutable();
            contours_.remove(index);
            onChanged();
          } else {
            contoursBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.Builder getContoursBuilder(
            int index) {
          return getContoursFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContourOrBuilder getContoursOrBuilder(
            int index) {
          if (contoursBuilder_ == null) {
            return contours_.get(index);  } else {
            return contoursBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public java.util.List<? extends open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContourOrBuilder> 
             getContoursOrBuilderList() {
          if (contoursBuilder_ != null) {
            return contoursBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(contours_);
          }
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.Builder addContoursBuilder() {
          return getContoursFieldBuilder().addBuilder(
              open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.getDefaultInstance());
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.Builder addContoursBuilder(
            int index) {
          return getContoursFieldBuilder().addBuilder(
              index, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.getDefaultInstance());
        }
        /**
         * <pre>
         *all closed contours present in this workplane
         * </pre>
         *
         * <code>repeated .open_vector_format.WorkPlane.WorkPlaneMetaData.closedContour contours = 6;</code>
         */
        public java.util.List<open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.Builder> 
             getContoursBuilderList() {
          return getContoursFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.Builder, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContourOrBuilder> 
            getContoursFieldBuilder() {
          if (contoursBuilder_ == null) {
            contoursBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContour.Builder, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.closedContourOrBuilder>(
                    contours_,
                    ((bitField0_ & 0x00000020) != 0),
                    getParentForChildren(),
                    isClean());
            contours_ = null;
          }
          return contoursBuilder_;
        }

        private open_vector_format.OpenVectorFormat.AxisAlignedBox2D bounds_;
        private com.google.protobuf.SingleFieldBuilderV3<
            open_vector_format.OpenVectorFormat.AxisAlignedBox2D, open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder, open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder> boundsBuilder_;
        /**
         * <pre>
         *2D axis aligned bounding box of all the workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
         * @return Whether the bounds field is set.
         */
        public boolean hasBounds() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all the workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
         * @return The bounds.
         */
        public open_vector_format.OpenVectorFormat.AxisAlignedBox2D getBounds() {
          if (boundsBuilder_ == null) {
            return bounds_ == null ? open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance() : bounds_;
          } else {
            return boundsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all the workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
         */
        public Builder setBounds(open_vector_format.OpenVectorFormat.AxisAlignedBox2D value) {
          if (boundsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            bounds_ = value;
          } else {
            boundsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all the workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
         */
        public Builder setBounds(
            open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder builderForValue) {
          if (boundsBuilder_ == null) {
            bounds_ = builderForValue.build();
          } else {
            boundsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all the workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
         */
        public Builder mergeBounds(open_vector_format.OpenVectorFormat.AxisAlignedBox2D value) {
          if (boundsBuilder_ == null) {
            if (((bitField0_ & 0x00000040) != 0) &&
              bounds_ != null &&
              bounds_ != open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance()) {
              getBoundsBuilder().mergeFrom(value);
            } else {
              bounds_ = value;
            }
          } else {
            boundsBuilder_.mergeFrom(value);
          }
          if (bounds_ != null) {
            bitField0_ |= 0x00000040;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all the workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
         */
        public Builder clearBounds() {
          bitField0_ = (bitField0_ & ~0x00000040);
          bounds_ = null;
          if (boundsBuilder_ != null) {
            boundsBuilder_.dispose();
            boundsBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all the workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
         */
        public open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder getBoundsBuilder() {
          bitField0_ |= 0x00000040;
          onChanged();
          return getBoundsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all the workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
         */
        public open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder getBoundsOrBuilder() {
          if (boundsBuilder_ != null) {
            return boundsBuilder_.getMessageOrBuilder();
          } else {
            return bounds_ == null ?
                open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance() : bounds_;
          }
        }
        /**
         * <pre>
         *2D axis aligned bounding box of all the workplanes vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D Bounds = 7;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            open_vector_format.OpenVectorFormat.AxisAlignedBox2D, open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder, open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder> 
            getBoundsFieldBuilder() {
          if (boundsBuilder_ == null) {
            boundsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                open_vector_format.OpenVectorFormat.AxisAlignedBox2D, open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder, open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder>(
                    getBounds(),
                    getParentForChildren(),
                    isClean());
            bounds_ = null;
          }
          return boundsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.WorkPlane.WorkPlaneMetaData)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.WorkPlane.WorkPlaneMetaData)
      private static final open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData();
      }

      public static open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<WorkPlaneMetaData>
          PARSER = new com.google.protobuf.AbstractParser<WorkPlaneMetaData>() {
        @java.lang.Override
        public WorkPlaneMetaData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<WorkPlaneMetaData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<WorkPlaneMetaData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PatchOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.WorkPlane.Patch)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *optional 2D polygon that forms the outer contour (not marked) of this patch
       *if the contour should get executed a separate vector block is used.
       * </pre>
       *
       * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
       * @return Whether the outerContour field is set.
       */
      boolean hasOuterContour();
      /**
       * <pre>
       *optional 2D polygon that forms the outer contour (not marked) of this patch
       *if the contour should get executed a separate vector block is used.
       * </pre>
       *
       * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
       * @return The outerContour.
       */
      open_vector_format.OpenVectorFormat.VectorBlock.LineSequence getOuterContour();
      /**
       * <pre>
       *optional 2D polygon that forms the outer contour (not marked) of this patch
       *if the contour should get executed a separate vector block is used.
       * </pre>
       *
       * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
       */
      open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceOrBuilder getOuterContourOrBuilder();

      /**
       * <pre>
       *local transformation of workpiece coordinate x
       * </pre>
       *
       * <code>float u = 2;</code>
       * @return The u.
       */
      float getU();

      /**
       * <pre>
       *local transformation of workpiece coordinate y
       * </pre>
       *
       * <code>float v = 3;</code>
       * @return The v.
       */
      float getV();

      /**
       * <pre>
       *identifier of actual workpiece layer / stack
       *for single patch processes like powder bed this equals the workPlane number
       * </pre>
       *
       * <code>int32 layer_id = 4;</code>
       * @return The layerId.
       */
      int getLayerId();
    }
    /**
     * <pre>
     *A patch is a subdivision in a workPlane with an own local coordinate system.
     *The local transformation is given by the 2D origin (u/v)
     *Coordinates in the workplane may be tranformed by the machine depending on the patch
     * </pre>
     *
     * Protobuf type {@code open_vector_format.WorkPlane.Patch}
     */
    public static final class Patch extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.WorkPlane.Patch)
        PatchOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Patch.newBuilder() to construct.
      private Patch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Patch() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Patch();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_Patch_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_Patch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.WorkPlane.Patch.class, open_vector_format.OpenVectorFormat.WorkPlane.Patch.Builder.class);
      }

      private int bitField0_;
      public static final int OUTER_CONTOUR_FIELD_NUMBER = 1;
      private open_vector_format.OpenVectorFormat.VectorBlock.LineSequence outerContour_;
      /**
       * <pre>
       *optional 2D polygon that forms the outer contour (not marked) of this patch
       *if the contour should get executed a separate vector block is used.
       * </pre>
       *
       * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
       * @return Whether the outerContour field is set.
       */
      @java.lang.Override
      public boolean hasOuterContour() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *optional 2D polygon that forms the outer contour (not marked) of this patch
       *if the contour should get executed a separate vector block is used.
       * </pre>
       *
       * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
       * @return The outerContour.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence getOuterContour() {
        return outerContour_ == null ? open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.getDefaultInstance() : outerContour_;
      }
      /**
       * <pre>
       *optional 2D polygon that forms the outer contour (not marked) of this patch
       *if the contour should get executed a separate vector block is used.
       * </pre>
       *
       * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceOrBuilder getOuterContourOrBuilder() {
        return outerContour_ == null ? open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.getDefaultInstance() : outerContour_;
      }

      public static final int U_FIELD_NUMBER = 2;
      private float u_ = 0F;
      /**
       * <pre>
       *local transformation of workpiece coordinate x
       * </pre>
       *
       * <code>float u = 2;</code>
       * @return The u.
       */
      @java.lang.Override
      public float getU() {
        return u_;
      }

      public static final int V_FIELD_NUMBER = 3;
      private float v_ = 0F;
      /**
       * <pre>
       *local transformation of workpiece coordinate y
       * </pre>
       *
       * <code>float v = 3;</code>
       * @return The v.
       */
      @java.lang.Override
      public float getV() {
        return v_;
      }

      public static final int LAYER_ID_FIELD_NUMBER = 4;
      private int layerId_ = 0;
      /**
       * <pre>
       *identifier of actual workpiece layer / stack
       *for single patch processes like powder bed this equals the workPlane number
       * </pre>
       *
       * <code>int32 layer_id = 4;</code>
       * @return The layerId.
       */
      @java.lang.Override
      public int getLayerId() {
        return layerId_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(1, getOuterContour());
        }
        if (java.lang.Float.floatToRawIntBits(u_) != 0) {
          output.writeFloat(2, u_);
        }
        if (java.lang.Float.floatToRawIntBits(v_) != 0) {
          output.writeFloat(3, v_);
        }
        if (layerId_ != 0) {
          output.writeInt32(4, layerId_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getOuterContour());
        }
        if (java.lang.Float.floatToRawIntBits(u_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, u_);
        }
        if (java.lang.Float.floatToRawIntBits(v_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, v_);
        }
        if (layerId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, layerId_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.WorkPlane.Patch)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.WorkPlane.Patch other = (open_vector_format.OpenVectorFormat.WorkPlane.Patch) obj;

        if (hasOuterContour() != other.hasOuterContour()) return false;
        if (hasOuterContour()) {
          if (!getOuterContour()
              .equals(other.getOuterContour())) return false;
        }
        if (java.lang.Float.floatToIntBits(getU())
            != java.lang.Float.floatToIntBits(
                other.getU())) return false;
        if (java.lang.Float.floatToIntBits(getV())
            != java.lang.Float.floatToIntBits(
                other.getV())) return false;
        if (getLayerId()
            != other.getLayerId()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasOuterContour()) {
          hash = (37 * hash) + OUTER_CONTOUR_FIELD_NUMBER;
          hash = (53 * hash) + getOuterContour().hashCode();
        }
        hash = (37 * hash) + U_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getU());
        hash = (37 * hash) + V_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getV());
        hash = (37 * hash) + LAYER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLayerId();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.WorkPlane.Patch parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.Patch parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.Patch parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.Patch parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.Patch parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.Patch parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.Patch parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.Patch parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.WorkPlane.Patch parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.WorkPlane.Patch parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.Patch parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.WorkPlane.Patch parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.WorkPlane.Patch prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *A patch is a subdivision in a workPlane with an own local coordinate system.
       *The local transformation is given by the 2D origin (u/v)
       *Coordinates in the workplane may be tranformed by the machine depending on the patch
       * </pre>
       *
       * Protobuf type {@code open_vector_format.WorkPlane.Patch}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.WorkPlane.Patch)
          open_vector_format.OpenVectorFormat.WorkPlane.PatchOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_Patch_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_Patch_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.WorkPlane.Patch.class, open_vector_format.OpenVectorFormat.WorkPlane.Patch.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.WorkPlane.Patch.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getOuterContourFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          outerContour_ = null;
          if (outerContourBuilder_ != null) {
            outerContourBuilder_.dispose();
            outerContourBuilder_ = null;
          }
          u_ = 0F;
          v_ = 0F;
          layerId_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_Patch_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.WorkPlane.Patch getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.WorkPlane.Patch.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.WorkPlane.Patch build() {
          open_vector_format.OpenVectorFormat.WorkPlane.Patch result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.WorkPlane.Patch buildPartial() {
          open_vector_format.OpenVectorFormat.WorkPlane.Patch result = new open_vector_format.OpenVectorFormat.WorkPlane.Patch(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.WorkPlane.Patch result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.outerContour_ = outerContourBuilder_ == null
                ? outerContour_
                : outerContourBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.u_ = u_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.v_ = v_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.layerId_ = layerId_;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.WorkPlane.Patch) {
            return mergeFrom((open_vector_format.OpenVectorFormat.WorkPlane.Patch)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.WorkPlane.Patch other) {
          if (other == open_vector_format.OpenVectorFormat.WorkPlane.Patch.getDefaultInstance()) return this;
          if (other.hasOuterContour()) {
            mergeOuterContour(other.getOuterContour());
          }
          if (other.getU() != 0F) {
            setU(other.getU());
          }
          if (other.getV() != 0F) {
            setV(other.getV());
          }
          if (other.getLayerId() != 0) {
            setLayerId(other.getLayerId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getOuterContourFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 21: {
                  u_ = input.readFloat();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 21
                case 29: {
                  v_ = input.readFloat();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 29
                case 32: {
                  layerId_ = input.readInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private open_vector_format.OpenVectorFormat.VectorBlock.LineSequence outerContour_;
        private com.google.protobuf.SingleFieldBuilderV3<
            open_vector_format.OpenVectorFormat.VectorBlock.LineSequence, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceOrBuilder> outerContourBuilder_;
        /**
         * <pre>
         *optional 2D polygon that forms the outer contour (not marked) of this patch
         *if the contour should get executed a separate vector block is used.
         * </pre>
         *
         * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
         * @return Whether the outerContour field is set.
         */
        public boolean hasOuterContour() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *optional 2D polygon that forms the outer contour (not marked) of this patch
         *if the contour should get executed a separate vector block is used.
         * </pre>
         *
         * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
         * @return The outerContour.
         */
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence getOuterContour() {
          if (outerContourBuilder_ == null) {
            return outerContour_ == null ? open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.getDefaultInstance() : outerContour_;
          } else {
            return outerContourBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         *optional 2D polygon that forms the outer contour (not marked) of this patch
         *if the contour should get executed a separate vector block is used.
         * </pre>
         *
         * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
         */
        public Builder setOuterContour(open_vector_format.OpenVectorFormat.VectorBlock.LineSequence value) {
          if (outerContourBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            outerContour_ = value;
          } else {
            outerContourBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *optional 2D polygon that forms the outer contour (not marked) of this patch
         *if the contour should get executed a separate vector block is used.
         * </pre>
         *
         * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
         */
        public Builder setOuterContour(
            open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.Builder builderForValue) {
          if (outerContourBuilder_ == null) {
            outerContour_ = builderForValue.build();
          } else {
            outerContourBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *optional 2D polygon that forms the outer contour (not marked) of this patch
         *if the contour should get executed a separate vector block is used.
         * </pre>
         *
         * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
         */
        public Builder mergeOuterContour(open_vector_format.OpenVectorFormat.VectorBlock.LineSequence value) {
          if (outerContourBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              outerContour_ != null &&
              outerContour_ != open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.getDefaultInstance()) {
              getOuterContourBuilder().mergeFrom(value);
            } else {
              outerContour_ = value;
            }
          } else {
            outerContourBuilder_.mergeFrom(value);
          }
          if (outerContour_ != null) {
            bitField0_ |= 0x00000001;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         *optional 2D polygon that forms the outer contour (not marked) of this patch
         *if the contour should get executed a separate vector block is used.
         * </pre>
         *
         * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
         */
        public Builder clearOuterContour() {
          bitField0_ = (bitField0_ & ~0x00000001);
          outerContour_ = null;
          if (outerContourBuilder_ != null) {
            outerContourBuilder_.dispose();
            outerContourBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         *optional 2D polygon that forms the outer contour (not marked) of this patch
         *if the contour should get executed a separate vector block is used.
         * </pre>
         *
         * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
         */
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.Builder getOuterContourBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getOuterContourFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         *optional 2D polygon that forms the outer contour (not marked) of this patch
         *if the contour should get executed a separate vector block is used.
         * </pre>
         *
         * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
         */
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceOrBuilder getOuterContourOrBuilder() {
          if (outerContourBuilder_ != null) {
            return outerContourBuilder_.getMessageOrBuilder();
          } else {
            return outerContour_ == null ?
                open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.getDefaultInstance() : outerContour_;
          }
        }
        /**
         * <pre>
         *optional 2D polygon that forms the outer contour (not marked) of this patch
         *if the contour should get executed a separate vector block is used.
         * </pre>
         *
         * <code>.open_vector_format.VectorBlock.LineSequence outer_contour = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            open_vector_format.OpenVectorFormat.VectorBlock.LineSequence, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceOrBuilder> 
            getOuterContourFieldBuilder() {
          if (outerContourBuilder_ == null) {
            outerContourBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                open_vector_format.OpenVectorFormat.VectorBlock.LineSequence, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceOrBuilder>(
                    getOuterContour(),
                    getParentForChildren(),
                    isClean());
            outerContour_ = null;
          }
          return outerContourBuilder_;
        }

        private float u_ ;
        /**
         * <pre>
         *local transformation of workpiece coordinate x
         * </pre>
         *
         * <code>float u = 2;</code>
         * @return The u.
         */
        @java.lang.Override
        public float getU() {
          return u_;
        }
        /**
         * <pre>
         *local transformation of workpiece coordinate x
         * </pre>
         *
         * <code>float u = 2;</code>
         * @param value The u to set.
         * @return This builder for chaining.
         */
        public Builder setU(float value) {

          u_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *local transformation of workpiece coordinate x
         * </pre>
         *
         * <code>float u = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearU() {
          bitField0_ = (bitField0_ & ~0x00000002);
          u_ = 0F;
          onChanged();
          return this;
        }

        private float v_ ;
        /**
         * <pre>
         *local transformation of workpiece coordinate y
         * </pre>
         *
         * <code>float v = 3;</code>
         * @return The v.
         */
        @java.lang.Override
        public float getV() {
          return v_;
        }
        /**
         * <pre>
         *local transformation of workpiece coordinate y
         * </pre>
         *
         * <code>float v = 3;</code>
         * @param value The v to set.
         * @return This builder for chaining.
         */
        public Builder setV(float value) {

          v_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *local transformation of workpiece coordinate y
         * </pre>
         *
         * <code>float v = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearV() {
          bitField0_ = (bitField0_ & ~0x00000004);
          v_ = 0F;
          onChanged();
          return this;
        }

        private int layerId_ ;
        /**
         * <pre>
         *identifier of actual workpiece layer / stack
         *for single patch processes like powder bed this equals the workPlane number
         * </pre>
         *
         * <code>int32 layer_id = 4;</code>
         * @return The layerId.
         */
        @java.lang.Override
        public int getLayerId() {
          return layerId_;
        }
        /**
         * <pre>
         *identifier of actual workpiece layer / stack
         *for single patch processes like powder bed this equals the workPlane number
         * </pre>
         *
         * <code>int32 layer_id = 4;</code>
         * @param value The layerId to set.
         * @return This builder for chaining.
         */
        public Builder setLayerId(int value) {

          layerId_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *identifier of actual workpiece layer / stack
         *for single patch processes like powder bed this equals the workPlane number
         * </pre>
         *
         * <code>int32 layer_id = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearLayerId() {
          bitField0_ = (bitField0_ & ~0x00000008);
          layerId_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.WorkPlane.Patch)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.WorkPlane.Patch)
      private static final open_vector_format.OpenVectorFormat.WorkPlane.Patch DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.WorkPlane.Patch();
      }

      public static open_vector_format.OpenVectorFormat.WorkPlane.Patch getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Patch>
          PARSER = new com.google.protobuf.AbstractParser<Patch>() {
        @java.lang.Override
        public Patch parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Patch> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Patch> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.WorkPlane.Patch getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int VECTOR_BLOCKS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<open_vector_format.OpenVectorFormat.VectorBlock> vectorBlocks_;
    /**
     * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
     */
    @java.lang.Override
    public java.util.List<open_vector_format.OpenVectorFormat.VectorBlock> getVectorBlocksList() {
      return vectorBlocks_;
    }
    /**
     * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends open_vector_format.OpenVectorFormat.VectorBlockOrBuilder> 
        getVectorBlocksOrBuilderList() {
      return vectorBlocks_;
    }
    /**
     * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
     */
    @java.lang.Override
    public int getVectorBlocksCount() {
      return vectorBlocks_.size();
    }
    /**
     * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock getVectorBlocks(int index) {
      return vectorBlocks_.get(index);
    }
    /**
     * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlockOrBuilder getVectorBlocksOrBuilder(
        int index) {
      return vectorBlocks_.get(index);
    }

    public static final int X_POS_IN_MM_FIELD_NUMBER = 2;
    private float xPosInMm_ = 0F;
    /**
     * <pre>
     * Axis positions - can be used for tiling
     * </pre>
     *
     * <code>float x_pos_in_mm = 2;</code>
     * @return The xPosInMm.
     */
    @java.lang.Override
    public float getXPosInMm() {
      return xPosInMm_;
    }

    public static final int Y_POS_IN_MM_FIELD_NUMBER = 3;
    private float yPosInMm_ = 0F;
    /**
     * <code>float y_pos_in_mm = 3;</code>
     * @return The yPosInMm.
     */
    @java.lang.Override
    public float getYPosInMm() {
      return yPosInMm_;
    }

    public static final int Z_POS_IN_MM_FIELD_NUMBER = 4;
    private float zPosInMm_ = 0F;
    /**
     * <pre>
     * for PBF processes bed position
     * </pre>
     *
     * <code>float z_pos_in_mm = 4;</code>
     * @return The zPosInMm.
     */
    @java.lang.Override
    public float getZPosInMm() {
      return zPosInMm_;
    }

    public static final int X_ROT_IN_DEG_FIELD_NUMBER = 5;
    private float xRotInDeg_ = 0F;
    /**
     * <code>float x_rot_in_deg = 5;</code>
     * @return The xRotInDeg.
     */
    @java.lang.Override
    public float getXRotInDeg() {
      return xRotInDeg_;
    }

    public static final int Y_ROT_IN_DEG_FIELD_NUMBER = 6;
    private float yRotInDeg_ = 0F;
    /**
     * <code>float y_rot_in_deg = 6;</code>
     * @return The yRotInDeg.
     */
    @java.lang.Override
    public float getYRotInDeg() {
      return yRotInDeg_;
    }

    public static final int Z_ROT_IN_DEG_FIELD_NUMBER = 7;
    private float zRotInDeg_ = 0F;
    /**
     * <code>float z_rot_in_deg = 7;</code>
     * @return The zRotInDeg.
     */
    @java.lang.Override
    public float getZRotInDeg() {
      return zRotInDeg_;
    }

    public static final int NUM_BLOCKS_FIELD_NUMBER = 8;
    private int numBlocks_ = 0;
    /**
     * <code>int32 num_blocks = 8;</code>
     * @return The numBlocks.
     */
    @java.lang.Override
    public int getNumBlocks() {
      return numBlocks_;
    }

    public static final int REPEATS_FIELD_NUMBER = 9;
    private int repeats_ = 0;
    /**
     * <pre>
     *how many times the WorkPlane will be executed
     *this will execute all vector blocks in order once, then repeat [repeats] times starting with the first block again etc.
     * </pre>
     *
     * <code>uint32 repeats = 9;</code>
     * @return The repeats.
     */
    @java.lang.Override
    public int getRepeats() {
      return repeats_;
    }

    public static final int WORK_PLANE_NUMBER_FIELD_NUMBER = 10;
    private int workPlaneNumber_ = 0;
    /**
     * <pre>
     *reference for syncing or asynchronious execution (keeping correct order)
     * </pre>
     *
     * <code>int32 work_plane_number = 10;</code>
     * @return The workPlaneNumber.
     */
    @java.lang.Override
    public int getWorkPlaneNumber() {
      return workPlaneNumber_;
    }

    public static final int MACHINE_TYPE_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private volatile java.lang.Object machineType_ = "";
    /**
     * <pre>
     *identifier of the machine to prevent type mismatch, has to be verified by the machine controller
     * </pre>
     *
     * <code>string machine_type = 11;</code>
     * @return The machineType.
     */
    @java.lang.Override
    public java.lang.String getMachineType() {
      java.lang.Object ref = machineType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        machineType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *identifier of the machine to prevent type mismatch, has to be verified by the machine controller
     * </pre>
     *
     * <code>string machine_type = 11;</code>
     * @return The bytes for machineType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMachineTypeBytes() {
      java.lang.Object ref = machineType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        machineType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADDITIONAL_AXIS_POSITIONS_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.FloatList additionalAxisPositions_ =
        emptyFloatList();
    /**
     * <pre>
     *goal positions of the axis in order of machine axis number
     * </pre>
     *
     * <code>repeated float additional_axis_positions = 12;</code>
     * @return A list containing the additionalAxisPositions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getAdditionalAxisPositionsList() {
      return additionalAxisPositions_;
    }
    /**
     * <pre>
     *goal positions of the axis in order of machine axis number
     * </pre>
     *
     * <code>repeated float additional_axis_positions = 12;</code>
     * @return The count of additionalAxisPositions.
     */
    public int getAdditionalAxisPositionsCount() {
      return additionalAxisPositions_.size();
    }
    /**
     * <pre>
     *goal positions of the axis in order of machine axis number
     * </pre>
     *
     * <code>repeated float additional_axis_positions = 12;</code>
     * @param index The index of the element to return.
     * @return The additionalAxisPositions at the given index.
     */
    public float getAdditionalAxisPositions(int index) {
      return additionalAxisPositions_.getFloat(index);
    }
    private int additionalAxisPositionsMemoizedSerializedSize = -1;

    public static final int META_DATA_FIELD_NUMBER = 13;
    private open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData metaData_;
    /**
     * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
     * @return Whether the metaData field is set.
     */
    @java.lang.Override
    public boolean hasMetaData() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
     * @return The metaData.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData getMetaData() {
      return metaData_ == null ? open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.getDefaultInstance() : metaData_;
    }
    /**
     * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaDataOrBuilder getMetaDataOrBuilder() {
      return metaData_ == null ? open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.getDefaultInstance() : metaData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < vectorBlocks_.size(); i++) {
        output.writeMessage(1, vectorBlocks_.get(i));
      }
      if (java.lang.Float.floatToRawIntBits(xPosInMm_) != 0) {
        output.writeFloat(2, xPosInMm_);
      }
      if (java.lang.Float.floatToRawIntBits(yPosInMm_) != 0) {
        output.writeFloat(3, yPosInMm_);
      }
      if (java.lang.Float.floatToRawIntBits(zPosInMm_) != 0) {
        output.writeFloat(4, zPosInMm_);
      }
      if (java.lang.Float.floatToRawIntBits(xRotInDeg_) != 0) {
        output.writeFloat(5, xRotInDeg_);
      }
      if (java.lang.Float.floatToRawIntBits(yRotInDeg_) != 0) {
        output.writeFloat(6, yRotInDeg_);
      }
      if (java.lang.Float.floatToRawIntBits(zRotInDeg_) != 0) {
        output.writeFloat(7, zRotInDeg_);
      }
      if (numBlocks_ != 0) {
        output.writeInt32(8, numBlocks_);
      }
      if (repeats_ != 0) {
        output.writeUInt32(9, repeats_);
      }
      if (workPlaneNumber_ != 0) {
        output.writeInt32(10, workPlaneNumber_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(machineType_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, machineType_);
      }
      if (getAdditionalAxisPositionsList().size() > 0) {
        output.writeUInt32NoTag(98);
        output.writeUInt32NoTag(additionalAxisPositionsMemoizedSerializedSize);
      }
      for (int i = 0; i < additionalAxisPositions_.size(); i++) {
        output.writeFloatNoTag(additionalAxisPositions_.getFloat(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(13, getMetaData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < vectorBlocks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, vectorBlocks_.get(i));
      }
      if (java.lang.Float.floatToRawIntBits(xPosInMm_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, xPosInMm_);
      }
      if (java.lang.Float.floatToRawIntBits(yPosInMm_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, yPosInMm_);
      }
      if (java.lang.Float.floatToRawIntBits(zPosInMm_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, zPosInMm_);
      }
      if (java.lang.Float.floatToRawIntBits(xRotInDeg_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, xRotInDeg_);
      }
      if (java.lang.Float.floatToRawIntBits(yRotInDeg_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, yRotInDeg_);
      }
      if (java.lang.Float.floatToRawIntBits(zRotInDeg_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, zRotInDeg_);
      }
      if (numBlocks_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, numBlocks_);
      }
      if (repeats_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, repeats_);
      }
      if (workPlaneNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, workPlaneNumber_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(machineType_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, machineType_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getAdditionalAxisPositionsList().size();
        size += dataSize;
        if (!getAdditionalAxisPositionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        additionalAxisPositionsMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getMetaData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof open_vector_format.OpenVectorFormat.WorkPlane)) {
        return super.equals(obj);
      }
      open_vector_format.OpenVectorFormat.WorkPlane other = (open_vector_format.OpenVectorFormat.WorkPlane) obj;

      if (!getVectorBlocksList()
          .equals(other.getVectorBlocksList())) return false;
      if (java.lang.Float.floatToIntBits(getXPosInMm())
          != java.lang.Float.floatToIntBits(
              other.getXPosInMm())) return false;
      if (java.lang.Float.floatToIntBits(getYPosInMm())
          != java.lang.Float.floatToIntBits(
              other.getYPosInMm())) return false;
      if (java.lang.Float.floatToIntBits(getZPosInMm())
          != java.lang.Float.floatToIntBits(
              other.getZPosInMm())) return false;
      if (java.lang.Float.floatToIntBits(getXRotInDeg())
          != java.lang.Float.floatToIntBits(
              other.getXRotInDeg())) return false;
      if (java.lang.Float.floatToIntBits(getYRotInDeg())
          != java.lang.Float.floatToIntBits(
              other.getYRotInDeg())) return false;
      if (java.lang.Float.floatToIntBits(getZRotInDeg())
          != java.lang.Float.floatToIntBits(
              other.getZRotInDeg())) return false;
      if (getNumBlocks()
          != other.getNumBlocks()) return false;
      if (getRepeats()
          != other.getRepeats()) return false;
      if (getWorkPlaneNumber()
          != other.getWorkPlaneNumber()) return false;
      if (!getMachineType()
          .equals(other.getMachineType())) return false;
      if (!getAdditionalAxisPositionsList()
          .equals(other.getAdditionalAxisPositionsList())) return false;
      if (hasMetaData() != other.hasMetaData()) return false;
      if (hasMetaData()) {
        if (!getMetaData()
            .equals(other.getMetaData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVectorBlocksCount() > 0) {
        hash = (37 * hash) + VECTOR_BLOCKS_FIELD_NUMBER;
        hash = (53 * hash) + getVectorBlocksList().hashCode();
      }
      hash = (37 * hash) + X_POS_IN_MM_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getXPosInMm());
      hash = (37 * hash) + Y_POS_IN_MM_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getYPosInMm());
      hash = (37 * hash) + Z_POS_IN_MM_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getZPosInMm());
      hash = (37 * hash) + X_ROT_IN_DEG_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getXRotInDeg());
      hash = (37 * hash) + Y_ROT_IN_DEG_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getYRotInDeg());
      hash = (37 * hash) + Z_ROT_IN_DEG_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getZRotInDeg());
      hash = (37 * hash) + NUM_BLOCKS_FIELD_NUMBER;
      hash = (53 * hash) + getNumBlocks();
      hash = (37 * hash) + REPEATS_FIELD_NUMBER;
      hash = (53 * hash) + getRepeats();
      hash = (37 * hash) + WORK_PLANE_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getWorkPlaneNumber();
      hash = (37 * hash) + MACHINE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getMachineType().hashCode();
      if (getAdditionalAxisPositionsCount() > 0) {
        hash = (37 * hash) + ADDITIONAL_AXIS_POSITIONS_FIELD_NUMBER;
        hash = (53 * hash) + getAdditionalAxisPositionsList().hashCode();
      }
      if (hasMetaData()) {
        hash = (37 * hash) + META_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetaData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static open_vector_format.OpenVectorFormat.WorkPlane parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.WorkPlane parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.WorkPlane parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.WorkPlane parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.WorkPlane parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.WorkPlane parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.WorkPlane parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.WorkPlane parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static open_vector_format.OpenVectorFormat.WorkPlane parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static open_vector_format.OpenVectorFormat.WorkPlane parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.WorkPlane parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.WorkPlane parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(open_vector_format.OpenVectorFormat.WorkPlane prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *A WorkingPlane is a 2D working plane of the tool (e.g. laser scanfield, electron beam scan field)
     *in the global 3D coordinate system that is set by moving one or more physical axis relative to the workpiece.
     *It follows the same concept as a sketch plane in CAD applications.
     *Any axis movement that changes the work plane position will require a new WorkingPlane message.
     *synonyms: Layer (LPBF) / 3DPatches (Structuring) / Scanfields (MultiBeam)
     * </pre>
     *
     * Protobuf type {@code open_vector_format.WorkPlane}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:open_vector_format.WorkPlane)
        open_vector_format.OpenVectorFormat.WorkPlaneOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.WorkPlane.class, open_vector_format.OpenVectorFormat.WorkPlane.Builder.class);
      }

      // Construct using open_vector_format.OpenVectorFormat.WorkPlane.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVectorBlocksFieldBuilder();
          getMetaDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (vectorBlocksBuilder_ == null) {
          vectorBlocks_ = java.util.Collections.emptyList();
        } else {
          vectorBlocks_ = null;
          vectorBlocksBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        xPosInMm_ = 0F;
        yPosInMm_ = 0F;
        zPosInMm_ = 0F;
        xRotInDeg_ = 0F;
        yRotInDeg_ = 0F;
        zRotInDeg_ = 0F;
        numBlocks_ = 0;
        repeats_ = 0;
        workPlaneNumber_ = 0;
        machineType_ = "";
        additionalAxisPositions_ = emptyFloatList();
        metaData_ = null;
        if (metaDataBuilder_ != null) {
          metaDataBuilder_.dispose();
          metaDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_WorkPlane_descriptor;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.WorkPlane getDefaultInstanceForType() {
        return open_vector_format.OpenVectorFormat.WorkPlane.getDefaultInstance();
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.WorkPlane build() {
        open_vector_format.OpenVectorFormat.WorkPlane result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.WorkPlane buildPartial() {
        open_vector_format.OpenVectorFormat.WorkPlane result = new open_vector_format.OpenVectorFormat.WorkPlane(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(open_vector_format.OpenVectorFormat.WorkPlane result) {
        if (vectorBlocksBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            vectorBlocks_ = java.util.Collections.unmodifiableList(vectorBlocks_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.vectorBlocks_ = vectorBlocks_;
        } else {
          result.vectorBlocks_ = vectorBlocksBuilder_.build();
        }
      }

      private void buildPartial0(open_vector_format.OpenVectorFormat.WorkPlane result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.xPosInMm_ = xPosInMm_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.yPosInMm_ = yPosInMm_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.zPosInMm_ = zPosInMm_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.xRotInDeg_ = xRotInDeg_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.yRotInDeg_ = yRotInDeg_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.zRotInDeg_ = zRotInDeg_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.numBlocks_ = numBlocks_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.repeats_ = repeats_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.workPlaneNumber_ = workPlaneNumber_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.machineType_ = machineType_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          additionalAxisPositions_.makeImmutable();
          result.additionalAxisPositions_ = additionalAxisPositions_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.metaData_ = metaDataBuilder_ == null
              ? metaData_
              : metaDataBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof open_vector_format.OpenVectorFormat.WorkPlane) {
          return mergeFrom((open_vector_format.OpenVectorFormat.WorkPlane)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(open_vector_format.OpenVectorFormat.WorkPlane other) {
        if (other == open_vector_format.OpenVectorFormat.WorkPlane.getDefaultInstance()) return this;
        if (vectorBlocksBuilder_ == null) {
          if (!other.vectorBlocks_.isEmpty()) {
            if (vectorBlocks_.isEmpty()) {
              vectorBlocks_ = other.vectorBlocks_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVectorBlocksIsMutable();
              vectorBlocks_.addAll(other.vectorBlocks_);
            }
            onChanged();
          }
        } else {
          if (!other.vectorBlocks_.isEmpty()) {
            if (vectorBlocksBuilder_.isEmpty()) {
              vectorBlocksBuilder_.dispose();
              vectorBlocksBuilder_ = null;
              vectorBlocks_ = other.vectorBlocks_;
              bitField0_ = (bitField0_ & ~0x00000001);
              vectorBlocksBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVectorBlocksFieldBuilder() : null;
            } else {
              vectorBlocksBuilder_.addAllMessages(other.vectorBlocks_);
            }
          }
        }
        if (other.getXPosInMm() != 0F) {
          setXPosInMm(other.getXPosInMm());
        }
        if (other.getYPosInMm() != 0F) {
          setYPosInMm(other.getYPosInMm());
        }
        if (other.getZPosInMm() != 0F) {
          setZPosInMm(other.getZPosInMm());
        }
        if (other.getXRotInDeg() != 0F) {
          setXRotInDeg(other.getXRotInDeg());
        }
        if (other.getYRotInDeg() != 0F) {
          setYRotInDeg(other.getYRotInDeg());
        }
        if (other.getZRotInDeg() != 0F) {
          setZRotInDeg(other.getZRotInDeg());
        }
        if (other.getNumBlocks() != 0) {
          setNumBlocks(other.getNumBlocks());
        }
        if (other.getRepeats() != 0) {
          setRepeats(other.getRepeats());
        }
        if (other.getWorkPlaneNumber() != 0) {
          setWorkPlaneNumber(other.getWorkPlaneNumber());
        }
        if (!other.getMachineType().isEmpty()) {
          machineType_ = other.machineType_;
          bitField0_ |= 0x00000400;
          onChanged();
        }
        if (!other.additionalAxisPositions_.isEmpty()) {
          if (additionalAxisPositions_.isEmpty()) {
            additionalAxisPositions_ = other.additionalAxisPositions_;
            additionalAxisPositions_.makeImmutable();
            bitField0_ |= 0x00000800;
          } else {
            ensureAdditionalAxisPositionsIsMutable();
            additionalAxisPositions_.addAll(other.additionalAxisPositions_);
          }
          onChanged();
        }
        if (other.hasMetaData()) {
          mergeMetaData(other.getMetaData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                open_vector_format.OpenVectorFormat.VectorBlock m =
                    input.readMessage(
                        open_vector_format.OpenVectorFormat.VectorBlock.parser(),
                        extensionRegistry);
                if (vectorBlocksBuilder_ == null) {
                  ensureVectorBlocksIsMutable();
                  vectorBlocks_.add(m);
                } else {
                  vectorBlocksBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 21: {
                xPosInMm_ = input.readFloat();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              case 29: {
                yPosInMm_ = input.readFloat();
                bitField0_ |= 0x00000004;
                break;
              } // case 29
              case 37: {
                zPosInMm_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              case 45: {
                xRotInDeg_ = input.readFloat();
                bitField0_ |= 0x00000010;
                break;
              } // case 45
              case 53: {
                yRotInDeg_ = input.readFloat();
                bitField0_ |= 0x00000020;
                break;
              } // case 53
              case 61: {
                zRotInDeg_ = input.readFloat();
                bitField0_ |= 0x00000040;
                break;
              } // case 61
              case 64: {
                numBlocks_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                repeats_ = input.readUInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                workPlaneNumber_ = input.readInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 90: {
                machineType_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000400;
                break;
              } // case 90
              case 101: {
                float v = input.readFloat();
                ensureAdditionalAxisPositionsIsMutable();
                additionalAxisPositions_.addFloat(v);
                break;
              } // case 101
              case 98: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureAdditionalAxisPositionsIsMutable(alloc / 4);
                while (input.getBytesUntilLimit() > 0) {
                  additionalAxisPositions_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              } // case 98
              case 106: {
                input.readMessage(
                    getMetaDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00001000;
                break;
              } // case 106
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<open_vector_format.OpenVectorFormat.VectorBlock> vectorBlocks_ =
        java.util.Collections.emptyList();
      private void ensureVectorBlocksIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          vectorBlocks_ = new java.util.ArrayList<open_vector_format.OpenVectorFormat.VectorBlock>(vectorBlocks_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock, open_vector_format.OpenVectorFormat.VectorBlock.Builder, open_vector_format.OpenVectorFormat.VectorBlockOrBuilder> vectorBlocksBuilder_;

      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public java.util.List<open_vector_format.OpenVectorFormat.VectorBlock> getVectorBlocksList() {
        if (vectorBlocksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vectorBlocks_);
        } else {
          return vectorBlocksBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public int getVectorBlocksCount() {
        if (vectorBlocksBuilder_ == null) {
          return vectorBlocks_.size();
        } else {
          return vectorBlocksBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock getVectorBlocks(int index) {
        if (vectorBlocksBuilder_ == null) {
          return vectorBlocks_.get(index);
        } else {
          return vectorBlocksBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public Builder setVectorBlocks(
          int index, open_vector_format.OpenVectorFormat.VectorBlock value) {
        if (vectorBlocksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorBlocksIsMutable();
          vectorBlocks_.set(index, value);
          onChanged();
        } else {
          vectorBlocksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public Builder setVectorBlocks(
          int index, open_vector_format.OpenVectorFormat.VectorBlock.Builder builderForValue) {
        if (vectorBlocksBuilder_ == null) {
          ensureVectorBlocksIsMutable();
          vectorBlocks_.set(index, builderForValue.build());
          onChanged();
        } else {
          vectorBlocksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public Builder addVectorBlocks(open_vector_format.OpenVectorFormat.VectorBlock value) {
        if (vectorBlocksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorBlocksIsMutable();
          vectorBlocks_.add(value);
          onChanged();
        } else {
          vectorBlocksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public Builder addVectorBlocks(
          int index, open_vector_format.OpenVectorFormat.VectorBlock value) {
        if (vectorBlocksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorBlocksIsMutable();
          vectorBlocks_.add(index, value);
          onChanged();
        } else {
          vectorBlocksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public Builder addVectorBlocks(
          open_vector_format.OpenVectorFormat.VectorBlock.Builder builderForValue) {
        if (vectorBlocksBuilder_ == null) {
          ensureVectorBlocksIsMutable();
          vectorBlocks_.add(builderForValue.build());
          onChanged();
        } else {
          vectorBlocksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public Builder addVectorBlocks(
          int index, open_vector_format.OpenVectorFormat.VectorBlock.Builder builderForValue) {
        if (vectorBlocksBuilder_ == null) {
          ensureVectorBlocksIsMutable();
          vectorBlocks_.add(index, builderForValue.build());
          onChanged();
        } else {
          vectorBlocksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public Builder addAllVectorBlocks(
          java.lang.Iterable<? extends open_vector_format.OpenVectorFormat.VectorBlock> values) {
        if (vectorBlocksBuilder_ == null) {
          ensureVectorBlocksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, vectorBlocks_);
          onChanged();
        } else {
          vectorBlocksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public Builder clearVectorBlocks() {
        if (vectorBlocksBuilder_ == null) {
          vectorBlocks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          vectorBlocksBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public Builder removeVectorBlocks(int index) {
        if (vectorBlocksBuilder_ == null) {
          ensureVectorBlocksIsMutable();
          vectorBlocks_.remove(index);
          onChanged();
        } else {
          vectorBlocksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.Builder getVectorBlocksBuilder(
          int index) {
        return getVectorBlocksFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlockOrBuilder getVectorBlocksOrBuilder(
          int index) {
        if (vectorBlocksBuilder_ == null) {
          return vectorBlocks_.get(index);  } else {
          return vectorBlocksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public java.util.List<? extends open_vector_format.OpenVectorFormat.VectorBlockOrBuilder> 
           getVectorBlocksOrBuilderList() {
        if (vectorBlocksBuilder_ != null) {
          return vectorBlocksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vectorBlocks_);
        }
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.Builder addVectorBlocksBuilder() {
        return getVectorBlocksFieldBuilder().addBuilder(
            open_vector_format.OpenVectorFormat.VectorBlock.getDefaultInstance());
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.Builder addVectorBlocksBuilder(
          int index) {
        return getVectorBlocksFieldBuilder().addBuilder(
            index, open_vector_format.OpenVectorFormat.VectorBlock.getDefaultInstance());
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock vector_blocks = 1;</code>
       */
      public java.util.List<open_vector_format.OpenVectorFormat.VectorBlock.Builder> 
           getVectorBlocksBuilderList() {
        return getVectorBlocksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock, open_vector_format.OpenVectorFormat.VectorBlock.Builder, open_vector_format.OpenVectorFormat.VectorBlockOrBuilder> 
          getVectorBlocksFieldBuilder() {
        if (vectorBlocksBuilder_ == null) {
          vectorBlocksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock, open_vector_format.OpenVectorFormat.VectorBlock.Builder, open_vector_format.OpenVectorFormat.VectorBlockOrBuilder>(
                  vectorBlocks_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          vectorBlocks_ = null;
        }
        return vectorBlocksBuilder_;
      }

      private float xPosInMm_ ;
      /**
       * <pre>
       * Axis positions - can be used for tiling
       * </pre>
       *
       * <code>float x_pos_in_mm = 2;</code>
       * @return The xPosInMm.
       */
      @java.lang.Override
      public float getXPosInMm() {
        return xPosInMm_;
      }
      /**
       * <pre>
       * Axis positions - can be used for tiling
       * </pre>
       *
       * <code>float x_pos_in_mm = 2;</code>
       * @param value The xPosInMm to set.
       * @return This builder for chaining.
       */
      public Builder setXPosInMm(float value) {

        xPosInMm_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Axis positions - can be used for tiling
       * </pre>
       *
       * <code>float x_pos_in_mm = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearXPosInMm() {
        bitField0_ = (bitField0_ & ~0x00000002);
        xPosInMm_ = 0F;
        onChanged();
        return this;
      }

      private float yPosInMm_ ;
      /**
       * <code>float y_pos_in_mm = 3;</code>
       * @return The yPosInMm.
       */
      @java.lang.Override
      public float getYPosInMm() {
        return yPosInMm_;
      }
      /**
       * <code>float y_pos_in_mm = 3;</code>
       * @param value The yPosInMm to set.
       * @return This builder for chaining.
       */
      public Builder setYPosInMm(float value) {

        yPosInMm_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>float y_pos_in_mm = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearYPosInMm() {
        bitField0_ = (bitField0_ & ~0x00000004);
        yPosInMm_ = 0F;
        onChanged();
        return this;
      }

      private float zPosInMm_ ;
      /**
       * <pre>
       * for PBF processes bed position
       * </pre>
       *
       * <code>float z_pos_in_mm = 4;</code>
       * @return The zPosInMm.
       */
      @java.lang.Override
      public float getZPosInMm() {
        return zPosInMm_;
      }
      /**
       * <pre>
       * for PBF processes bed position
       * </pre>
       *
       * <code>float z_pos_in_mm = 4;</code>
       * @param value The zPosInMm to set.
       * @return This builder for chaining.
       */
      public Builder setZPosInMm(float value) {

        zPosInMm_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * for PBF processes bed position
       * </pre>
       *
       * <code>float z_pos_in_mm = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearZPosInMm() {
        bitField0_ = (bitField0_ & ~0x00000008);
        zPosInMm_ = 0F;
        onChanged();
        return this;
      }

      private float xRotInDeg_ ;
      /**
       * <code>float x_rot_in_deg = 5;</code>
       * @return The xRotInDeg.
       */
      @java.lang.Override
      public float getXRotInDeg() {
        return xRotInDeg_;
      }
      /**
       * <code>float x_rot_in_deg = 5;</code>
       * @param value The xRotInDeg to set.
       * @return This builder for chaining.
       */
      public Builder setXRotInDeg(float value) {

        xRotInDeg_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>float x_rot_in_deg = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearXRotInDeg() {
        bitField0_ = (bitField0_ & ~0x00000010);
        xRotInDeg_ = 0F;
        onChanged();
        return this;
      }

      private float yRotInDeg_ ;
      /**
       * <code>float y_rot_in_deg = 6;</code>
       * @return The yRotInDeg.
       */
      @java.lang.Override
      public float getYRotInDeg() {
        return yRotInDeg_;
      }
      /**
       * <code>float y_rot_in_deg = 6;</code>
       * @param value The yRotInDeg to set.
       * @return This builder for chaining.
       */
      public Builder setYRotInDeg(float value) {

        yRotInDeg_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>float y_rot_in_deg = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearYRotInDeg() {
        bitField0_ = (bitField0_ & ~0x00000020);
        yRotInDeg_ = 0F;
        onChanged();
        return this;
      }

      private float zRotInDeg_ ;
      /**
       * <code>float z_rot_in_deg = 7;</code>
       * @return The zRotInDeg.
       */
      @java.lang.Override
      public float getZRotInDeg() {
        return zRotInDeg_;
      }
      /**
       * <code>float z_rot_in_deg = 7;</code>
       * @param value The zRotInDeg to set.
       * @return This builder for chaining.
       */
      public Builder setZRotInDeg(float value) {

        zRotInDeg_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>float z_rot_in_deg = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearZRotInDeg() {
        bitField0_ = (bitField0_ & ~0x00000040);
        zRotInDeg_ = 0F;
        onChanged();
        return this;
      }

      private int numBlocks_ ;
      /**
       * <code>int32 num_blocks = 8;</code>
       * @return The numBlocks.
       */
      @java.lang.Override
      public int getNumBlocks() {
        return numBlocks_;
      }
      /**
       * <code>int32 num_blocks = 8;</code>
       * @param value The numBlocks to set.
       * @return This builder for chaining.
       */
      public Builder setNumBlocks(int value) {

        numBlocks_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>int32 num_blocks = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumBlocks() {
        bitField0_ = (bitField0_ & ~0x00000080);
        numBlocks_ = 0;
        onChanged();
        return this;
      }

      private int repeats_ ;
      /**
       * <pre>
       *how many times the WorkPlane will be executed
       *this will execute all vector blocks in order once, then repeat [repeats] times starting with the first block again etc.
       * </pre>
       *
       * <code>uint32 repeats = 9;</code>
       * @return The repeats.
       */
      @java.lang.Override
      public int getRepeats() {
        return repeats_;
      }
      /**
       * <pre>
       *how many times the WorkPlane will be executed
       *this will execute all vector blocks in order once, then repeat [repeats] times starting with the first block again etc.
       * </pre>
       *
       * <code>uint32 repeats = 9;</code>
       * @param value The repeats to set.
       * @return This builder for chaining.
       */
      public Builder setRepeats(int value) {

        repeats_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *how many times the WorkPlane will be executed
       *this will execute all vector blocks in order once, then repeat [repeats] times starting with the first block again etc.
       * </pre>
       *
       * <code>uint32 repeats = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearRepeats() {
        bitField0_ = (bitField0_ & ~0x00000100);
        repeats_ = 0;
        onChanged();
        return this;
      }

      private int workPlaneNumber_ ;
      /**
       * <pre>
       *reference for syncing or asynchronious execution (keeping correct order)
       * </pre>
       *
       * <code>int32 work_plane_number = 10;</code>
       * @return The workPlaneNumber.
       */
      @java.lang.Override
      public int getWorkPlaneNumber() {
        return workPlaneNumber_;
      }
      /**
       * <pre>
       *reference for syncing or asynchronious execution (keeping correct order)
       * </pre>
       *
       * <code>int32 work_plane_number = 10;</code>
       * @param value The workPlaneNumber to set.
       * @return This builder for chaining.
       */
      public Builder setWorkPlaneNumber(int value) {

        workPlaneNumber_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *reference for syncing or asynchronious execution (keeping correct order)
       * </pre>
       *
       * <code>int32 work_plane_number = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearWorkPlaneNumber() {
        bitField0_ = (bitField0_ & ~0x00000200);
        workPlaneNumber_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object machineType_ = "";
      /**
       * <pre>
       *identifier of the machine to prevent type mismatch, has to be verified by the machine controller
       * </pre>
       *
       * <code>string machine_type = 11;</code>
       * @return The machineType.
       */
      public java.lang.String getMachineType() {
        java.lang.Object ref = machineType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          machineType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *identifier of the machine to prevent type mismatch, has to be verified by the machine controller
       * </pre>
       *
       * <code>string machine_type = 11;</code>
       * @return The bytes for machineType.
       */
      public com.google.protobuf.ByteString
          getMachineTypeBytes() {
        java.lang.Object ref = machineType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          machineType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *identifier of the machine to prevent type mismatch, has to be verified by the machine controller
       * </pre>
       *
       * <code>string machine_type = 11;</code>
       * @param value The machineType to set.
       * @return This builder for chaining.
       */
      public Builder setMachineType(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        machineType_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *identifier of the machine to prevent type mismatch, has to be verified by the machine controller
       * </pre>
       *
       * <code>string machine_type = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearMachineType() {
        machineType_ = getDefaultInstance().getMachineType();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *identifier of the machine to prevent type mismatch, has to be verified by the machine controller
       * </pre>
       *
       * <code>string machine_type = 11;</code>
       * @param value The bytes for machineType to set.
       * @return This builder for chaining.
       */
      public Builder setMachineTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        machineType_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList additionalAxisPositions_ = emptyFloatList();
      private void ensureAdditionalAxisPositionsIsMutable() {
        if (!additionalAxisPositions_.isModifiable()) {
          additionalAxisPositions_ = makeMutableCopy(additionalAxisPositions_);
        }
        bitField0_ |= 0x00000800;
      }
      private void ensureAdditionalAxisPositionsIsMutable(int capacity) {
        if (!additionalAxisPositions_.isModifiable()) {
          additionalAxisPositions_ = makeMutableCopy(additionalAxisPositions_, capacity);
        }
        bitField0_ |= 0x00000800;
      }
      /**
       * <pre>
       *goal positions of the axis in order of machine axis number
       * </pre>
       *
       * <code>repeated float additional_axis_positions = 12;</code>
       * @return A list containing the additionalAxisPositions.
       */
      public java.util.List<java.lang.Float>
          getAdditionalAxisPositionsList() {
        additionalAxisPositions_.makeImmutable();
        return additionalAxisPositions_;
      }
      /**
       * <pre>
       *goal positions of the axis in order of machine axis number
       * </pre>
       *
       * <code>repeated float additional_axis_positions = 12;</code>
       * @return The count of additionalAxisPositions.
       */
      public int getAdditionalAxisPositionsCount() {
        return additionalAxisPositions_.size();
      }
      /**
       * <pre>
       *goal positions of the axis in order of machine axis number
       * </pre>
       *
       * <code>repeated float additional_axis_positions = 12;</code>
       * @param index The index of the element to return.
       * @return The additionalAxisPositions at the given index.
       */
      public float getAdditionalAxisPositions(int index) {
        return additionalAxisPositions_.getFloat(index);
      }
      /**
       * <pre>
       *goal positions of the axis in order of machine axis number
       * </pre>
       *
       * <code>repeated float additional_axis_positions = 12;</code>
       * @param index The index to set the value at.
       * @param value The additionalAxisPositions to set.
       * @return This builder for chaining.
       */
      public Builder setAdditionalAxisPositions(
          int index, float value) {

        ensureAdditionalAxisPositionsIsMutable();
        additionalAxisPositions_.setFloat(index, value);
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *goal positions of the axis in order of machine axis number
       * </pre>
       *
       * <code>repeated float additional_axis_positions = 12;</code>
       * @param value The additionalAxisPositions to add.
       * @return This builder for chaining.
       */
      public Builder addAdditionalAxisPositions(float value) {

        ensureAdditionalAxisPositionsIsMutable();
        additionalAxisPositions_.addFloat(value);
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *goal positions of the axis in order of machine axis number
       * </pre>
       *
       * <code>repeated float additional_axis_positions = 12;</code>
       * @param values The additionalAxisPositions to add.
       * @return This builder for chaining.
       */
      public Builder addAllAdditionalAxisPositions(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureAdditionalAxisPositionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, additionalAxisPositions_);
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *goal positions of the axis in order of machine axis number
       * </pre>
       *
       * <code>repeated float additional_axis_positions = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearAdditionalAxisPositions() {
        additionalAxisPositions_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData metaData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.Builder, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaDataOrBuilder> metaDataBuilder_;
      /**
       * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
       * @return Whether the metaData field is set.
       */
      public boolean hasMetaData() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
       * @return The metaData.
       */
      public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData getMetaData() {
        if (metaDataBuilder_ == null) {
          return metaData_ == null ? open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.getDefaultInstance() : metaData_;
        } else {
          return metaDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
       */
      public Builder setMetaData(open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metaData_ = value;
        } else {
          metaDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
       */
      public Builder setMetaData(
          open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          metaData_ = builderForValue.build();
        } else {
          metaDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
       */
      public Builder mergeMetaData(open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData value) {
        if (metaDataBuilder_ == null) {
          if (((bitField0_ & 0x00001000) != 0) &&
            metaData_ != null &&
            metaData_ != open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.getDefaultInstance()) {
            getMetaDataBuilder().mergeFrom(value);
          } else {
            metaData_ = value;
          }
        } else {
          metaDataBuilder_.mergeFrom(value);
        }
        if (metaData_ != null) {
          bitField0_ |= 0x00001000;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
       */
      public Builder clearMetaData() {
        bitField0_ = (bitField0_ & ~0x00001000);
        metaData_ = null;
        if (metaDataBuilder_ != null) {
          metaDataBuilder_.dispose();
          metaDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
       */
      public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.Builder getMetaDataBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getMetaDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
       */
      public open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaDataOrBuilder getMetaDataOrBuilder() {
        if (metaDataBuilder_ != null) {
          return metaDataBuilder_.getMessageOrBuilder();
        } else {
          return metaData_ == null ?
              open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.getDefaultInstance() : metaData_;
        }
      }
      /**
       * <code>.open_vector_format.WorkPlane.WorkPlaneMetaData meta_data = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.Builder, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaDataOrBuilder> 
          getMetaDataFieldBuilder() {
        if (metaDataBuilder_ == null) {
          metaDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaData.Builder, open_vector_format.OpenVectorFormat.WorkPlane.WorkPlaneMetaDataOrBuilder>(
                  getMetaData(),
                  getParentForChildren(),
                  isClean());
          metaData_ = null;
        }
        return metaDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:open_vector_format.WorkPlane)
    }

    // @@protoc_insertion_point(class_scope:open_vector_format.WorkPlane)
    private static final open_vector_format.OpenVectorFormat.WorkPlane DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.WorkPlane();
    }

    public static open_vector_format.OpenVectorFormat.WorkPlane getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WorkPlane>
        PARSER = new com.google.protobuf.AbstractParser<WorkPlane>() {
      @java.lang.Override
      public WorkPlane parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<WorkPlane> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WorkPlane> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public open_vector_format.OpenVectorFormat.WorkPlane getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VectorBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
     * @return Whether the lineSequence field is set.
     */
    boolean hasLineSequence();
    /**
     * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
     * @return The lineSequence.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.LineSequence getLineSequence();
    /**
     * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceOrBuilder getLineSequenceOrBuilder();

    /**
     * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
     * @return Whether the hatches field is set.
     */
    boolean hasHatches();
    /**
     * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
     * @return The hatches.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.Hatches getHatches();
    /**
     * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.HatchesOrBuilder getHatchesOrBuilder();

    /**
     * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
     * @return Whether the pointSequence field is set.
     */
    boolean hasPointSequence();
    /**
     * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
     * @return The pointSequence.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.PointSequence getPointSequence();
    /**
     * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.PointSequenceOrBuilder getPointSequenceOrBuilder();

    /**
     * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
     * @return Whether the arcs field is set.
     */
    boolean hasArcs();
    /**
     * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
     * @return The arcs.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.Arcs getArcs();
    /**
     * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.ArcsOrBuilder getArcsOrBuilder();

    /**
     * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
     * @return Whether the ellipses field is set.
     */
    boolean hasEllipses();
    /**
     * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
     * @return The ellipses.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.Ellipses getEllipses();
    /**
     * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.EllipsesOrBuilder getEllipsesOrBuilder();

    /**
     * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
     * @return Whether the lineSequence3d field is set.
     */
    boolean hasLineSequence3D();
    /**
     * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
     * @return The lineSequence3d.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D getLineSequence3D();
    /**
     * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3DOrBuilder getLineSequence3DOrBuilder();

    /**
     * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
     * @return Whether the hatches3d field is set.
     */
    boolean hasHatches3D();
    /**
     * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
     * @return The hatches3d.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D getHatches3D();
    /**
     * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.Hatches3DOrBuilder getHatches3DOrBuilder();

    /**
     * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
     * @return Whether the pointSequence3d field is set.
     */
    boolean hasPointSequence3D();
    /**
     * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
     * @return The pointSequence3d.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D getPointSequence3D();
    /**
     * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3DOrBuilder getPointSequence3DOrBuilder();

    /**
     * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
     * @return Whether the arcs3d field is set.
     */
    boolean hasArcs3D();
    /**
     * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
     * @return The arcs3d.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D getArcs3D();
    /**
     * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.Arcs3DOrBuilder getArcs3DOrBuilder();

    /**
     * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
     * @return Whether the exposurePause field is set.
     */
    boolean hasExposurePause();
    /**
     * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
     * @return The exposurePause.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause getExposurePause();
    /**
     * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.ExposurePauseOrBuilder getExposurePauseOrBuilder();

    /**
     * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
     * @return Whether the lineSequenceParaAdapt field is set.
     */
    boolean hasLineSequenceParaAdapt();
    /**
     * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
     * @return The lineSequenceParaAdapt.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt getLineSequenceParaAdapt();
    /**
     * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder getLineSequenceParaAdaptOrBuilder();

    /**
     * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
     * @return Whether the hatchParaAdapt field is set.
     */
    boolean hasHatchParaAdapt();
    /**
     * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
     * @return The hatchParaAdapt.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt getHatchParaAdapt();
    /**
     * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdaptOrBuilder getHatchParaAdaptOrBuilder();

    /**
     * <pre>
     *key used in Job/markingParamsMap
     * </pre>
     *
     * <code>int32 marking_params_key = 50;</code>
     * @return The markingParamsKey.
     */
    int getMarkingParamsKey();

    /**
     * <pre>
     *LaserIndex is used for assigning vectorBlocks to different actors, e.g. in multi scanner systems
     * </pre>
     *
     * <code>int32 laser_index = 53;</code>
     * @return The laserIndex.
     */
    int getLaserIndex();

    /**
     * <pre>
     *vetor blocks are executed in order once by default (repeats = 0),
     *then repeated [repeats] times starting with the first vector again etc.
     * </pre>
     *
     * <code>uint64 repeats = 54;</code>
     * @return The repeats.
     */
    long getRepeats();

    /**
     * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
     * @return Whether the metaData field is set.
     */
    boolean hasMetaData();
    /**
     * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
     * @return The metaData.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData getMetaData();
    /**
     * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaDataOrBuilder getMetaDataOrBuilder();

    /**
     * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
     * @return Whether the lpbfMetadata field is set.
     */
    boolean hasLpbfMetadata();
    /**
     * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
     * @return The lpbfMetadata.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata getLpbfMetadata();
    /**
     * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder getLpbfMetadataOrBuilder();

    /**
     * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
     * @return Whether the microStructuringMetadata field is set.
     */
    boolean hasMicroStructuringMetadata();
    /**
     * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
     * @return The microStructuringMetadata.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata getMicroStructuringMetadata();
    /**
     * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadataOrBuilder getMicroStructuringMetadataOrBuilder();

    /**
     * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
     * @return Whether the polishingMetadata field is set.
     */
    boolean hasPolishingMetadata();
    /**
     * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
     * @return The polishingMetadata.
     */
    open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata getPolishingMetadata();
    /**
     * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
     */
    open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadataOrBuilder getPolishingMetadataOrBuilder();

    open_vector_format.OpenVectorFormat.VectorBlock.VectorDataCase getVectorDataCase();

    open_vector_format.OpenVectorFormat.VectorBlock.ProcessMetaDataCase getProcessMetaDataCase();
  }
  /**
   * Protobuf type {@code open_vector_format.VectorBlock}
   */
  public static final class VectorBlock extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock)
      VectorBlockOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VectorBlock.newBuilder() to construct.
    private VectorBlock(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VectorBlock() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VectorBlock();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              open_vector_format.OpenVectorFormat.VectorBlock.class, open_vector_format.OpenVectorFormat.VectorBlock.Builder.class);
    }

    /**
     * <pre>
     *PartArea defines if the vectors belong to a part surface in horizontal direction (in layer).
     *Contours are borders of the part in the layer, volume (or core) is the area inbetween.
     *Transition contours are special additional contour lines connecting volume and contour.
     * </pre>
     *
     * Protobuf enum {@code open_vector_format.VectorBlock.PartArea}
     */
    public enum PartArea
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       *also called core or hatches
       * </pre>
       *
       * <code>VOLUME = 0;</code>
       */
      VOLUME(0),
      /**
       * <code>CONTOUR = 1;</code>
       */
      CONTOUR(1),
      /**
       * <code>TRANSITION_CONTOUR = 2;</code>
       */
      TRANSITION_CONTOUR(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       *also called core or hatches
       * </pre>
       *
       * <code>VOLUME = 0;</code>
       */
      public static final int VOLUME_VALUE = 0;
      /**
       * <code>CONTOUR = 1;</code>
       */
      public static final int CONTOUR_VALUE = 1;
      /**
       * <code>TRANSITION_CONTOUR = 2;</code>
       */
      public static final int TRANSITION_CONTOUR_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PartArea valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static PartArea forNumber(int value) {
        switch (value) {
          case 0: return VOLUME;
          case 1: return CONTOUR;
          case 2: return TRANSITION_CONTOUR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PartArea>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PartArea> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PartArea>() {
              public PartArea findValueByNumber(int number) {
                return PartArea.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.VectorBlock.getDescriptor().getEnumTypes().get(0);
      }

      private static final PartArea[] VALUES = values();

      public static PartArea valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private PartArea(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:open_vector_format.VectorBlock.PartArea)
    }

    /**
     * <pre>
     *StructureType defines the type of structure model the vectors belong to.
     *PART is default, usually refering to a tesselated model, e.g. STL models.
     *Support structures don't belong to any part, but are needed for the process.
     *Wirestructures can be tesselated. But it is more efficient to treat them seperatly in a 
     *parametrized format. They are similar to supports, but are not removed after the process.
     *Points use is very limited. They may form a support or wirestructure.
     * </pre>
     *
     * Protobuf enum {@code open_vector_format.VectorBlock.StructureType}
     */
    public enum StructureType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PART = 0;</code>
       */
      PART(0),
      /**
       * <code>SUPPORT = 1;</code>
       */
      SUPPORT(1),
      /**
       * <code>WIRESTRUCTURE = 2;</code>
       */
      WIRESTRUCTURE(2),
      /**
       * <code>POINTS = 3;</code>
       */
      POINTS(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PART = 0;</code>
       */
      public static final int PART_VALUE = 0;
      /**
       * <code>SUPPORT = 1;</code>
       */
      public static final int SUPPORT_VALUE = 1;
      /**
       * <code>WIRESTRUCTURE = 2;</code>
       */
      public static final int WIRESTRUCTURE_VALUE = 2;
      /**
       * <code>POINTS = 3;</code>
       */
      public static final int POINTS_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static StructureType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static StructureType forNumber(int value) {
        switch (value) {
          case 0: return PART;
          case 1: return SUPPORT;
          case 2: return WIRESTRUCTURE;
          case 3: return POINTS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<StructureType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          StructureType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<StructureType>() {
              public StructureType findValueByNumber(int number) {
                return StructureType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.VectorBlock.getDescriptor().getEnumTypes().get(1);
      }

      private static final StructureType[] VALUES = values();

      public static StructureType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private StructureType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:open_vector_format.VectorBlock.StructureType)
    }

    public interface VectorBlockMetaDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.VectorBlockMetaData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *total scan distance of this vector block in mm
       * </pre>
       *
       * <code>double total_scan_distance_in_mm = 1;</code>
       * @return The totalScanDistanceInMm.
       */
      double getTotalScanDistanceInMm();

      /**
       * <pre>
       *total scan distance of this vector block in mm
       * </pre>
       *
       * <code>double total_jump_distance_in_mm = 2;</code>
       * @return The totalJumpDistanceInMm.
       */
      double getTotalJumpDistanceInMm();

      /**
       * <pre>
       *key used in Job/partsMap
       * </pre>
       *
       * <code>int32 part_key = 3;</code>
       * @return The partKey.
       */
      int getPartKey();

      /**
       * <pre>
       *key used in Job/Workplane/patchesMap
       * </pre>
       *
       * <code>int32 patch_key = 4;</code>
       * @return The patchKey.
       */
      int getPatchKey();

      /**
       * <pre>
       *Index of the closedContour in the workplane/Metadata/contours field this vector block is contained in.
       *Contours shall be enumerated ascending in each workplane to identifiy physical contours
       *consisting of multiple vector blocks (e.g. when parameters change) as one.
       *If this parameter is set to any value smaller than 0, this explicitly indicates that none of the vectors
       *of the block are contained in any contour (this is the case for e.g. single vector/line supports).
       *If contour_index is set to a valid contour index, all of the blocks vectors are contained in the contour.
       *The case of a vector block that partly overlaps a contour is excluded on purpose. Overlapping blocks cause
       *a reexposure that should be handled by the machine controller. If containing contour meta data is calculated,
       *overlapping vector blocks should be split and properly indicate the reexposure in the meta data.
       * </pre>
       *
       * <code>int32 contour_index = 5;</code>
       * @return The contourIndex.
       */
      int getContourIndex();

      /**
       * <pre>
       *2D axis aligned bounding box of the vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
       * @return Whether the bounds field is set.
       */
      boolean hasBounds();
      /**
       * <pre>
       *2D axis aligned bounding box of the vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
       * @return The bounds.
       */
      open_vector_format.OpenVectorFormat.AxisAlignedBox2D getBounds();
      /**
       * <pre>
       *2D axis aligned bounding box of the vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
       */
      open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder getBoundsOrBuilder();

      /**
       * <pre>
       *Optional metadata defining a preferred 32bit RGBA color to render the vector data of this vector block in a viewer.
       *int32 is interpreted as byte[4] with byte[0] = red, byte[1] = green, byte[2] = blue, byte[3] = alpha
       * </pre>
       *
       * <code>int32 display_color = 7;</code>
       * @return The displayColor.
       */
      int getDisplayColor();
    }
    /**
     * Protobuf type {@code open_vector_format.VectorBlock.VectorBlockMetaData}
     */
    public static final class VectorBlockMetaData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.VectorBlockMetaData)
        VectorBlockMetaDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use VectorBlockMetaData.newBuilder() to construct.
      private VectorBlockMetaData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private VectorBlockMetaData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new VectorBlockMetaData();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_VectorBlockMetaData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_VectorBlockMetaData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.class, open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.Builder.class);
      }

      private int bitField0_;
      public static final int TOTAL_SCAN_DISTANCE_IN_MM_FIELD_NUMBER = 1;
      private double totalScanDistanceInMm_ = 0D;
      /**
       * <pre>
       *total scan distance of this vector block in mm
       * </pre>
       *
       * <code>double total_scan_distance_in_mm = 1;</code>
       * @return The totalScanDistanceInMm.
       */
      @java.lang.Override
      public double getTotalScanDistanceInMm() {
        return totalScanDistanceInMm_;
      }

      public static final int TOTAL_JUMP_DISTANCE_IN_MM_FIELD_NUMBER = 2;
      private double totalJumpDistanceInMm_ = 0D;
      /**
       * <pre>
       *total scan distance of this vector block in mm
       * </pre>
       *
       * <code>double total_jump_distance_in_mm = 2;</code>
       * @return The totalJumpDistanceInMm.
       */
      @java.lang.Override
      public double getTotalJumpDistanceInMm() {
        return totalJumpDistanceInMm_;
      }

      public static final int PART_KEY_FIELD_NUMBER = 3;
      private int partKey_ = 0;
      /**
       * <pre>
       *key used in Job/partsMap
       * </pre>
       *
       * <code>int32 part_key = 3;</code>
       * @return The partKey.
       */
      @java.lang.Override
      public int getPartKey() {
        return partKey_;
      }

      public static final int PATCH_KEY_FIELD_NUMBER = 4;
      private int patchKey_ = 0;
      /**
       * <pre>
       *key used in Job/Workplane/patchesMap
       * </pre>
       *
       * <code>int32 patch_key = 4;</code>
       * @return The patchKey.
       */
      @java.lang.Override
      public int getPatchKey() {
        return patchKey_;
      }

      public static final int CONTOUR_INDEX_FIELD_NUMBER = 5;
      private int contourIndex_ = 0;
      /**
       * <pre>
       *Index of the closedContour in the workplane/Metadata/contours field this vector block is contained in.
       *Contours shall be enumerated ascending in each workplane to identifiy physical contours
       *consisting of multiple vector blocks (e.g. when parameters change) as one.
       *If this parameter is set to any value smaller than 0, this explicitly indicates that none of the vectors
       *of the block are contained in any contour (this is the case for e.g. single vector/line supports).
       *If contour_index is set to a valid contour index, all of the blocks vectors are contained in the contour.
       *The case of a vector block that partly overlaps a contour is excluded on purpose. Overlapping blocks cause
       *a reexposure that should be handled by the machine controller. If containing contour meta data is calculated,
       *overlapping vector blocks should be split and properly indicate the reexposure in the meta data.
       * </pre>
       *
       * <code>int32 contour_index = 5;</code>
       * @return The contourIndex.
       */
      @java.lang.Override
      public int getContourIndex() {
        return contourIndex_;
      }

      public static final int BOUNDS_FIELD_NUMBER = 6;
      private open_vector_format.OpenVectorFormat.AxisAlignedBox2D bounds_;
      /**
       * <pre>
       *2D axis aligned bounding box of the vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
       * @return Whether the bounds field is set.
       */
      @java.lang.Override
      public boolean hasBounds() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *2D axis aligned bounding box of the vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
       * @return The bounds.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.AxisAlignedBox2D getBounds() {
        return bounds_ == null ? open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance() : bounds_;
      }
      /**
       * <pre>
       *2D axis aligned bounding box of the vector block coordinates
       * </pre>
       *
       * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder getBoundsOrBuilder() {
        return bounds_ == null ? open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance() : bounds_;
      }

      public static final int DISPLAY_COLOR_FIELD_NUMBER = 7;
      private int displayColor_ = 0;
      /**
       * <pre>
       *Optional metadata defining a preferred 32bit RGBA color to render the vector data of this vector block in a viewer.
       *int32 is interpreted as byte[4] with byte[0] = red, byte[1] = green, byte[2] = blue, byte[3] = alpha
       * </pre>
       *
       * <code>int32 display_color = 7;</code>
       * @return The displayColor.
       */
      @java.lang.Override
      public int getDisplayColor() {
        return displayColor_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (java.lang.Double.doubleToRawLongBits(totalScanDistanceInMm_) != 0) {
          output.writeDouble(1, totalScanDistanceInMm_);
        }
        if (java.lang.Double.doubleToRawLongBits(totalJumpDistanceInMm_) != 0) {
          output.writeDouble(2, totalJumpDistanceInMm_);
        }
        if (partKey_ != 0) {
          output.writeInt32(3, partKey_);
        }
        if (patchKey_ != 0) {
          output.writeInt32(4, patchKey_);
        }
        if (contourIndex_ != 0) {
          output.writeInt32(5, contourIndex_);
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(6, getBounds());
        }
        if (displayColor_ != 0) {
          output.writeInt32(7, displayColor_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (java.lang.Double.doubleToRawLongBits(totalScanDistanceInMm_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, totalScanDistanceInMm_);
        }
        if (java.lang.Double.doubleToRawLongBits(totalJumpDistanceInMm_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, totalJumpDistanceInMm_);
        }
        if (partKey_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, partKey_);
        }
        if (patchKey_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, patchKey_);
        }
        if (contourIndex_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, contourIndex_);
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, getBounds());
        }
        if (displayColor_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(7, displayColor_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData other = (open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData) obj;

        if (java.lang.Double.doubleToLongBits(getTotalScanDistanceInMm())
            != java.lang.Double.doubleToLongBits(
                other.getTotalScanDistanceInMm())) return false;
        if (java.lang.Double.doubleToLongBits(getTotalJumpDistanceInMm())
            != java.lang.Double.doubleToLongBits(
                other.getTotalJumpDistanceInMm())) return false;
        if (getPartKey()
            != other.getPartKey()) return false;
        if (getPatchKey()
            != other.getPatchKey()) return false;
        if (getContourIndex()
            != other.getContourIndex()) return false;
        if (hasBounds() != other.hasBounds()) return false;
        if (hasBounds()) {
          if (!getBounds()
              .equals(other.getBounds())) return false;
        }
        if (getDisplayColor()
            != other.getDisplayColor()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TOTAL_SCAN_DISTANCE_IN_MM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalScanDistanceInMm()));
        hash = (37 * hash) + TOTAL_JUMP_DISTANCE_IN_MM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalJumpDistanceInMm()));
        hash = (37 * hash) + PART_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPartKey();
        hash = (37 * hash) + PATCH_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPatchKey();
        hash = (37 * hash) + CONTOUR_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getContourIndex();
        if (hasBounds()) {
          hash = (37 * hash) + BOUNDS_FIELD_NUMBER;
          hash = (53 * hash) + getBounds().hashCode();
        }
        hash = (37 * hash) + DISPLAY_COLOR_FIELD_NUMBER;
        hash = (53 * hash) + getDisplayColor();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code open_vector_format.VectorBlock.VectorBlockMetaData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.VectorBlockMetaData)
          open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_VectorBlockMetaData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_VectorBlockMetaData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.class, open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getBoundsFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          totalScanDistanceInMm_ = 0D;
          totalJumpDistanceInMm_ = 0D;
          partKey_ = 0;
          patchKey_ = 0;
          contourIndex_ = 0;
          bounds_ = null;
          if (boundsBuilder_ != null) {
            boundsBuilder_.dispose();
            boundsBuilder_ = null;
          }
          displayColor_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_VectorBlockMetaData_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData build() {
          open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData result = new open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.totalScanDistanceInMm_ = totalScanDistanceInMm_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.totalJumpDistanceInMm_ = totalJumpDistanceInMm_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.partKey_ = partKey_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.patchKey_ = patchKey_;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.contourIndex_ = contourIndex_;
          }
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.bounds_ = boundsBuilder_ == null
                ? bounds_
                : boundsBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.displayColor_ = displayColor_;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.getDefaultInstance()) return this;
          if (other.getTotalScanDistanceInMm() != 0D) {
            setTotalScanDistanceInMm(other.getTotalScanDistanceInMm());
          }
          if (other.getTotalJumpDistanceInMm() != 0D) {
            setTotalJumpDistanceInMm(other.getTotalJumpDistanceInMm());
          }
          if (other.getPartKey() != 0) {
            setPartKey(other.getPartKey());
          }
          if (other.getPatchKey() != 0) {
            setPatchKey(other.getPatchKey());
          }
          if (other.getContourIndex() != 0) {
            setContourIndex(other.getContourIndex());
          }
          if (other.hasBounds()) {
            mergeBounds(other.getBounds());
          }
          if (other.getDisplayColor() != 0) {
            setDisplayColor(other.getDisplayColor());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {
                  totalScanDistanceInMm_ = input.readDouble();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 9
                case 17: {
                  totalJumpDistanceInMm_ = input.readDouble();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 17
                case 24: {
                  partKey_ = input.readInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  patchKey_ = input.readInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  contourIndex_ = input.readInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 50: {
                  input.readMessage(
                      getBoundsFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000020;
                  break;
                } // case 50
                case 56: {
                  displayColor_ = input.readInt32();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 56
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private double totalScanDistanceInMm_ ;
        /**
         * <pre>
         *total scan distance of this vector block in mm
         * </pre>
         *
         * <code>double total_scan_distance_in_mm = 1;</code>
         * @return The totalScanDistanceInMm.
         */
        @java.lang.Override
        public double getTotalScanDistanceInMm() {
          return totalScanDistanceInMm_;
        }
        /**
         * <pre>
         *total scan distance of this vector block in mm
         * </pre>
         *
         * <code>double total_scan_distance_in_mm = 1;</code>
         * @param value The totalScanDistanceInMm to set.
         * @return This builder for chaining.
         */
        public Builder setTotalScanDistanceInMm(double value) {

          totalScanDistanceInMm_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *total scan distance of this vector block in mm
         * </pre>
         *
         * <code>double total_scan_distance_in_mm = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTotalScanDistanceInMm() {
          bitField0_ = (bitField0_ & ~0x00000001);
          totalScanDistanceInMm_ = 0D;
          onChanged();
          return this;
        }

        private double totalJumpDistanceInMm_ ;
        /**
         * <pre>
         *total scan distance of this vector block in mm
         * </pre>
         *
         * <code>double total_jump_distance_in_mm = 2;</code>
         * @return The totalJumpDistanceInMm.
         */
        @java.lang.Override
        public double getTotalJumpDistanceInMm() {
          return totalJumpDistanceInMm_;
        }
        /**
         * <pre>
         *total scan distance of this vector block in mm
         * </pre>
         *
         * <code>double total_jump_distance_in_mm = 2;</code>
         * @param value The totalJumpDistanceInMm to set.
         * @return This builder for chaining.
         */
        public Builder setTotalJumpDistanceInMm(double value) {

          totalJumpDistanceInMm_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *total scan distance of this vector block in mm
         * </pre>
         *
         * <code>double total_jump_distance_in_mm = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTotalJumpDistanceInMm() {
          bitField0_ = (bitField0_ & ~0x00000002);
          totalJumpDistanceInMm_ = 0D;
          onChanged();
          return this;
        }

        private int partKey_ ;
        /**
         * <pre>
         *key used in Job/partsMap
         * </pre>
         *
         * <code>int32 part_key = 3;</code>
         * @return The partKey.
         */
        @java.lang.Override
        public int getPartKey() {
          return partKey_;
        }
        /**
         * <pre>
         *key used in Job/partsMap
         * </pre>
         *
         * <code>int32 part_key = 3;</code>
         * @param value The partKey to set.
         * @return This builder for chaining.
         */
        public Builder setPartKey(int value) {

          partKey_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *key used in Job/partsMap
         * </pre>
         *
         * <code>int32 part_key = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearPartKey() {
          bitField0_ = (bitField0_ & ~0x00000004);
          partKey_ = 0;
          onChanged();
          return this;
        }

        private int patchKey_ ;
        /**
         * <pre>
         *key used in Job/Workplane/patchesMap
         * </pre>
         *
         * <code>int32 patch_key = 4;</code>
         * @return The patchKey.
         */
        @java.lang.Override
        public int getPatchKey() {
          return patchKey_;
        }
        /**
         * <pre>
         *key used in Job/Workplane/patchesMap
         * </pre>
         *
         * <code>int32 patch_key = 4;</code>
         * @param value The patchKey to set.
         * @return This builder for chaining.
         */
        public Builder setPatchKey(int value) {

          patchKey_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *key used in Job/Workplane/patchesMap
         * </pre>
         *
         * <code>int32 patch_key = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearPatchKey() {
          bitField0_ = (bitField0_ & ~0x00000008);
          patchKey_ = 0;
          onChanged();
          return this;
        }

        private int contourIndex_ ;
        /**
         * <pre>
         *Index of the closedContour in the workplane/Metadata/contours field this vector block is contained in.
         *Contours shall be enumerated ascending in each workplane to identifiy physical contours
         *consisting of multiple vector blocks (e.g. when parameters change) as one.
         *If this parameter is set to any value smaller than 0, this explicitly indicates that none of the vectors
         *of the block are contained in any contour (this is the case for e.g. single vector/line supports).
         *If contour_index is set to a valid contour index, all of the blocks vectors are contained in the contour.
         *The case of a vector block that partly overlaps a contour is excluded on purpose. Overlapping blocks cause
         *a reexposure that should be handled by the machine controller. If containing contour meta data is calculated,
         *overlapping vector blocks should be split and properly indicate the reexposure in the meta data.
         * </pre>
         *
         * <code>int32 contour_index = 5;</code>
         * @return The contourIndex.
         */
        @java.lang.Override
        public int getContourIndex() {
          return contourIndex_;
        }
        /**
         * <pre>
         *Index of the closedContour in the workplane/Metadata/contours field this vector block is contained in.
         *Contours shall be enumerated ascending in each workplane to identifiy physical contours
         *consisting of multiple vector blocks (e.g. when parameters change) as one.
         *If this parameter is set to any value smaller than 0, this explicitly indicates that none of the vectors
         *of the block are contained in any contour (this is the case for e.g. single vector/line supports).
         *If contour_index is set to a valid contour index, all of the blocks vectors are contained in the contour.
         *The case of a vector block that partly overlaps a contour is excluded on purpose. Overlapping blocks cause
         *a reexposure that should be handled by the machine controller. If containing contour meta data is calculated,
         *overlapping vector blocks should be split and properly indicate the reexposure in the meta data.
         * </pre>
         *
         * <code>int32 contour_index = 5;</code>
         * @param value The contourIndex to set.
         * @return This builder for chaining.
         */
        public Builder setContourIndex(int value) {

          contourIndex_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *Index of the closedContour in the workplane/Metadata/contours field this vector block is contained in.
         *Contours shall be enumerated ascending in each workplane to identifiy physical contours
         *consisting of multiple vector blocks (e.g. when parameters change) as one.
         *If this parameter is set to any value smaller than 0, this explicitly indicates that none of the vectors
         *of the block are contained in any contour (this is the case for e.g. single vector/line supports).
         *If contour_index is set to a valid contour index, all of the blocks vectors are contained in the contour.
         *The case of a vector block that partly overlaps a contour is excluded on purpose. Overlapping blocks cause
         *a reexposure that should be handled by the machine controller. If containing contour meta data is calculated,
         *overlapping vector blocks should be split and properly indicate the reexposure in the meta data.
         * </pre>
         *
         * <code>int32 contour_index = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearContourIndex() {
          bitField0_ = (bitField0_ & ~0x00000010);
          contourIndex_ = 0;
          onChanged();
          return this;
        }

        private open_vector_format.OpenVectorFormat.AxisAlignedBox2D bounds_;
        private com.google.protobuf.SingleFieldBuilderV3<
            open_vector_format.OpenVectorFormat.AxisAlignedBox2D, open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder, open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder> boundsBuilder_;
        /**
         * <pre>
         *2D axis aligned bounding box of the vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         * @return Whether the bounds field is set.
         */
        public boolean hasBounds() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         *2D axis aligned bounding box of the vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         * @return The bounds.
         */
        public open_vector_format.OpenVectorFormat.AxisAlignedBox2D getBounds() {
          if (boundsBuilder_ == null) {
            return bounds_ == null ? open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance() : bounds_;
          } else {
            return boundsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         *2D axis aligned bounding box of the vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         */
        public Builder setBounds(open_vector_format.OpenVectorFormat.AxisAlignedBox2D value) {
          if (boundsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            bounds_ = value;
          } else {
            boundsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *2D axis aligned bounding box of the vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         */
        public Builder setBounds(
            open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder builderForValue) {
          if (boundsBuilder_ == null) {
            bounds_ = builderForValue.build();
          } else {
            boundsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *2D axis aligned bounding box of the vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         */
        public Builder mergeBounds(open_vector_format.OpenVectorFormat.AxisAlignedBox2D value) {
          if (boundsBuilder_ == null) {
            if (((bitField0_ & 0x00000020) != 0) &&
              bounds_ != null &&
              bounds_ != open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance()) {
              getBoundsBuilder().mergeFrom(value);
            } else {
              bounds_ = value;
            }
          } else {
            boundsBuilder_.mergeFrom(value);
          }
          if (bounds_ != null) {
            bitField0_ |= 0x00000020;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         *2D axis aligned bounding box of the vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         */
        public Builder clearBounds() {
          bitField0_ = (bitField0_ & ~0x00000020);
          bounds_ = null;
          if (boundsBuilder_ != null) {
            boundsBuilder_.dispose();
            boundsBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         *2D axis aligned bounding box of the vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         */
        public open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder getBoundsBuilder() {
          bitField0_ |= 0x00000020;
          onChanged();
          return getBoundsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         *2D axis aligned bounding box of the vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         */
        public open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder getBoundsOrBuilder() {
          if (boundsBuilder_ != null) {
            return boundsBuilder_.getMessageOrBuilder();
          } else {
            return bounds_ == null ?
                open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance() : bounds_;
          }
        }
        /**
         * <pre>
         *2D axis aligned bounding box of the vector block coordinates
         * </pre>
         *
         * <code>.open_vector_format.AxisAlignedBox2D bounds = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            open_vector_format.OpenVectorFormat.AxisAlignedBox2D, open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder, open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder> 
            getBoundsFieldBuilder() {
          if (boundsBuilder_ == null) {
            boundsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                open_vector_format.OpenVectorFormat.AxisAlignedBox2D, open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder, open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder>(
                    getBounds(),
                    getParentForChildren(),
                    isClean());
            bounds_ = null;
          }
          return boundsBuilder_;
        }

        private int displayColor_ ;
        /**
         * <pre>
         *Optional metadata defining a preferred 32bit RGBA color to render the vector data of this vector block in a viewer.
         *int32 is interpreted as byte[4] with byte[0] = red, byte[1] = green, byte[2] = blue, byte[3] = alpha
         * </pre>
         *
         * <code>int32 display_color = 7;</code>
         * @return The displayColor.
         */
        @java.lang.Override
        public int getDisplayColor() {
          return displayColor_;
        }
        /**
         * <pre>
         *Optional metadata defining a preferred 32bit RGBA color to render the vector data of this vector block in a viewer.
         *int32 is interpreted as byte[4] with byte[0] = red, byte[1] = green, byte[2] = blue, byte[3] = alpha
         * </pre>
         *
         * <code>int32 display_color = 7;</code>
         * @param value The displayColor to set.
         * @return This builder for chaining.
         */
        public Builder setDisplayColor(int value) {

          displayColor_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *Optional metadata defining a preferred 32bit RGBA color to render the vector data of this vector block in a viewer.
         *int32 is interpreted as byte[4] with byte[0] = red, byte[1] = green, byte[2] = blue, byte[3] = alpha
         * </pre>
         *
         * <code>int32 display_color = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearDisplayColor() {
          bitField0_ = (bitField0_ & ~0x00000040);
          displayColor_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.VectorBlockMetaData)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.VectorBlockMetaData)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<VectorBlockMetaData>
          PARSER = new com.google.protobuf.AbstractParser<VectorBlockMetaData>() {
        @java.lang.Override
        public VectorBlockMetaData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<VectorBlockMetaData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<VectorBlockMetaData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LPBFMetadataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.LPBFMetadata)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
       * @return The enum numeric value on the wire for partArea.
       */
      int getPartAreaValue();
      /**
       * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
       * @return The partArea.
       */
      open_vector_format.OpenVectorFormat.VectorBlock.PartArea getPartArea();

      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinType skin_type = 2;</code>
       * @return The enum numeric value on the wire for skinType.
       */
      int getSkinTypeValue();
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinType skin_type = 2;</code>
       * @return The skinType.
       */
      open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinType getSkinType();

      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinCoreStrategyArea skin_core_strategy_area = 3;</code>
       * @return The enum numeric value on the wire for skinCoreStrategyArea.
       */
      int getSkinCoreStrategyAreaValue();
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinCoreStrategyArea skin_core_strategy_area = 3;</code>
       * @return The skinCoreStrategyArea.
       */
      open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinCoreStrategyArea getSkinCoreStrategyArea();

      /**
       * <code>.open_vector_format.VectorBlock.StructureType structure_type = 4;</code>
       * @return The enum numeric value on the wire for structureType.
       */
      int getStructureTypeValue();
      /**
       * <code>.open_vector_format.VectorBlock.StructureType structure_type = 4;</code>
       * @return The structureType.
       */
      open_vector_format.OpenVectorFormat.VectorBlock.StructureType getStructureType();

      /**
       * <pre>
       *states if this vector block is a reexposure of the area (true) or the first exposure (false)
       * </pre>
       *
       * <code>bool reexposure = 5;</code>
       * @return The reexposure.
       */
      boolean getReexposure();
    }
    /**
     * <pre>
     * ProcessMetaData for LPBF 
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.LPBFMetadata}
     */
    public static final class LPBFMetadata extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.LPBFMetadata)
        LPBFMetadataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LPBFMetadata.newBuilder() to construct.
      private LPBFMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LPBFMetadata() {
        partArea_ = 0;
        skinType_ = 0;
        skinCoreStrategyArea_ = 0;
        structureType_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LPBFMetadata();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LPBFMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LPBFMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.class, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder.class);
      }

      /**
       * <pre>
       *SkinType defines if the vectors of this block belong to the parts surface in vertical direction
       *InSkin (default), vectors are found on this position on previous and next layer
       *DownSkin,  no vectors in previous layer, exposure in powder bed
       *Upskin, no vectors in next layer
       * </pre>
       *
       * Protobuf enum {@code open_vector_format.VectorBlock.LPBFMetadata.SkinType}
       */
      public enum SkinType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>IN_SKIN = 0;</code>
         */
        IN_SKIN(0),
        /**
         * <code>DOWN_SKIN = 1;</code>
         */
        DOWN_SKIN(1),
        /**
         * <code>UP_SKIN = 2;</code>
         */
        UP_SKIN(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>IN_SKIN = 0;</code>
         */
        public static final int IN_SKIN_VALUE = 0;
        /**
         * <code>DOWN_SKIN = 1;</code>
         */
        public static final int DOWN_SKIN_VALUE = 1;
        /**
         * <code>UP_SKIN = 2;</code>
         */
        public static final int UP_SKIN_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static SkinType valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static SkinType forNumber(int value) {
          switch (value) {
            case 0: return IN_SKIN;
            case 1: return DOWN_SKIN;
            case 2: return UP_SKIN;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<SkinType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            SkinType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<SkinType>() {
                public SkinType findValueByNumber(int number) {
                  return SkinType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.getDescriptor().getEnumTypes().get(0);
        }

        private static final SkinType[] VALUES = values();

        public static SkinType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private SkinType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:open_vector_format.VectorBlock.LPBFMetadata.SkinType)
      }

      /**
       * <pre>
       *Skin Core strategy uses two laser spots with different sizes for core (bigger spot)
       *and outer hull (smaller spot) to increase productivity. Default value 
       *(also for not using the strategy) is OuterHull, using the small spot for the whole part.
       * </pre>
       *
       * Protobuf enum {@code open_vector_format.VectorBlock.LPBFMetadata.SkinCoreStrategyArea}
       */
      public enum SkinCoreStrategyArea
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>OUTER_HULL = 0;</code>
         */
        OUTER_HULL(0),
        /**
         * <code>CORE = 1;</code>
         */
        CORE(1),
        /**
         * <code>INBETWEEN_HULL = 2;</code>
         */
        INBETWEEN_HULL(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>OUTER_HULL = 0;</code>
         */
        public static final int OUTER_HULL_VALUE = 0;
        /**
         * <code>CORE = 1;</code>
         */
        public static final int CORE_VALUE = 1;
        /**
         * <code>INBETWEEN_HULL = 2;</code>
         */
        public static final int INBETWEEN_HULL_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static SkinCoreStrategyArea valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static SkinCoreStrategyArea forNumber(int value) {
          switch (value) {
            case 0: return OUTER_HULL;
            case 1: return CORE;
            case 2: return INBETWEEN_HULL;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<SkinCoreStrategyArea>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            SkinCoreStrategyArea> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<SkinCoreStrategyArea>() {
                public SkinCoreStrategyArea findValueByNumber(int number) {
                  return SkinCoreStrategyArea.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.getDescriptor().getEnumTypes().get(1);
        }

        private static final SkinCoreStrategyArea[] VALUES = values();

        public static SkinCoreStrategyArea valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private SkinCoreStrategyArea(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:open_vector_format.VectorBlock.LPBFMetadata.SkinCoreStrategyArea)
      }

      public static final int PART_AREA_FIELD_NUMBER = 1;
      private int partArea_ = 0;
      /**
       * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
       * @return The enum numeric value on the wire for partArea.
       */
      @java.lang.Override public int getPartAreaValue() {
        return partArea_;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
       * @return The partArea.
       */
      @java.lang.Override public open_vector_format.OpenVectorFormat.VectorBlock.PartArea getPartArea() {
        open_vector_format.OpenVectorFormat.VectorBlock.PartArea result = open_vector_format.OpenVectorFormat.VectorBlock.PartArea.forNumber(partArea_);
        return result == null ? open_vector_format.OpenVectorFormat.VectorBlock.PartArea.UNRECOGNIZED : result;
      }

      public static final int SKIN_TYPE_FIELD_NUMBER = 2;
      private int skinType_ = 0;
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinType skin_type = 2;</code>
       * @return The enum numeric value on the wire for skinType.
       */
      @java.lang.Override public int getSkinTypeValue() {
        return skinType_;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinType skin_type = 2;</code>
       * @return The skinType.
       */
      @java.lang.Override public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinType getSkinType() {
        open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinType result = open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinType.forNumber(skinType_);
        return result == null ? open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinType.UNRECOGNIZED : result;
      }

      public static final int SKIN_CORE_STRATEGY_AREA_FIELD_NUMBER = 3;
      private int skinCoreStrategyArea_ = 0;
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinCoreStrategyArea skin_core_strategy_area = 3;</code>
       * @return The enum numeric value on the wire for skinCoreStrategyArea.
       */
      @java.lang.Override public int getSkinCoreStrategyAreaValue() {
        return skinCoreStrategyArea_;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinCoreStrategyArea skin_core_strategy_area = 3;</code>
       * @return The skinCoreStrategyArea.
       */
      @java.lang.Override public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinCoreStrategyArea getSkinCoreStrategyArea() {
        open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinCoreStrategyArea result = open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinCoreStrategyArea.forNumber(skinCoreStrategyArea_);
        return result == null ? open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinCoreStrategyArea.UNRECOGNIZED : result;
      }

      public static final int STRUCTURE_TYPE_FIELD_NUMBER = 4;
      private int structureType_ = 0;
      /**
       * <code>.open_vector_format.VectorBlock.StructureType structure_type = 4;</code>
       * @return The enum numeric value on the wire for structureType.
       */
      @java.lang.Override public int getStructureTypeValue() {
        return structureType_;
      }
      /**
       * <code>.open_vector_format.VectorBlock.StructureType structure_type = 4;</code>
       * @return The structureType.
       */
      @java.lang.Override public open_vector_format.OpenVectorFormat.VectorBlock.StructureType getStructureType() {
        open_vector_format.OpenVectorFormat.VectorBlock.StructureType result = open_vector_format.OpenVectorFormat.VectorBlock.StructureType.forNumber(structureType_);
        return result == null ? open_vector_format.OpenVectorFormat.VectorBlock.StructureType.UNRECOGNIZED : result;
      }

      public static final int REEXPOSURE_FIELD_NUMBER = 5;
      private boolean reexposure_ = false;
      /**
       * <pre>
       *states if this vector block is a reexposure of the area (true) or the first exposure (false)
       * </pre>
       *
       * <code>bool reexposure = 5;</code>
       * @return The reexposure.
       */
      @java.lang.Override
      public boolean getReexposure() {
        return reexposure_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (partArea_ != open_vector_format.OpenVectorFormat.VectorBlock.PartArea.VOLUME.getNumber()) {
          output.writeEnum(1, partArea_);
        }
        if (skinType_ != open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinType.IN_SKIN.getNumber()) {
          output.writeEnum(2, skinType_);
        }
        if (skinCoreStrategyArea_ != open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinCoreStrategyArea.OUTER_HULL.getNumber()) {
          output.writeEnum(3, skinCoreStrategyArea_);
        }
        if (structureType_ != open_vector_format.OpenVectorFormat.VectorBlock.StructureType.PART.getNumber()) {
          output.writeEnum(4, structureType_);
        }
        if (reexposure_ != false) {
          output.writeBool(5, reexposure_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (partArea_ != open_vector_format.OpenVectorFormat.VectorBlock.PartArea.VOLUME.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, partArea_);
        }
        if (skinType_ != open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinType.IN_SKIN.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, skinType_);
        }
        if (skinCoreStrategyArea_ != open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinCoreStrategyArea.OUTER_HULL.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, skinCoreStrategyArea_);
        }
        if (structureType_ != open_vector_format.OpenVectorFormat.VectorBlock.StructureType.PART.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, structureType_);
        }
        if (reexposure_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, reexposure_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata other = (open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata) obj;

        if (partArea_ != other.partArea_) return false;
        if (skinType_ != other.skinType_) return false;
        if (skinCoreStrategyArea_ != other.skinCoreStrategyArea_) return false;
        if (structureType_ != other.structureType_) return false;
        if (getReexposure()
            != other.getReexposure()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + PART_AREA_FIELD_NUMBER;
        hash = (53 * hash) + partArea_;
        hash = (37 * hash) + SKIN_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + skinType_;
        hash = (37 * hash) + SKIN_CORE_STRATEGY_AREA_FIELD_NUMBER;
        hash = (53 * hash) + skinCoreStrategyArea_;
        hash = (37 * hash) + STRUCTURE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + structureType_;
        hash = (37 * hash) + REEXPOSURE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getReexposure());
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * ProcessMetaData for LPBF 
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.LPBFMetadata}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.LPBFMetadata)
          open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LPBFMetadata_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LPBFMetadata_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.class, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          partArea_ = 0;
          skinType_ = 0;
          skinCoreStrategyArea_ = 0;
          structureType_ = 0;
          reexposure_ = false;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LPBFMetadata_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata build() {
          open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata result = new open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.partArea_ = partArea_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.skinType_ = skinType_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.skinCoreStrategyArea_ = skinCoreStrategyArea_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.structureType_ = structureType_;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.reexposure_ = reexposure_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.getDefaultInstance()) return this;
          if (other.partArea_ != 0) {
            setPartAreaValue(other.getPartAreaValue());
          }
          if (other.skinType_ != 0) {
            setSkinTypeValue(other.getSkinTypeValue());
          }
          if (other.skinCoreStrategyArea_ != 0) {
            setSkinCoreStrategyAreaValue(other.getSkinCoreStrategyAreaValue());
          }
          if (other.structureType_ != 0) {
            setStructureTypeValue(other.getStructureTypeValue());
          }
          if (other.getReexposure() != false) {
            setReexposure(other.getReexposure());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  partArea_ = input.readEnum();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  skinType_ = input.readEnum();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  skinCoreStrategyArea_ = input.readEnum();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  structureType_ = input.readEnum();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  reexposure_ = input.readBool();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int partArea_ = 0;
        /**
         * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
         * @return The enum numeric value on the wire for partArea.
         */
        @java.lang.Override public int getPartAreaValue() {
          return partArea_;
        }
        /**
         * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
         * @param value The enum numeric value on the wire for partArea to set.
         * @return This builder for chaining.
         */
        public Builder setPartAreaValue(int value) {
          partArea_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
         * @return The partArea.
         */
        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.PartArea getPartArea() {
          open_vector_format.OpenVectorFormat.VectorBlock.PartArea result = open_vector_format.OpenVectorFormat.VectorBlock.PartArea.forNumber(partArea_);
          return result == null ? open_vector_format.OpenVectorFormat.VectorBlock.PartArea.UNRECOGNIZED : result;
        }
        /**
         * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
         * @param value The partArea to set.
         * @return This builder for chaining.
         */
        public Builder setPartArea(open_vector_format.OpenVectorFormat.VectorBlock.PartArea value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          partArea_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPartArea() {
          bitField0_ = (bitField0_ & ~0x00000001);
          partArea_ = 0;
          onChanged();
          return this;
        }

        private int skinType_ = 0;
        /**
         * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinType skin_type = 2;</code>
         * @return The enum numeric value on the wire for skinType.
         */
        @java.lang.Override public int getSkinTypeValue() {
          return skinType_;
        }
        /**
         * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinType skin_type = 2;</code>
         * @param value The enum numeric value on the wire for skinType to set.
         * @return This builder for chaining.
         */
        public Builder setSkinTypeValue(int value) {
          skinType_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinType skin_type = 2;</code>
         * @return The skinType.
         */
        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinType getSkinType() {
          open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinType result = open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinType.forNumber(skinType_);
          return result == null ? open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinType.UNRECOGNIZED : result;
        }
        /**
         * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinType skin_type = 2;</code>
         * @param value The skinType to set.
         * @return This builder for chaining.
         */
        public Builder setSkinType(open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          skinType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinType skin_type = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearSkinType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          skinType_ = 0;
          onChanged();
          return this;
        }

        private int skinCoreStrategyArea_ = 0;
        /**
         * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinCoreStrategyArea skin_core_strategy_area = 3;</code>
         * @return The enum numeric value on the wire for skinCoreStrategyArea.
         */
        @java.lang.Override public int getSkinCoreStrategyAreaValue() {
          return skinCoreStrategyArea_;
        }
        /**
         * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinCoreStrategyArea skin_core_strategy_area = 3;</code>
         * @param value The enum numeric value on the wire for skinCoreStrategyArea to set.
         * @return This builder for chaining.
         */
        public Builder setSkinCoreStrategyAreaValue(int value) {
          skinCoreStrategyArea_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinCoreStrategyArea skin_core_strategy_area = 3;</code>
         * @return The skinCoreStrategyArea.
         */
        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinCoreStrategyArea getSkinCoreStrategyArea() {
          open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinCoreStrategyArea result = open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinCoreStrategyArea.forNumber(skinCoreStrategyArea_);
          return result == null ? open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinCoreStrategyArea.UNRECOGNIZED : result;
        }
        /**
         * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinCoreStrategyArea skin_core_strategy_area = 3;</code>
         * @param value The skinCoreStrategyArea to set.
         * @return This builder for chaining.
         */
        public Builder setSkinCoreStrategyArea(open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.SkinCoreStrategyArea value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          skinCoreStrategyArea_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.LPBFMetadata.SkinCoreStrategyArea skin_core_strategy_area = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearSkinCoreStrategyArea() {
          bitField0_ = (bitField0_ & ~0x00000004);
          skinCoreStrategyArea_ = 0;
          onChanged();
          return this;
        }

        private int structureType_ = 0;
        /**
         * <code>.open_vector_format.VectorBlock.StructureType structure_type = 4;</code>
         * @return The enum numeric value on the wire for structureType.
         */
        @java.lang.Override public int getStructureTypeValue() {
          return structureType_;
        }
        /**
         * <code>.open_vector_format.VectorBlock.StructureType structure_type = 4;</code>
         * @param value The enum numeric value on the wire for structureType to set.
         * @return This builder for chaining.
         */
        public Builder setStructureTypeValue(int value) {
          structureType_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.StructureType structure_type = 4;</code>
         * @return The structureType.
         */
        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.StructureType getStructureType() {
          open_vector_format.OpenVectorFormat.VectorBlock.StructureType result = open_vector_format.OpenVectorFormat.VectorBlock.StructureType.forNumber(structureType_);
          return result == null ? open_vector_format.OpenVectorFormat.VectorBlock.StructureType.UNRECOGNIZED : result;
        }
        /**
         * <code>.open_vector_format.VectorBlock.StructureType structure_type = 4;</code>
         * @param value The structureType to set.
         * @return This builder for chaining.
         */
        public Builder setStructureType(open_vector_format.OpenVectorFormat.VectorBlock.StructureType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          structureType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.StructureType structure_type = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearStructureType() {
          bitField0_ = (bitField0_ & ~0x00000008);
          structureType_ = 0;
          onChanged();
          return this;
        }

        private boolean reexposure_ ;
        /**
         * <pre>
         *states if this vector block is a reexposure of the area (true) or the first exposure (false)
         * </pre>
         *
         * <code>bool reexposure = 5;</code>
         * @return The reexposure.
         */
        @java.lang.Override
        public boolean getReexposure() {
          return reexposure_;
        }
        /**
         * <pre>
         *states if this vector block is a reexposure of the area (true) or the first exposure (false)
         * </pre>
         *
         * <code>bool reexposure = 5;</code>
         * @param value The reexposure to set.
         * @return This builder for chaining.
         */
        public Builder setReexposure(boolean value) {

          reexposure_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *states if this vector block is a reexposure of the area (true) or the first exposure (false)
         * </pre>
         *
         * <code>bool reexposure = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearReexposure() {
          bitField0_ = (bitField0_ & ~0x00000010);
          reexposure_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.LPBFMetadata)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.LPBFMetadata)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LPBFMetadata>
          PARSER = new com.google.protobuf.AbstractParser<LPBFMetadata>() {
        @java.lang.Override
        public LPBFMetadata parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<LPBFMetadata> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LPBFMetadata> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface MicroStructuringMetadataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.MicroStructuringMetadata)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
       * @return The enum numeric value on the wire for partArea.
       */
      int getPartAreaValue();
      /**
       * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
       * @return The partArea.
       */
      open_vector_format.OpenVectorFormat.VectorBlock.PartArea getPartArea();

      /**
       * <code>.open_vector_format.VectorBlock.StructureType structure_type = 2;</code>
       * @return The enum numeric value on the wire for structureType.
       */
      int getStructureTypeValue();
      /**
       * <code>.open_vector_format.VectorBlock.StructureType structure_type = 2;</code>
       * @return The structureType.
       */
      open_vector_format.OpenVectorFormat.VectorBlock.StructureType getStructureType();
    }
    /**
     * <pre>
     *ProcessMetaData for MicroStructuring
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.MicroStructuringMetadata}
     */
    public static final class MicroStructuringMetadata extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.MicroStructuringMetadata)
        MicroStructuringMetadataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use MicroStructuringMetadata.newBuilder() to construct.
      private MicroStructuringMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private MicroStructuringMetadata() {
        partArea_ = 0;
        structureType_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new MicroStructuringMetadata();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_MicroStructuringMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_MicroStructuringMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.class, open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.Builder.class);
      }

      public static final int PART_AREA_FIELD_NUMBER = 1;
      private int partArea_ = 0;
      /**
       * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
       * @return The enum numeric value on the wire for partArea.
       */
      @java.lang.Override public int getPartAreaValue() {
        return partArea_;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
       * @return The partArea.
       */
      @java.lang.Override public open_vector_format.OpenVectorFormat.VectorBlock.PartArea getPartArea() {
        open_vector_format.OpenVectorFormat.VectorBlock.PartArea result = open_vector_format.OpenVectorFormat.VectorBlock.PartArea.forNumber(partArea_);
        return result == null ? open_vector_format.OpenVectorFormat.VectorBlock.PartArea.UNRECOGNIZED : result;
      }

      public static final int STRUCTURE_TYPE_FIELD_NUMBER = 2;
      private int structureType_ = 0;
      /**
       * <code>.open_vector_format.VectorBlock.StructureType structure_type = 2;</code>
       * @return The enum numeric value on the wire for structureType.
       */
      @java.lang.Override public int getStructureTypeValue() {
        return structureType_;
      }
      /**
       * <code>.open_vector_format.VectorBlock.StructureType structure_type = 2;</code>
       * @return The structureType.
       */
      @java.lang.Override public open_vector_format.OpenVectorFormat.VectorBlock.StructureType getStructureType() {
        open_vector_format.OpenVectorFormat.VectorBlock.StructureType result = open_vector_format.OpenVectorFormat.VectorBlock.StructureType.forNumber(structureType_);
        return result == null ? open_vector_format.OpenVectorFormat.VectorBlock.StructureType.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (partArea_ != open_vector_format.OpenVectorFormat.VectorBlock.PartArea.VOLUME.getNumber()) {
          output.writeEnum(1, partArea_);
        }
        if (structureType_ != open_vector_format.OpenVectorFormat.VectorBlock.StructureType.PART.getNumber()) {
          output.writeEnum(2, structureType_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (partArea_ != open_vector_format.OpenVectorFormat.VectorBlock.PartArea.VOLUME.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, partArea_);
        }
        if (structureType_ != open_vector_format.OpenVectorFormat.VectorBlock.StructureType.PART.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, structureType_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata other = (open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata) obj;

        if (partArea_ != other.partArea_) return false;
        if (structureType_ != other.structureType_) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + PART_AREA_FIELD_NUMBER;
        hash = (53 * hash) + partArea_;
        hash = (37 * hash) + STRUCTURE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + structureType_;
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *ProcessMetaData for MicroStructuring
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.MicroStructuringMetadata}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.MicroStructuringMetadata)
          open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_MicroStructuringMetadata_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_MicroStructuringMetadata_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.class, open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          partArea_ = 0;
          structureType_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_MicroStructuringMetadata_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata build() {
          open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata result = new open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.partArea_ = partArea_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.structureType_ = structureType_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.getDefaultInstance()) return this;
          if (other.partArea_ != 0) {
            setPartAreaValue(other.getPartAreaValue());
          }
          if (other.structureType_ != 0) {
            setStructureTypeValue(other.getStructureTypeValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  partArea_ = input.readEnum();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  structureType_ = input.readEnum();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int partArea_ = 0;
        /**
         * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
         * @return The enum numeric value on the wire for partArea.
         */
        @java.lang.Override public int getPartAreaValue() {
          return partArea_;
        }
        /**
         * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
         * @param value The enum numeric value on the wire for partArea to set.
         * @return This builder for chaining.
         */
        public Builder setPartAreaValue(int value) {
          partArea_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
         * @return The partArea.
         */
        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.PartArea getPartArea() {
          open_vector_format.OpenVectorFormat.VectorBlock.PartArea result = open_vector_format.OpenVectorFormat.VectorBlock.PartArea.forNumber(partArea_);
          return result == null ? open_vector_format.OpenVectorFormat.VectorBlock.PartArea.UNRECOGNIZED : result;
        }
        /**
         * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
         * @param value The partArea to set.
         * @return This builder for chaining.
         */
        public Builder setPartArea(open_vector_format.OpenVectorFormat.VectorBlock.PartArea value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          partArea_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.PartArea part_area = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPartArea() {
          bitField0_ = (bitField0_ & ~0x00000001);
          partArea_ = 0;
          onChanged();
          return this;
        }

        private int structureType_ = 0;
        /**
         * <code>.open_vector_format.VectorBlock.StructureType structure_type = 2;</code>
         * @return The enum numeric value on the wire for structureType.
         */
        @java.lang.Override public int getStructureTypeValue() {
          return structureType_;
        }
        /**
         * <code>.open_vector_format.VectorBlock.StructureType structure_type = 2;</code>
         * @param value The enum numeric value on the wire for structureType to set.
         * @return This builder for chaining.
         */
        public Builder setStructureTypeValue(int value) {
          structureType_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.StructureType structure_type = 2;</code>
         * @return The structureType.
         */
        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.StructureType getStructureType() {
          open_vector_format.OpenVectorFormat.VectorBlock.StructureType result = open_vector_format.OpenVectorFormat.VectorBlock.StructureType.forNumber(structureType_);
          return result == null ? open_vector_format.OpenVectorFormat.VectorBlock.StructureType.UNRECOGNIZED : result;
        }
        /**
         * <code>.open_vector_format.VectorBlock.StructureType structure_type = 2;</code>
         * @param value The structureType to set.
         * @return This builder for chaining.
         */
        public Builder setStructureType(open_vector_format.OpenVectorFormat.VectorBlock.StructureType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          structureType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.StructureType structure_type = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearStructureType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          structureType_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.MicroStructuringMetadata)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.MicroStructuringMetadata)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<MicroStructuringMetadata>
          PARSER = new com.google.protobuf.AbstractParser<MicroStructuringMetadata>() {
        @java.lang.Override
        public MicroStructuringMetadata parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<MicroStructuringMetadata> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<MicroStructuringMetadata> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PolishingMetadataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.PolishingMetadata)
        com.google.protobuf.MessageOrBuilder {
    }
    /**
     * <pre>
     *ProcessMetaData for Polishing
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.PolishingMetadata}
     */
    public static final class PolishingMetadata extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.PolishingMetadata)
        PolishingMetadataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PolishingMetadata.newBuilder() to construct.
      private PolishingMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PolishingMetadata() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PolishingMetadata();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PolishingMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PolishingMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.class, open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.Builder.class);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata other = (open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata) obj;

        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *ProcessMetaData for Polishing
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.PolishingMetadata}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.PolishingMetadata)
          open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PolishingMetadata_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PolishingMetadata_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.class, open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PolishingMetadata_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata build() {
          open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata result = new open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata(this);
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.PolishingMetadata)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.PolishingMetadata)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PolishingMetadata>
          PARSER = new com.google.protobuf.AbstractParser<PolishingMetadata>() {
        @java.lang.Override
        public PolishingMetadata parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PolishingMetadata> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PolishingMetadata> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LineSequenceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.LineSequence)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated float points = 1;</code>
       * @return A list containing the points.
       */
      java.util.List<java.lang.Float> getPointsList();
      /**
       * <code>repeated float points = 1;</code>
       * @return The count of points.
       */
      int getPointsCount();
      /**
       * <code>repeated float points = 1;</code>
       * @param index The index of the element to return.
       * @return The points at the given index.
       */
      float getPoints(int index);
    }
    /**
     * <pre>
     *LineSequence:
     *A lineSequence is defined by a set of vertex points (x,y), 
     *connected contiguously in the listed order by straight line segments.
     *A closed lineSequence can also be called a polygon.
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.LineSequence}
     */
    public static final class LineSequence extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.LineSequence)
        LineSequenceOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LineSequence.newBuilder() to construct.
      private LineSequence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LineSequence() {
        points_ = emptyFloatList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LineSequence();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequence_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequence_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.class, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.Builder.class);
      }

      public static final int POINTS_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.FloatList points_ =
          emptyFloatList();
      /**
       * <code>repeated float points = 1;</code>
       * @return A list containing the points.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getPointsList() {
        return points_;
      }
      /**
       * <code>repeated float points = 1;</code>
       * @return The count of points.
       */
      public int getPointsCount() {
        return points_.size();
      }
      /**
       * <code>repeated float points = 1;</code>
       * @param index The index of the element to return.
       * @return The points at the given index.
       */
      public float getPoints(int index) {
        return points_.getFloat(index);
      }
      private int pointsMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getPointsList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(pointsMemoizedSerializedSize);
        }
        for (int i = 0; i < points_.size(); i++) {
          output.writeFloatNoTag(points_.getFloat(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 4 * getPointsList().size();
          size += dataSize;
          if (!getPointsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          pointsMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.LineSequence)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.LineSequence other = (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence) obj;

        if (!getPointsList()
            .equals(other.getPointsList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getPointsCount() > 0) {
          hash = (37 * hash) + POINTS_FIELD_NUMBER;
          hash = (53 * hash) + getPointsList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.LineSequence prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *LineSequence:
       *A lineSequence is defined by a set of vertex points (x,y), 
       *connected contiguously in the listed order by straight line segments.
       *A closed lineSequence can also be called a polygon.
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.LineSequence}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.LineSequence)
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequence_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequence_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.class, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          points_ = emptyFloatList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequence_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence build() {
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequence result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequence result = new open_vector_format.OpenVectorFormat.VectorBlock.LineSequence(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.LineSequence result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            points_.makeImmutable();
            result.points_ = points_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.LineSequence) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.LineSequence)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.LineSequence other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.getDefaultInstance()) return this;
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              points_.makeImmutable();
              bitField0_ |= 0x00000001;
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  float v = input.readFloat();
                  ensurePointsIsMutable();
                  points_.addFloat(v);
                  break;
                } // case 13
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensurePointsIsMutable(alloc / 4);
                  while (input.getBytesUntilLimit() > 0) {
                    points_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.FloatList points_ = emptyFloatList();
        private void ensurePointsIsMutable() {
          if (!points_.isModifiable()) {
            points_ = makeMutableCopy(points_);
          }
          bitField0_ |= 0x00000001;
        }
        private void ensurePointsIsMutable(int capacity) {
          if (!points_.isModifiable()) {
            points_ = makeMutableCopy(points_, capacity);
          }
          bitField0_ |= 0x00000001;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return A list containing the points.
         */
        public java.util.List<java.lang.Float>
            getPointsList() {
          points_.makeImmutable();
          return points_;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return The count of points.
         */
        public int getPointsCount() {
          return points_.size();
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param index The index of the element to return.
         * @return The points at the given index.
         */
        public float getPoints(int index) {
          return points_.getFloat(index);
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param index The index to set the value at.
         * @param value The points to set.
         * @return This builder for chaining.
         */
        public Builder setPoints(
            int index, float value) {

          ensurePointsIsMutable();
          points_.setFloat(index, value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param value The points to add.
         * @return This builder for chaining.
         */
        public Builder addPoints(float value) {

          ensurePointsIsMutable();
          points_.addFloat(value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param values The points to add.
         * @return This builder for chaining.
         */
        public Builder addAllPoints(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensurePointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, points_);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPoints() {
          points_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.LineSequence)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.LineSequence)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.LineSequence DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.LineSequence();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LineSequence>
          PARSER = new com.google.protobuf.AbstractParser<LineSequence>() {
        @java.lang.Override
        public LineSequence parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<LineSequence> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LineSequence> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LineSequence3DOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.LineSequence3D)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated float points = 1;</code>
       * @return A list containing the points.
       */
      java.util.List<java.lang.Float> getPointsList();
      /**
       * <code>repeated float points = 1;</code>
       * @return The count of points.
       */
      int getPointsCount();
      /**
       * <code>repeated float points = 1;</code>
       * @param index The index of the element to return.
       * @return The points at the given index.
       */
      float getPoints(int index);
    }
    /**
     * <pre>
     *LineSequence3D:
     *A lineSequence3D is defined by a set of vertex points (x,y,z) in 3D space, 
     *connected contiguously in the listed order by straight line segments.
     *A closed lineSequence can also be called a polygon.
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.LineSequence3D}
     */
    public static final class LineSequence3D extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.LineSequence3D)
        LineSequence3DOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LineSequence3D.newBuilder() to construct.
      private LineSequence3D(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LineSequence3D() {
        points_ = emptyFloatList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LineSequence3D();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequence3D_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequence3D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.class, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.Builder.class);
      }

      public static final int POINTS_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.FloatList points_ =
          emptyFloatList();
      /**
       * <code>repeated float points = 1;</code>
       * @return A list containing the points.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getPointsList() {
        return points_;
      }
      /**
       * <code>repeated float points = 1;</code>
       * @return The count of points.
       */
      public int getPointsCount() {
        return points_.size();
      }
      /**
       * <code>repeated float points = 1;</code>
       * @param index The index of the element to return.
       * @return The points at the given index.
       */
      public float getPoints(int index) {
        return points_.getFloat(index);
      }
      private int pointsMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getPointsList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(pointsMemoizedSerializedSize);
        }
        for (int i = 0; i < points_.size(); i++) {
          output.writeFloatNoTag(points_.getFloat(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 4 * getPointsList().size();
          size += dataSize;
          if (!getPointsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          pointsMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D other = (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D) obj;

        if (!getPointsList()
            .equals(other.getPointsList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getPointsCount() > 0) {
          hash = (37 * hash) + POINTS_FIELD_NUMBER;
          hash = (53 * hash) + getPointsList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *LineSequence3D:
       *A lineSequence3D is defined by a set of vertex points (x,y,z) in 3D space, 
       *connected contiguously in the listed order by straight line segments.
       *A closed lineSequence can also be called a polygon.
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.LineSequence3D}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.LineSequence3D)
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3DOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequence3D_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequence3D_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.class, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          points_ = emptyFloatList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequence3D_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D build() {
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D result = new open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            points_.makeImmutable();
            result.points_ = points_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.getDefaultInstance()) return this;
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              points_.makeImmutable();
              bitField0_ |= 0x00000001;
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  float v = input.readFloat();
                  ensurePointsIsMutable();
                  points_.addFloat(v);
                  break;
                } // case 13
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensurePointsIsMutable(alloc / 4);
                  while (input.getBytesUntilLimit() > 0) {
                    points_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.FloatList points_ = emptyFloatList();
        private void ensurePointsIsMutable() {
          if (!points_.isModifiable()) {
            points_ = makeMutableCopy(points_);
          }
          bitField0_ |= 0x00000001;
        }
        private void ensurePointsIsMutable(int capacity) {
          if (!points_.isModifiable()) {
            points_ = makeMutableCopy(points_, capacity);
          }
          bitField0_ |= 0x00000001;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return A list containing the points.
         */
        public java.util.List<java.lang.Float>
            getPointsList() {
          points_.makeImmutable();
          return points_;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return The count of points.
         */
        public int getPointsCount() {
          return points_.size();
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param index The index of the element to return.
         * @return The points at the given index.
         */
        public float getPoints(int index) {
          return points_.getFloat(index);
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param index The index to set the value at.
         * @param value The points to set.
         * @return This builder for chaining.
         */
        public Builder setPoints(
            int index, float value) {

          ensurePointsIsMutable();
          points_.setFloat(index, value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param value The points to add.
         * @return This builder for chaining.
         */
        public Builder addPoints(float value) {

          ensurePointsIsMutable();
          points_.addFloat(value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param values The points to add.
         * @return This builder for chaining.
         */
        public Builder addAllPoints(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensurePointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, points_);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPoints() {
          points_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.LineSequence3D)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.LineSequence3D)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LineSequence3D>
          PARSER = new com.google.protobuf.AbstractParser<LineSequence3D>() {
        @java.lang.Override
        public LineSequence3D parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<LineSequence3D> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LineSequence3D> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface HatchesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.Hatches)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated float points = 1;</code>
       * @return A list containing the points.
       */
      java.util.List<java.lang.Float> getPointsList();
      /**
       * <code>repeated float points = 1;</code>
       * @return The count of points.
       */
      int getPointsCount();
      /**
       * <code>repeated float points = 1;</code>
       * @param index The index of the element to return.
       * @return The points at the given index.
       */
      float getPoints(int index);
    }
    /**
     * <pre>
     *Hatches:
     *A hatch is a set of independent straight lines,
     *each defined by one start and one end point (x,y) for 2D.
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.Hatches}
     */
    public static final class Hatches extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.Hatches)
        HatchesOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Hatches.newBuilder() to construct.
      private Hatches(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Hatches() {
        points_ = emptyFloatList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Hatches();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Hatches_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Hatches_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.Hatches.class, open_vector_format.OpenVectorFormat.VectorBlock.Hatches.Builder.class);
      }

      public static final int POINTS_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.FloatList points_ =
          emptyFloatList();
      /**
       * <code>repeated float points = 1;</code>
       * @return A list containing the points.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getPointsList() {
        return points_;
      }
      /**
       * <code>repeated float points = 1;</code>
       * @return The count of points.
       */
      public int getPointsCount() {
        return points_.size();
      }
      /**
       * <code>repeated float points = 1;</code>
       * @param index The index of the element to return.
       * @return The points at the given index.
       */
      public float getPoints(int index) {
        return points_.getFloat(index);
      }
      private int pointsMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getPointsList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(pointsMemoizedSerializedSize);
        }
        for (int i = 0; i < points_.size(); i++) {
          output.writeFloatNoTag(points_.getFloat(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 4 * getPointsList().size();
          size += dataSize;
          if (!getPointsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          pointsMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.Hatches)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.Hatches other = (open_vector_format.OpenVectorFormat.VectorBlock.Hatches) obj;

        if (!getPointsList()
            .equals(other.getPointsList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getPointsCount() > 0) {
          hash = (37 * hash) + POINTS_FIELD_NUMBER;
          hash = (53 * hash) + getPointsList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.Hatches prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *Hatches:
       *A hatch is a set of independent straight lines,
       *each defined by one start and one end point (x,y) for 2D.
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.Hatches}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.Hatches)
          open_vector_format.OpenVectorFormat.VectorBlock.HatchesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Hatches_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Hatches_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.Hatches.class, open_vector_format.OpenVectorFormat.VectorBlock.Hatches.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.Hatches.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          points_ = emptyFloatList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Hatches_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Hatches getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.Hatches.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Hatches build() {
          open_vector_format.OpenVectorFormat.VectorBlock.Hatches result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Hatches buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.Hatches result = new open_vector_format.OpenVectorFormat.VectorBlock.Hatches(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.Hatches result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            points_.makeImmutable();
            result.points_ = points_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.Hatches) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.Hatches)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.Hatches other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.Hatches.getDefaultInstance()) return this;
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              points_.makeImmutable();
              bitField0_ |= 0x00000001;
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  float v = input.readFloat();
                  ensurePointsIsMutable();
                  points_.addFloat(v);
                  break;
                } // case 13
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensurePointsIsMutable(alloc / 4);
                  while (input.getBytesUntilLimit() > 0) {
                    points_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.FloatList points_ = emptyFloatList();
        private void ensurePointsIsMutable() {
          if (!points_.isModifiable()) {
            points_ = makeMutableCopy(points_);
          }
          bitField0_ |= 0x00000001;
        }
        private void ensurePointsIsMutable(int capacity) {
          if (!points_.isModifiable()) {
            points_ = makeMutableCopy(points_, capacity);
          }
          bitField0_ |= 0x00000001;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return A list containing the points.
         */
        public java.util.List<java.lang.Float>
            getPointsList() {
          points_.makeImmutable();
          return points_;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return The count of points.
         */
        public int getPointsCount() {
          return points_.size();
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param index The index of the element to return.
         * @return The points at the given index.
         */
        public float getPoints(int index) {
          return points_.getFloat(index);
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param index The index to set the value at.
         * @param value The points to set.
         * @return This builder for chaining.
         */
        public Builder setPoints(
            int index, float value) {

          ensurePointsIsMutable();
          points_.setFloat(index, value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param value The points to add.
         * @return This builder for chaining.
         */
        public Builder addPoints(float value) {

          ensurePointsIsMutable();
          points_.addFloat(value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param values The points to add.
         * @return This builder for chaining.
         */
        public Builder addAllPoints(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensurePointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, points_);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPoints() {
          points_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.Hatches)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.Hatches)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.Hatches DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.Hatches();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Hatches>
          PARSER = new com.google.protobuf.AbstractParser<Hatches>() {
        @java.lang.Override
        public Hatches parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Hatches> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Hatches> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.Hatches getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface Hatches3DOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.Hatches3D)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated float points = 1;</code>
       * @return A list containing the points.
       */
      java.util.List<java.lang.Float> getPointsList();
      /**
       * <code>repeated float points = 1;</code>
       * @return The count of points.
       */
      int getPointsCount();
      /**
       * <code>repeated float points = 1;</code>
       * @param index The index of the element to return.
       * @return The points at the given index.
       */
      float getPoints(int index);
    }
    /**
     * <pre>
     *Hatches3D:
     *A hatch is a set of independent straight lines,
     *each defined by one start and one end point (x,y,z) for 3D.
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.Hatches3D}
     */
    public static final class Hatches3D extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.Hatches3D)
        Hatches3DOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Hatches3D.newBuilder() to construct.
      private Hatches3D(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Hatches3D() {
        points_ = emptyFloatList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Hatches3D();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Hatches3D_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Hatches3D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.class, open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.Builder.class);
      }

      public static final int POINTS_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.FloatList points_ =
          emptyFloatList();
      /**
       * <code>repeated float points = 1;</code>
       * @return A list containing the points.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getPointsList() {
        return points_;
      }
      /**
       * <code>repeated float points = 1;</code>
       * @return The count of points.
       */
      public int getPointsCount() {
        return points_.size();
      }
      /**
       * <code>repeated float points = 1;</code>
       * @param index The index of the element to return.
       * @return The points at the given index.
       */
      public float getPoints(int index) {
        return points_.getFloat(index);
      }
      private int pointsMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getPointsList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(pointsMemoizedSerializedSize);
        }
        for (int i = 0; i < points_.size(); i++) {
          output.writeFloatNoTag(points_.getFloat(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 4 * getPointsList().size();
          size += dataSize;
          if (!getPointsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          pointsMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D other = (open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D) obj;

        if (!getPointsList()
            .equals(other.getPointsList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getPointsCount() > 0) {
          hash = (37 * hash) + POINTS_FIELD_NUMBER;
          hash = (53 * hash) + getPointsList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *Hatches3D:
       *A hatch is a set of independent straight lines,
       *each defined by one start and one end point (x,y,z) for 3D.
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.Hatches3D}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.Hatches3D)
          open_vector_format.OpenVectorFormat.VectorBlock.Hatches3DOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Hatches3D_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Hatches3D_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.class, open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          points_ = emptyFloatList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Hatches3D_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D build() {
          open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D result = new open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            points_.makeImmutable();
            result.points_ = points_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.getDefaultInstance()) return this;
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              points_.makeImmutable();
              bitField0_ |= 0x00000001;
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  float v = input.readFloat();
                  ensurePointsIsMutable();
                  points_.addFloat(v);
                  break;
                } // case 13
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensurePointsIsMutable(alloc / 4);
                  while (input.getBytesUntilLimit() > 0) {
                    points_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.FloatList points_ = emptyFloatList();
        private void ensurePointsIsMutable() {
          if (!points_.isModifiable()) {
            points_ = makeMutableCopy(points_);
          }
          bitField0_ |= 0x00000001;
        }
        private void ensurePointsIsMutable(int capacity) {
          if (!points_.isModifiable()) {
            points_ = makeMutableCopy(points_, capacity);
          }
          bitField0_ |= 0x00000001;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return A list containing the points.
         */
        public java.util.List<java.lang.Float>
            getPointsList() {
          points_.makeImmutable();
          return points_;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return The count of points.
         */
        public int getPointsCount() {
          return points_.size();
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param index The index of the element to return.
         * @return The points at the given index.
         */
        public float getPoints(int index) {
          return points_.getFloat(index);
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param index The index to set the value at.
         * @param value The points to set.
         * @return This builder for chaining.
         */
        public Builder setPoints(
            int index, float value) {

          ensurePointsIsMutable();
          points_.setFloat(index, value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param value The points to add.
         * @return This builder for chaining.
         */
        public Builder addPoints(float value) {

          ensurePointsIsMutable();
          points_.addFloat(value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param values The points to add.
         * @return This builder for chaining.
         */
        public Builder addAllPoints(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensurePointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, points_);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPoints() {
          points_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.Hatches3D)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.Hatches3D)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Hatches3D>
          PARSER = new com.google.protobuf.AbstractParser<Hatches3D>() {
        @java.lang.Override
        public Hatches3D parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Hatches3D> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Hatches3D> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PointSequenceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.PointSequence)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated float points = 1;</code>
       * @return A list containing the points.
       */
      java.util.List<java.lang.Float> getPointsList();
      /**
       * <code>repeated float points = 1;</code>
       * @return The count of points.
       */
      int getPointsCount();
      /**
       * <code>repeated float points = 1;</code>
       * @param index The index of the element to return.
       * @return The points at the given index.
       */
      float getPoints(int index);
    }
    /**
     * <pre>
     *PointSequence:
     *A point sequence is a set of points, each marked
     *for a fixed period of time. Each point consists of (x,y) for 2D.
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.PointSequence}
     */
    public static final class PointSequence extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.PointSequence)
        PointSequenceOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PointSequence.newBuilder() to construct.
      private PointSequence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PointSequence() {
        points_ = emptyFloatList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PointSequence();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PointSequence_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PointSequence_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.class, open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.Builder.class);
      }

      public static final int POINTS_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.FloatList points_ =
          emptyFloatList();
      /**
       * <code>repeated float points = 1;</code>
       * @return A list containing the points.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getPointsList() {
        return points_;
      }
      /**
       * <code>repeated float points = 1;</code>
       * @return The count of points.
       */
      public int getPointsCount() {
        return points_.size();
      }
      /**
       * <code>repeated float points = 1;</code>
       * @param index The index of the element to return.
       * @return The points at the given index.
       */
      public float getPoints(int index) {
        return points_.getFloat(index);
      }
      private int pointsMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getPointsList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(pointsMemoizedSerializedSize);
        }
        for (int i = 0; i < points_.size(); i++) {
          output.writeFloatNoTag(points_.getFloat(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 4 * getPointsList().size();
          size += dataSize;
          if (!getPointsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          pointsMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.PointSequence)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.PointSequence other = (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence) obj;

        if (!getPointsList()
            .equals(other.getPointsList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getPointsCount() > 0) {
          hash = (37 * hash) + POINTS_FIELD_NUMBER;
          hash = (53 * hash) + getPointsList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.PointSequence prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *PointSequence:
       *A point sequence is a set of points, each marked
       *for a fixed period of time. Each point consists of (x,y) for 2D.
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.PointSequence}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.PointSequence)
          open_vector_format.OpenVectorFormat.VectorBlock.PointSequenceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PointSequence_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PointSequence_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.class, open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          points_ = emptyFloatList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PointSequence_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence build() {
          open_vector_format.OpenVectorFormat.VectorBlock.PointSequence result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.PointSequence result = new open_vector_format.OpenVectorFormat.VectorBlock.PointSequence(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.PointSequence result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            points_.makeImmutable();
            result.points_ = points_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.PointSequence) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.PointSequence)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.PointSequence other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.getDefaultInstance()) return this;
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              points_.makeImmutable();
              bitField0_ |= 0x00000001;
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  float v = input.readFloat();
                  ensurePointsIsMutable();
                  points_.addFloat(v);
                  break;
                } // case 13
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensurePointsIsMutable(alloc / 4);
                  while (input.getBytesUntilLimit() > 0) {
                    points_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.FloatList points_ = emptyFloatList();
        private void ensurePointsIsMutable() {
          if (!points_.isModifiable()) {
            points_ = makeMutableCopy(points_);
          }
          bitField0_ |= 0x00000001;
        }
        private void ensurePointsIsMutable(int capacity) {
          if (!points_.isModifiable()) {
            points_ = makeMutableCopy(points_, capacity);
          }
          bitField0_ |= 0x00000001;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return A list containing the points.
         */
        public java.util.List<java.lang.Float>
            getPointsList() {
          points_.makeImmutable();
          return points_;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return The count of points.
         */
        public int getPointsCount() {
          return points_.size();
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param index The index of the element to return.
         * @return The points at the given index.
         */
        public float getPoints(int index) {
          return points_.getFloat(index);
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param index The index to set the value at.
         * @param value The points to set.
         * @return This builder for chaining.
         */
        public Builder setPoints(
            int index, float value) {

          ensurePointsIsMutable();
          points_.setFloat(index, value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param value The points to add.
         * @return This builder for chaining.
         */
        public Builder addPoints(float value) {

          ensurePointsIsMutable();
          points_.addFloat(value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param values The points to add.
         * @return This builder for chaining.
         */
        public Builder addAllPoints(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensurePointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, points_);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPoints() {
          points_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.PointSequence)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.PointSequence)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.PointSequence DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.PointSequence();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PointSequence>
          PARSER = new com.google.protobuf.AbstractParser<PointSequence>() {
        @java.lang.Override
        public PointSequence parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PointSequence> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PointSequence> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PointSequence3DOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.PointSequence3D)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated float points = 1;</code>
       * @return A list containing the points.
       */
      java.util.List<java.lang.Float> getPointsList();
      /**
       * <code>repeated float points = 1;</code>
       * @return The count of points.
       */
      int getPointsCount();
      /**
       * <code>repeated float points = 1;</code>
       * @param index The index of the element to return.
       * @return The points at the given index.
       */
      float getPoints(int index);
    }
    /**
     * <pre>
     *PointSequence3D:
     *A point sequence is a set of points, each marked
     *for a fixed period of time. Each point consists of (x,y,z) for 3D.
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.PointSequence3D}
     */
    public static final class PointSequence3D extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.PointSequence3D)
        PointSequence3DOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PointSequence3D.newBuilder() to construct.
      private PointSequence3D(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PointSequence3D() {
        points_ = emptyFloatList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PointSequence3D();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PointSequence3D_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PointSequence3D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.class, open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.Builder.class);
      }

      public static final int POINTS_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.FloatList points_ =
          emptyFloatList();
      /**
       * <code>repeated float points = 1;</code>
       * @return A list containing the points.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getPointsList() {
        return points_;
      }
      /**
       * <code>repeated float points = 1;</code>
       * @return The count of points.
       */
      public int getPointsCount() {
        return points_.size();
      }
      /**
       * <code>repeated float points = 1;</code>
       * @param index The index of the element to return.
       * @return The points at the given index.
       */
      public float getPoints(int index) {
        return points_.getFloat(index);
      }
      private int pointsMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getPointsList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(pointsMemoizedSerializedSize);
        }
        for (int i = 0; i < points_.size(); i++) {
          output.writeFloatNoTag(points_.getFloat(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 4 * getPointsList().size();
          size += dataSize;
          if (!getPointsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          pointsMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D other = (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D) obj;

        if (!getPointsList()
            .equals(other.getPointsList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getPointsCount() > 0) {
          hash = (37 * hash) + POINTS_FIELD_NUMBER;
          hash = (53 * hash) + getPointsList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *PointSequence3D:
       *A point sequence is a set of points, each marked
       *for a fixed period of time. Each point consists of (x,y,z) for 3D.
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.PointSequence3D}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.PointSequence3D)
          open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3DOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PointSequence3D_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PointSequence3D_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.class, open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          points_ = emptyFloatList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_PointSequence3D_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D build() {
          open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D result = new open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            points_.makeImmutable();
            result.points_ = points_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.getDefaultInstance()) return this;
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              points_.makeImmutable();
              bitField0_ |= 0x00000001;
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  float v = input.readFloat();
                  ensurePointsIsMutable();
                  points_.addFloat(v);
                  break;
                } // case 13
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensurePointsIsMutable(alloc / 4);
                  while (input.getBytesUntilLimit() > 0) {
                    points_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.FloatList points_ = emptyFloatList();
        private void ensurePointsIsMutable() {
          if (!points_.isModifiable()) {
            points_ = makeMutableCopy(points_);
          }
          bitField0_ |= 0x00000001;
        }
        private void ensurePointsIsMutable(int capacity) {
          if (!points_.isModifiable()) {
            points_ = makeMutableCopy(points_, capacity);
          }
          bitField0_ |= 0x00000001;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return A list containing the points.
         */
        public java.util.List<java.lang.Float>
            getPointsList() {
          points_.makeImmutable();
          return points_;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return The count of points.
         */
        public int getPointsCount() {
          return points_.size();
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param index The index of the element to return.
         * @return The points at the given index.
         */
        public float getPoints(int index) {
          return points_.getFloat(index);
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param index The index to set the value at.
         * @param value The points to set.
         * @return This builder for chaining.
         */
        public Builder setPoints(
            int index, float value) {

          ensurePointsIsMutable();
          points_.setFloat(index, value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param value The points to add.
         * @return This builder for chaining.
         */
        public Builder addPoints(float value) {

          ensurePointsIsMutable();
          points_.addFloat(value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @param values The points to add.
         * @return This builder for chaining.
         */
        public Builder addAllPoints(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensurePointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, points_);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPoints() {
          points_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.PointSequence3D)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.PointSequence3D)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PointSequence3D>
          PARSER = new com.google.protobuf.AbstractParser<PointSequence3D>() {
        @java.lang.Override
        public PointSequence3D parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PointSequence3D> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PointSequence3D> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ArcsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.Arcs)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>double angle = 1;</code>
       * @return The angle.
       */
      double getAngle();

      /**
       * <code>float start_dx = 2;</code>
       * @return The startDx.
       */
      float getStartDx();

      /**
       * <code>float start_dy = 3;</code>
       * @return The startDy.
       */
      float getStartDy();

      /**
       * <code>repeated float centers = 4;</code>
       * @return A list containing the centers.
       */
      java.util.List<java.lang.Float> getCentersList();
      /**
       * <code>repeated float centers = 4;</code>
       * @return The count of centers.
       */
      int getCentersCount();
      /**
       * <code>repeated float centers = 4;</code>
       * @param index The index of the element to return.
       * @return The centers at the given index.
       */
      float getCenters(int index);
    }
    /**
     * <pre>
     *An arc is defined by a start point on the circle,
     *defined in relative cartesian coordinates to the center,
     *a center point and an arc angle (degrees). Positive angles mean clockwise,
     *negative counter-clockwise rotation.
     *Multiple same radius/angle arcs are defined with repeated center coordinates (x,y).
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.Arcs}
     */
    public static final class Arcs extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.Arcs)
        ArcsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Arcs.newBuilder() to construct.
      private Arcs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Arcs() {
        centers_ = emptyFloatList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Arcs();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Arcs_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Arcs_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.Arcs.class, open_vector_format.OpenVectorFormat.VectorBlock.Arcs.Builder.class);
      }

      public static final int ANGLE_FIELD_NUMBER = 1;
      private double angle_ = 0D;
      /**
       * <code>double angle = 1;</code>
       * @return The angle.
       */
      @java.lang.Override
      public double getAngle() {
        return angle_;
      }

      public static final int START_DX_FIELD_NUMBER = 2;
      private float startDx_ = 0F;
      /**
       * <code>float start_dx = 2;</code>
       * @return The startDx.
       */
      @java.lang.Override
      public float getStartDx() {
        return startDx_;
      }

      public static final int START_DY_FIELD_NUMBER = 3;
      private float startDy_ = 0F;
      /**
       * <code>float start_dy = 3;</code>
       * @return The startDy.
       */
      @java.lang.Override
      public float getStartDy() {
        return startDy_;
      }

      public static final int CENTERS_FIELD_NUMBER = 4;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.FloatList centers_ =
          emptyFloatList();
      /**
       * <code>repeated float centers = 4;</code>
       * @return A list containing the centers.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getCentersList() {
        return centers_;
      }
      /**
       * <code>repeated float centers = 4;</code>
       * @return The count of centers.
       */
      public int getCentersCount() {
        return centers_.size();
      }
      /**
       * <code>repeated float centers = 4;</code>
       * @param index The index of the element to return.
       * @return The centers at the given index.
       */
      public float getCenters(int index) {
        return centers_.getFloat(index);
      }
      private int centersMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (java.lang.Double.doubleToRawLongBits(angle_) != 0) {
          output.writeDouble(1, angle_);
        }
        if (java.lang.Float.floatToRawIntBits(startDx_) != 0) {
          output.writeFloat(2, startDx_);
        }
        if (java.lang.Float.floatToRawIntBits(startDy_) != 0) {
          output.writeFloat(3, startDy_);
        }
        if (getCentersList().size() > 0) {
          output.writeUInt32NoTag(34);
          output.writeUInt32NoTag(centersMemoizedSerializedSize);
        }
        for (int i = 0; i < centers_.size(); i++) {
          output.writeFloatNoTag(centers_.getFloat(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (java.lang.Double.doubleToRawLongBits(angle_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, angle_);
        }
        if (java.lang.Float.floatToRawIntBits(startDx_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, startDx_);
        }
        if (java.lang.Float.floatToRawIntBits(startDy_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, startDy_);
        }
        {
          int dataSize = 0;
          dataSize = 4 * getCentersList().size();
          size += dataSize;
          if (!getCentersList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          centersMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.Arcs)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.Arcs other = (open_vector_format.OpenVectorFormat.VectorBlock.Arcs) obj;

        if (java.lang.Double.doubleToLongBits(getAngle())
            != java.lang.Double.doubleToLongBits(
                other.getAngle())) return false;
        if (java.lang.Float.floatToIntBits(getStartDx())
            != java.lang.Float.floatToIntBits(
                other.getStartDx())) return false;
        if (java.lang.Float.floatToIntBits(getStartDy())
            != java.lang.Float.floatToIntBits(
                other.getStartDy())) return false;
        if (!getCentersList()
            .equals(other.getCentersList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ANGLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAngle()));
        hash = (37 * hash) + START_DX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getStartDx());
        hash = (37 * hash) + START_DY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getStartDy());
        if (getCentersCount() > 0) {
          hash = (37 * hash) + CENTERS_FIELD_NUMBER;
          hash = (53 * hash) + getCentersList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.Arcs prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *An arc is defined by a start point on the circle,
       *defined in relative cartesian coordinates to the center,
       *a center point and an arc angle (degrees). Positive angles mean clockwise,
       *negative counter-clockwise rotation.
       *Multiple same radius/angle arcs are defined with repeated center coordinates (x,y).
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.Arcs}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.Arcs)
          open_vector_format.OpenVectorFormat.VectorBlock.ArcsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Arcs_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Arcs_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.Arcs.class, open_vector_format.OpenVectorFormat.VectorBlock.Arcs.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.Arcs.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          angle_ = 0D;
          startDx_ = 0F;
          startDy_ = 0F;
          centers_ = emptyFloatList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Arcs_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Arcs getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.Arcs.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Arcs build() {
          open_vector_format.OpenVectorFormat.VectorBlock.Arcs result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Arcs buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.Arcs result = new open_vector_format.OpenVectorFormat.VectorBlock.Arcs(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.Arcs result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.angle_ = angle_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.startDx_ = startDx_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.startDy_ = startDy_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            centers_.makeImmutable();
            result.centers_ = centers_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.Arcs) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.Arcs)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.Arcs other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.Arcs.getDefaultInstance()) return this;
          if (other.getAngle() != 0D) {
            setAngle(other.getAngle());
          }
          if (other.getStartDx() != 0F) {
            setStartDx(other.getStartDx());
          }
          if (other.getStartDy() != 0F) {
            setStartDy(other.getStartDy());
          }
          if (!other.centers_.isEmpty()) {
            if (centers_.isEmpty()) {
              centers_ = other.centers_;
              centers_.makeImmutable();
              bitField0_ |= 0x00000008;
            } else {
              ensureCentersIsMutable();
              centers_.addAll(other.centers_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {
                  angle_ = input.readDouble();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 9
                case 21: {
                  startDx_ = input.readFloat();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 21
                case 29: {
                  startDy_ = input.readFloat();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 29
                case 37: {
                  float v = input.readFloat();
                  ensureCentersIsMutable();
                  centers_.addFloat(v);
                  break;
                } // case 37
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensureCentersIsMutable(alloc / 4);
                  while (input.getBytesUntilLimit() > 0) {
                    centers_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                } // case 34
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private double angle_ ;
        /**
         * <code>double angle = 1;</code>
         * @return The angle.
         */
        @java.lang.Override
        public double getAngle() {
          return angle_;
        }
        /**
         * <code>double angle = 1;</code>
         * @param value The angle to set.
         * @return This builder for chaining.
         */
        public Builder setAngle(double value) {

          angle_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>double angle = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAngle() {
          bitField0_ = (bitField0_ & ~0x00000001);
          angle_ = 0D;
          onChanged();
          return this;
        }

        private float startDx_ ;
        /**
         * <code>float start_dx = 2;</code>
         * @return The startDx.
         */
        @java.lang.Override
        public float getStartDx() {
          return startDx_;
        }
        /**
         * <code>float start_dx = 2;</code>
         * @param value The startDx to set.
         * @return This builder for chaining.
         */
        public Builder setStartDx(float value) {

          startDx_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>float start_dx = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearStartDx() {
          bitField0_ = (bitField0_ & ~0x00000002);
          startDx_ = 0F;
          onChanged();
          return this;
        }

        private float startDy_ ;
        /**
         * <code>float start_dy = 3;</code>
         * @return The startDy.
         */
        @java.lang.Override
        public float getStartDy() {
          return startDy_;
        }
        /**
         * <code>float start_dy = 3;</code>
         * @param value The startDy to set.
         * @return This builder for chaining.
         */
        public Builder setStartDy(float value) {

          startDy_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>float start_dy = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearStartDy() {
          bitField0_ = (bitField0_ & ~0x00000004);
          startDy_ = 0F;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.FloatList centers_ = emptyFloatList();
        private void ensureCentersIsMutable() {
          if (!centers_.isModifiable()) {
            centers_ = makeMutableCopy(centers_);
          }
          bitField0_ |= 0x00000008;
        }
        private void ensureCentersIsMutable(int capacity) {
          if (!centers_.isModifiable()) {
            centers_ = makeMutableCopy(centers_, capacity);
          }
          bitField0_ |= 0x00000008;
        }
        /**
         * <code>repeated float centers = 4;</code>
         * @return A list containing the centers.
         */
        public java.util.List<java.lang.Float>
            getCentersList() {
          centers_.makeImmutable();
          return centers_;
        }
        /**
         * <code>repeated float centers = 4;</code>
         * @return The count of centers.
         */
        public int getCentersCount() {
          return centers_.size();
        }
        /**
         * <code>repeated float centers = 4;</code>
         * @param index The index of the element to return.
         * @return The centers at the given index.
         */
        public float getCenters(int index) {
          return centers_.getFloat(index);
        }
        /**
         * <code>repeated float centers = 4;</code>
         * @param index The index to set the value at.
         * @param value The centers to set.
         * @return This builder for chaining.
         */
        public Builder setCenters(
            int index, float value) {

          ensureCentersIsMutable();
          centers_.setFloat(index, value);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float centers = 4;</code>
         * @param value The centers to add.
         * @return This builder for chaining.
         */
        public Builder addCenters(float value) {

          ensureCentersIsMutable();
          centers_.addFloat(value);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float centers = 4;</code>
         * @param values The centers to add.
         * @return This builder for chaining.
         */
        public Builder addAllCenters(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureCentersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, centers_);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float centers = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearCenters() {
          centers_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.Arcs)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.Arcs)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.Arcs DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.Arcs();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Arcs>
          PARSER = new com.google.protobuf.AbstractParser<Arcs>() {
        @java.lang.Override
        public Arcs parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Arcs> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Arcs> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.Arcs getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface Arcs3DOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.Arcs3D)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>double angle = 1;</code>
       * @return The angle.
       */
      double getAngle();

      /**
       * <code>float start_dx = 2;</code>
       * @return The startDx.
       */
      float getStartDx();

      /**
       * <code>float start_dy = 3;</code>
       * @return The startDy.
       */
      float getStartDy();

      /**
       * <code>float start_dz = 4;</code>
       * @return The startDz.
       */
      float getStartDz();

      /**
       * <code>repeated float centers = 5;</code>
       * @return A list containing the centers.
       */
      java.util.List<java.lang.Float> getCentersList();
      /**
       * <code>repeated float centers = 5;</code>
       * @return The count of centers.
       */
      int getCentersCount();
      /**
       * <code>repeated float centers = 5;</code>
       * @param index The index of the element to return.
       * @return The centers at the given index.
       */
      float getCenters(int index);
    }
    /**
     * <pre>
     *An arc3D (edge of a plate) is defined by a start point on the circle,
     *defined in relative cartesian coordinates to the center,
     *a center point and an arc angle (degrees). Positive angles mean clockwise,
     *negative counter-clockwise rotation.
     *Multiple same radius/angle arcs are defined with repeated center coordinates (x,y,z) for 3D.
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.Arcs3D}
     */
    public static final class Arcs3D extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.Arcs3D)
        Arcs3DOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Arcs3D.newBuilder() to construct.
      private Arcs3D(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Arcs3D() {
        centers_ = emptyFloatList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Arcs3D();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Arcs3D_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Arcs3D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.class, open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.Builder.class);
      }

      public static final int ANGLE_FIELD_NUMBER = 1;
      private double angle_ = 0D;
      /**
       * <code>double angle = 1;</code>
       * @return The angle.
       */
      @java.lang.Override
      public double getAngle() {
        return angle_;
      }

      public static final int START_DX_FIELD_NUMBER = 2;
      private float startDx_ = 0F;
      /**
       * <code>float start_dx = 2;</code>
       * @return The startDx.
       */
      @java.lang.Override
      public float getStartDx() {
        return startDx_;
      }

      public static final int START_DY_FIELD_NUMBER = 3;
      private float startDy_ = 0F;
      /**
       * <code>float start_dy = 3;</code>
       * @return The startDy.
       */
      @java.lang.Override
      public float getStartDy() {
        return startDy_;
      }

      public static final int START_DZ_FIELD_NUMBER = 4;
      private float startDz_ = 0F;
      /**
       * <code>float start_dz = 4;</code>
       * @return The startDz.
       */
      @java.lang.Override
      public float getStartDz() {
        return startDz_;
      }

      public static final int CENTERS_FIELD_NUMBER = 5;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.FloatList centers_ =
          emptyFloatList();
      /**
       * <code>repeated float centers = 5;</code>
       * @return A list containing the centers.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getCentersList() {
        return centers_;
      }
      /**
       * <code>repeated float centers = 5;</code>
       * @return The count of centers.
       */
      public int getCentersCount() {
        return centers_.size();
      }
      /**
       * <code>repeated float centers = 5;</code>
       * @param index The index of the element to return.
       * @return The centers at the given index.
       */
      public float getCenters(int index) {
        return centers_.getFloat(index);
      }
      private int centersMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (java.lang.Double.doubleToRawLongBits(angle_) != 0) {
          output.writeDouble(1, angle_);
        }
        if (java.lang.Float.floatToRawIntBits(startDx_) != 0) {
          output.writeFloat(2, startDx_);
        }
        if (java.lang.Float.floatToRawIntBits(startDy_) != 0) {
          output.writeFloat(3, startDy_);
        }
        if (java.lang.Float.floatToRawIntBits(startDz_) != 0) {
          output.writeFloat(4, startDz_);
        }
        if (getCentersList().size() > 0) {
          output.writeUInt32NoTag(42);
          output.writeUInt32NoTag(centersMemoizedSerializedSize);
        }
        for (int i = 0; i < centers_.size(); i++) {
          output.writeFloatNoTag(centers_.getFloat(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (java.lang.Double.doubleToRawLongBits(angle_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, angle_);
        }
        if (java.lang.Float.floatToRawIntBits(startDx_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, startDx_);
        }
        if (java.lang.Float.floatToRawIntBits(startDy_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, startDy_);
        }
        if (java.lang.Float.floatToRawIntBits(startDz_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, startDz_);
        }
        {
          int dataSize = 0;
          dataSize = 4 * getCentersList().size();
          size += dataSize;
          if (!getCentersList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          centersMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D other = (open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D) obj;

        if (java.lang.Double.doubleToLongBits(getAngle())
            != java.lang.Double.doubleToLongBits(
                other.getAngle())) return false;
        if (java.lang.Float.floatToIntBits(getStartDx())
            != java.lang.Float.floatToIntBits(
                other.getStartDx())) return false;
        if (java.lang.Float.floatToIntBits(getStartDy())
            != java.lang.Float.floatToIntBits(
                other.getStartDy())) return false;
        if (java.lang.Float.floatToIntBits(getStartDz())
            != java.lang.Float.floatToIntBits(
                other.getStartDz())) return false;
        if (!getCentersList()
            .equals(other.getCentersList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ANGLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAngle()));
        hash = (37 * hash) + START_DX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getStartDx());
        hash = (37 * hash) + START_DY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getStartDy());
        hash = (37 * hash) + START_DZ_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getStartDz());
        if (getCentersCount() > 0) {
          hash = (37 * hash) + CENTERS_FIELD_NUMBER;
          hash = (53 * hash) + getCentersList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *An arc3D (edge of a plate) is defined by a start point on the circle,
       *defined in relative cartesian coordinates to the center,
       *a center point and an arc angle (degrees). Positive angles mean clockwise,
       *negative counter-clockwise rotation.
       *Multiple same radius/angle arcs are defined with repeated center coordinates (x,y,z) for 3D.
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.Arcs3D}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.Arcs3D)
          open_vector_format.OpenVectorFormat.VectorBlock.Arcs3DOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Arcs3D_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Arcs3D_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.class, open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          angle_ = 0D;
          startDx_ = 0F;
          startDy_ = 0F;
          startDz_ = 0F;
          centers_ = emptyFloatList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Arcs3D_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D build() {
          open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D result = new open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.angle_ = angle_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.startDx_ = startDx_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.startDy_ = startDy_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.startDz_ = startDz_;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            centers_.makeImmutable();
            result.centers_ = centers_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.getDefaultInstance()) return this;
          if (other.getAngle() != 0D) {
            setAngle(other.getAngle());
          }
          if (other.getStartDx() != 0F) {
            setStartDx(other.getStartDx());
          }
          if (other.getStartDy() != 0F) {
            setStartDy(other.getStartDy());
          }
          if (other.getStartDz() != 0F) {
            setStartDz(other.getStartDz());
          }
          if (!other.centers_.isEmpty()) {
            if (centers_.isEmpty()) {
              centers_ = other.centers_;
              centers_.makeImmutable();
              bitField0_ |= 0x00000010;
            } else {
              ensureCentersIsMutable();
              centers_.addAll(other.centers_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {
                  angle_ = input.readDouble();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 9
                case 21: {
                  startDx_ = input.readFloat();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 21
                case 29: {
                  startDy_ = input.readFloat();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 29
                case 37: {
                  startDz_ = input.readFloat();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 37
                case 45: {
                  float v = input.readFloat();
                  ensureCentersIsMutable();
                  centers_.addFloat(v);
                  break;
                } // case 45
                case 42: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensureCentersIsMutable(alloc / 4);
                  while (input.getBytesUntilLimit() > 0) {
                    centers_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                } // case 42
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private double angle_ ;
        /**
         * <code>double angle = 1;</code>
         * @return The angle.
         */
        @java.lang.Override
        public double getAngle() {
          return angle_;
        }
        /**
         * <code>double angle = 1;</code>
         * @param value The angle to set.
         * @return This builder for chaining.
         */
        public Builder setAngle(double value) {

          angle_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>double angle = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAngle() {
          bitField0_ = (bitField0_ & ~0x00000001);
          angle_ = 0D;
          onChanged();
          return this;
        }

        private float startDx_ ;
        /**
         * <code>float start_dx = 2;</code>
         * @return The startDx.
         */
        @java.lang.Override
        public float getStartDx() {
          return startDx_;
        }
        /**
         * <code>float start_dx = 2;</code>
         * @param value The startDx to set.
         * @return This builder for chaining.
         */
        public Builder setStartDx(float value) {

          startDx_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>float start_dx = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearStartDx() {
          bitField0_ = (bitField0_ & ~0x00000002);
          startDx_ = 0F;
          onChanged();
          return this;
        }

        private float startDy_ ;
        /**
         * <code>float start_dy = 3;</code>
         * @return The startDy.
         */
        @java.lang.Override
        public float getStartDy() {
          return startDy_;
        }
        /**
         * <code>float start_dy = 3;</code>
         * @param value The startDy to set.
         * @return This builder for chaining.
         */
        public Builder setStartDy(float value) {

          startDy_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>float start_dy = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearStartDy() {
          bitField0_ = (bitField0_ & ~0x00000004);
          startDy_ = 0F;
          onChanged();
          return this;
        }

        private float startDz_ ;
        /**
         * <code>float start_dz = 4;</code>
         * @return The startDz.
         */
        @java.lang.Override
        public float getStartDz() {
          return startDz_;
        }
        /**
         * <code>float start_dz = 4;</code>
         * @param value The startDz to set.
         * @return This builder for chaining.
         */
        public Builder setStartDz(float value) {

          startDz_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>float start_dz = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearStartDz() {
          bitField0_ = (bitField0_ & ~0x00000008);
          startDz_ = 0F;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.FloatList centers_ = emptyFloatList();
        private void ensureCentersIsMutable() {
          if (!centers_.isModifiable()) {
            centers_ = makeMutableCopy(centers_);
          }
          bitField0_ |= 0x00000010;
        }
        private void ensureCentersIsMutable(int capacity) {
          if (!centers_.isModifiable()) {
            centers_ = makeMutableCopy(centers_, capacity);
          }
          bitField0_ |= 0x00000010;
        }
        /**
         * <code>repeated float centers = 5;</code>
         * @return A list containing the centers.
         */
        public java.util.List<java.lang.Float>
            getCentersList() {
          centers_.makeImmutable();
          return centers_;
        }
        /**
         * <code>repeated float centers = 5;</code>
         * @return The count of centers.
         */
        public int getCentersCount() {
          return centers_.size();
        }
        /**
         * <code>repeated float centers = 5;</code>
         * @param index The index of the element to return.
         * @return The centers at the given index.
         */
        public float getCenters(int index) {
          return centers_.getFloat(index);
        }
        /**
         * <code>repeated float centers = 5;</code>
         * @param index The index to set the value at.
         * @param value The centers to set.
         * @return This builder for chaining.
         */
        public Builder setCenters(
            int index, float value) {

          ensureCentersIsMutable();
          centers_.setFloat(index, value);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float centers = 5;</code>
         * @param value The centers to add.
         * @return This builder for chaining.
         */
        public Builder addCenters(float value) {

          ensureCentersIsMutable();
          centers_.addFloat(value);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float centers = 5;</code>
         * @param values The centers to add.
         * @return This builder for chaining.
         */
        public Builder addAllCenters(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureCentersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, centers_);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float centers = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearCenters() {
          centers_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.Arcs3D)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.Arcs3D)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Arcs3D>
          PARSER = new com.google.protobuf.AbstractParser<Arcs3D>() {
        @java.lang.Override
        public Arcs3D parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Arcs3D> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Arcs3D> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface EllipsesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.Ellipses)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>float a = 1;</code>
       * @return The a.
       */
      float getA();

      /**
       * <code>float b = 2;</code>
       * @return The b.
       */
      float getB();

      /**
       * <code>double phi0 = 3;</code>
       * @return The phi0.
       */
      double getPhi0();

      /**
       * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
       * @return Whether the ellipsesArcs field is set.
       */
      boolean hasEllipsesArcs();
      /**
       * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
       * @return The ellipsesArcs.
       */
      open_vector_format.OpenVectorFormat.VectorBlock.Arcs getEllipsesArcs();
      /**
       * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
       */
      open_vector_format.OpenVectorFormat.VectorBlock.ArcsOrBuilder getEllipsesArcsOrBuilder();
    }
    /**
     * <pre>
     *An ellipse is defined like an arc, with additional parameters
     *defining the ellipse shape: a/b length of ellipse half axis
     *phi0 phase zero angle (start point of ellipse relative to end of a)
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.Ellipses}
     */
    public static final class Ellipses extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.Ellipses)
        EllipsesOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Ellipses.newBuilder() to construct.
      private Ellipses(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Ellipses() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Ellipses();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Ellipses_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Ellipses_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.class, open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.Builder.class);
      }

      private int bitField0_;
      public static final int A_FIELD_NUMBER = 1;
      private float a_ = 0F;
      /**
       * <code>float a = 1;</code>
       * @return The a.
       */
      @java.lang.Override
      public float getA() {
        return a_;
      }

      public static final int B_FIELD_NUMBER = 2;
      private float b_ = 0F;
      /**
       * <code>float b = 2;</code>
       * @return The b.
       */
      @java.lang.Override
      public float getB() {
        return b_;
      }

      public static final int PHI0_FIELD_NUMBER = 3;
      private double phi0_ = 0D;
      /**
       * <code>double phi0 = 3;</code>
       * @return The phi0.
       */
      @java.lang.Override
      public double getPhi0() {
        return phi0_;
      }

      public static final int ELLIPSES_ARCS_FIELD_NUMBER = 4;
      private open_vector_format.OpenVectorFormat.VectorBlock.Arcs ellipsesArcs_;
      /**
       * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
       * @return Whether the ellipsesArcs field is set.
       */
      @java.lang.Override
      public boolean hasEllipsesArcs() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
       * @return The ellipsesArcs.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.Arcs getEllipsesArcs() {
        return ellipsesArcs_ == null ? open_vector_format.OpenVectorFormat.VectorBlock.Arcs.getDefaultInstance() : ellipsesArcs_;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.ArcsOrBuilder getEllipsesArcsOrBuilder() {
        return ellipsesArcs_ == null ? open_vector_format.OpenVectorFormat.VectorBlock.Arcs.getDefaultInstance() : ellipsesArcs_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (java.lang.Float.floatToRawIntBits(a_) != 0) {
          output.writeFloat(1, a_);
        }
        if (java.lang.Float.floatToRawIntBits(b_) != 0) {
          output.writeFloat(2, b_);
        }
        if (java.lang.Double.doubleToRawLongBits(phi0_) != 0) {
          output.writeDouble(3, phi0_);
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(4, getEllipsesArcs());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (java.lang.Float.floatToRawIntBits(a_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, a_);
        }
        if (java.lang.Float.floatToRawIntBits(b_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, b_);
        }
        if (java.lang.Double.doubleToRawLongBits(phi0_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, phi0_);
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getEllipsesArcs());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.Ellipses)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.Ellipses other = (open_vector_format.OpenVectorFormat.VectorBlock.Ellipses) obj;

        if (java.lang.Float.floatToIntBits(getA())
            != java.lang.Float.floatToIntBits(
                other.getA())) return false;
        if (java.lang.Float.floatToIntBits(getB())
            != java.lang.Float.floatToIntBits(
                other.getB())) return false;
        if (java.lang.Double.doubleToLongBits(getPhi0())
            != java.lang.Double.doubleToLongBits(
                other.getPhi0())) return false;
        if (hasEllipsesArcs() != other.hasEllipsesArcs()) return false;
        if (hasEllipsesArcs()) {
          if (!getEllipsesArcs()
              .equals(other.getEllipsesArcs())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + A_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getA());
        hash = (37 * hash) + B_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getB());
        hash = (37 * hash) + PHI0_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPhi0()));
        if (hasEllipsesArcs()) {
          hash = (37 * hash) + ELLIPSES_ARCS_FIELD_NUMBER;
          hash = (53 * hash) + getEllipsesArcs().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Ellipses parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Ellipses parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Ellipses parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Ellipses parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Ellipses parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Ellipses parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Ellipses parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Ellipses parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Ellipses parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Ellipses parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Ellipses parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.Ellipses parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.Ellipses prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *An ellipse is defined like an arc, with additional parameters
       *defining the ellipse shape: a/b length of ellipse half axis
       *phi0 phase zero angle (start point of ellipse relative to end of a)
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.Ellipses}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.Ellipses)
          open_vector_format.OpenVectorFormat.VectorBlock.EllipsesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Ellipses_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Ellipses_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.class, open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getEllipsesArcsFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          a_ = 0F;
          b_ = 0F;
          phi0_ = 0D;
          ellipsesArcs_ = null;
          if (ellipsesArcsBuilder_ != null) {
            ellipsesArcsBuilder_.dispose();
            ellipsesArcsBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_Ellipses_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Ellipses getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Ellipses build() {
          open_vector_format.OpenVectorFormat.VectorBlock.Ellipses result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.Ellipses buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.Ellipses result = new open_vector_format.OpenVectorFormat.VectorBlock.Ellipses(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.Ellipses result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.a_ = a_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.b_ = b_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.phi0_ = phi0_;
          }
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.ellipsesArcs_ = ellipsesArcsBuilder_ == null
                ? ellipsesArcs_
                : ellipsesArcsBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.Ellipses) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.Ellipses)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.Ellipses other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.getDefaultInstance()) return this;
          if (other.getA() != 0F) {
            setA(other.getA());
          }
          if (other.getB() != 0F) {
            setB(other.getB());
          }
          if (other.getPhi0() != 0D) {
            setPhi0(other.getPhi0());
          }
          if (other.hasEllipsesArcs()) {
            mergeEllipsesArcs(other.getEllipsesArcs());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  a_ = input.readFloat();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 13
                case 21: {
                  b_ = input.readFloat();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 21
                case 25: {
                  phi0_ = input.readDouble();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 25
                case 34: {
                  input.readMessage(
                      getEllipsesArcsFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private float a_ ;
        /**
         * <code>float a = 1;</code>
         * @return The a.
         */
        @java.lang.Override
        public float getA() {
          return a_;
        }
        /**
         * <code>float a = 1;</code>
         * @param value The a to set.
         * @return This builder for chaining.
         */
        public Builder setA(float value) {

          a_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>float a = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearA() {
          bitField0_ = (bitField0_ & ~0x00000001);
          a_ = 0F;
          onChanged();
          return this;
        }

        private float b_ ;
        /**
         * <code>float b = 2;</code>
         * @return The b.
         */
        @java.lang.Override
        public float getB() {
          return b_;
        }
        /**
         * <code>float b = 2;</code>
         * @param value The b to set.
         * @return This builder for chaining.
         */
        public Builder setB(float value) {

          b_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>float b = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearB() {
          bitField0_ = (bitField0_ & ~0x00000002);
          b_ = 0F;
          onChanged();
          return this;
        }

        private double phi0_ ;
        /**
         * <code>double phi0 = 3;</code>
         * @return The phi0.
         */
        @java.lang.Override
        public double getPhi0() {
          return phi0_;
        }
        /**
         * <code>double phi0 = 3;</code>
         * @param value The phi0 to set.
         * @return This builder for chaining.
         */
        public Builder setPhi0(double value) {

          phi0_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>double phi0 = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearPhi0() {
          bitField0_ = (bitField0_ & ~0x00000004);
          phi0_ = 0D;
          onChanged();
          return this;
        }

        private open_vector_format.OpenVectorFormat.VectorBlock.Arcs ellipsesArcs_;
        private com.google.protobuf.SingleFieldBuilderV3<
            open_vector_format.OpenVectorFormat.VectorBlock.Arcs, open_vector_format.OpenVectorFormat.VectorBlock.Arcs.Builder, open_vector_format.OpenVectorFormat.VectorBlock.ArcsOrBuilder> ellipsesArcsBuilder_;
        /**
         * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
         * @return Whether the ellipsesArcs field is set.
         */
        public boolean hasEllipsesArcs() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
         * @return The ellipsesArcs.
         */
        public open_vector_format.OpenVectorFormat.VectorBlock.Arcs getEllipsesArcs() {
          if (ellipsesArcsBuilder_ == null) {
            return ellipsesArcs_ == null ? open_vector_format.OpenVectorFormat.VectorBlock.Arcs.getDefaultInstance() : ellipsesArcs_;
          } else {
            return ellipsesArcsBuilder_.getMessage();
          }
        }
        /**
         * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
         */
        public Builder setEllipsesArcs(open_vector_format.OpenVectorFormat.VectorBlock.Arcs value) {
          if (ellipsesArcsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ellipsesArcs_ = value;
          } else {
            ellipsesArcsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
         */
        public Builder setEllipsesArcs(
            open_vector_format.OpenVectorFormat.VectorBlock.Arcs.Builder builderForValue) {
          if (ellipsesArcsBuilder_ == null) {
            ellipsesArcs_ = builderForValue.build();
          } else {
            ellipsesArcsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
         */
        public Builder mergeEllipsesArcs(open_vector_format.OpenVectorFormat.VectorBlock.Arcs value) {
          if (ellipsesArcsBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0) &&
              ellipsesArcs_ != null &&
              ellipsesArcs_ != open_vector_format.OpenVectorFormat.VectorBlock.Arcs.getDefaultInstance()) {
              getEllipsesArcsBuilder().mergeFrom(value);
            } else {
              ellipsesArcs_ = value;
            }
          } else {
            ellipsesArcsBuilder_.mergeFrom(value);
          }
          if (ellipsesArcs_ != null) {
            bitField0_ |= 0x00000008;
            onChanged();
          }
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
         */
        public Builder clearEllipsesArcs() {
          bitField0_ = (bitField0_ & ~0x00000008);
          ellipsesArcs_ = null;
          if (ellipsesArcsBuilder_ != null) {
            ellipsesArcsBuilder_.dispose();
            ellipsesArcsBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
         */
        public open_vector_format.OpenVectorFormat.VectorBlock.Arcs.Builder getEllipsesArcsBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getEllipsesArcsFieldBuilder().getBuilder();
        }
        /**
         * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
         */
        public open_vector_format.OpenVectorFormat.VectorBlock.ArcsOrBuilder getEllipsesArcsOrBuilder() {
          if (ellipsesArcsBuilder_ != null) {
            return ellipsesArcsBuilder_.getMessageOrBuilder();
          } else {
            return ellipsesArcs_ == null ?
                open_vector_format.OpenVectorFormat.VectorBlock.Arcs.getDefaultInstance() : ellipsesArcs_;
          }
        }
        /**
         * <code>.open_vector_format.VectorBlock.Arcs ellipses_arcs = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            open_vector_format.OpenVectorFormat.VectorBlock.Arcs, open_vector_format.OpenVectorFormat.VectorBlock.Arcs.Builder, open_vector_format.OpenVectorFormat.VectorBlock.ArcsOrBuilder> 
            getEllipsesArcsFieldBuilder() {
          if (ellipsesArcsBuilder_ == null) {
            ellipsesArcsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                open_vector_format.OpenVectorFormat.VectorBlock.Arcs, open_vector_format.OpenVectorFormat.VectorBlock.Arcs.Builder, open_vector_format.OpenVectorFormat.VectorBlock.ArcsOrBuilder>(
                    getEllipsesArcs(),
                    getParentForChildren(),
                    isClean());
            ellipsesArcs_ = null;
          }
          return ellipsesArcsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.Ellipses)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.Ellipses)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.Ellipses DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.Ellipses();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.Ellipses getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Ellipses>
          PARSER = new com.google.protobuf.AbstractParser<Ellipses>() {
        @java.lang.Override
        public Ellipses parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Ellipses> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Ellipses> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.Ellipses getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ExposurePauseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.ExposurePause)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>uint64 pause_in_us = 1;</code>
       * @return The pauseInUs.
       */
      long getPauseInUs();
    }
    /**
     * <pre>
     *Pause the exposure procedure. This can be necessary e.g. for thermal reasons,
     *or for syncing mulitple laser scanner units, preventing overlap or smoke interaction.
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.ExposurePause}
     */
    public static final class ExposurePause extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.ExposurePause)
        ExposurePauseOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ExposurePause.newBuilder() to construct.
      private ExposurePause(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ExposurePause() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ExposurePause();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_ExposurePause_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_ExposurePause_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.class, open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.Builder.class);
      }

      public static final int PAUSE_IN_US_FIELD_NUMBER = 1;
      private long pauseInUs_ = 0L;
      /**
       * <code>uint64 pause_in_us = 1;</code>
       * @return The pauseInUs.
       */
      @java.lang.Override
      public long getPauseInUs() {
        return pauseInUs_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (pauseInUs_ != 0L) {
          output.writeUInt64(1, pauseInUs_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (pauseInUs_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, pauseInUs_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause other = (open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause) obj;

        if (getPauseInUs()
            != other.getPauseInUs()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + PAUSE_IN_US_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPauseInUs());
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *Pause the exposure procedure. This can be necessary e.g. for thermal reasons,
       *or for syncing mulitple laser scanner units, preventing overlap or smoke interaction.
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.ExposurePause}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.ExposurePause)
          open_vector_format.OpenVectorFormat.VectorBlock.ExposurePauseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_ExposurePause_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_ExposurePause_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.class, open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          pauseInUs_ = 0L;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_ExposurePause_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause build() {
          open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause result = new open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.pauseInUs_ = pauseInUs_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.getDefaultInstance()) return this;
          if (other.getPauseInUs() != 0L) {
            setPauseInUs(other.getPauseInUs());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  pauseInUs_ = input.readUInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long pauseInUs_ ;
        /**
         * <code>uint64 pause_in_us = 1;</code>
         * @return The pauseInUs.
         */
        @java.lang.Override
        public long getPauseInUs() {
          return pauseInUs_;
        }
        /**
         * <code>uint64 pause_in_us = 1;</code>
         * @param value The pauseInUs to set.
         * @return This builder for chaining.
         */
        public Builder setPauseInUs(long value) {

          pauseInUs_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>uint64 pause_in_us = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPauseInUs() {
          bitField0_ = (bitField0_ & ~0x00000001);
          pauseInUs_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.ExposurePause)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.ExposurePause)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ExposurePause>
          PARSER = new com.google.protobuf.AbstractParser<ExposurePause>() {
        @java.lang.Override
        public ExposurePause parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ExposurePause> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ExposurePause> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LineSequenceParaAdaptOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.LineSequenceParaAdapt)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated float points_with_paras = 1;</code>
       * @return A list containing the pointsWithParas.
       */
      java.util.List<java.lang.Float> getPointsWithParasList();
      /**
       * <code>repeated float points_with_paras = 1;</code>
       * @return The count of pointsWithParas.
       */
      int getPointsWithParasCount();
      /**
       * <code>repeated float points_with_paras = 1;</code>
       * @param index The index of the element to return.
       * @return The pointsWithParas at the given index.
       */
      float getPointsWithParas(int index);

      /**
       * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt.AdaptedParameter parameter = 2;</code>
       * @return The enum numeric value on the wire for parameter.
       */
      int getParameterValue();
      /**
       * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt.AdaptedParameter parameter = 2;</code>
       * @return The parameter.
       */
      open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.AdaptedParameter getParameter();
    }
    /**
     * <pre>
     *A LineSequence with additional adaption of one laser parameter along the vectors.
     *Each point consists of (x,y,parameterValue) for 2D.
     *The parameterValue is the goal value that will be reached at the end of the vector,
     *scaling linear along the vector. The goal gets priority and overwrites settings of the
     *parameter set.
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.LineSequenceParaAdapt}
     */
    public static final class LineSequenceParaAdapt extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.LineSequenceParaAdapt)
        LineSequenceParaAdaptOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LineSequenceParaAdapt.newBuilder() to construct.
      private LineSequenceParaAdapt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LineSequenceParaAdapt() {
        pointsWithParas_ = emptyFloatList();
        parameter_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LineSequenceParaAdapt();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequenceParaAdapt_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequenceParaAdapt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.class, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder.class);
      }

      /**
       * Protobuf enum {@code open_vector_format.VectorBlock.LineSequenceParaAdapt.AdaptedParameter}
       */
      public enum AdaptedParameter
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>LASER_POWER_IN_W = 0;</code>
         */
        LASER_POWER_IN_W(0),
        /**
         * <code>LASER_FOCUS_SHIFT_IN_MM = 1;</code>
         */
        LASER_FOCUS_SHIFT_IN_MM(1),
        /**
         * <pre>
         *for Q-Switch only
         * </pre>
         *
         * <code>LASER_PULSE_LENGTH_IN_US = 2;</code>
         */
        LASER_PULSE_LENGTH_IN_US(2),
        /**
         * <code>LASER_PULSE_REPITION_RATE_IN_HZ = 3;</code>
         */
        LASER_PULSE_REPITION_RATE_IN_HZ(3),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>LASER_POWER_IN_W = 0;</code>
         */
        public static final int LASER_POWER_IN_W_VALUE = 0;
        /**
         * <code>LASER_FOCUS_SHIFT_IN_MM = 1;</code>
         */
        public static final int LASER_FOCUS_SHIFT_IN_MM_VALUE = 1;
        /**
         * <pre>
         *for Q-Switch only
         * </pre>
         *
         * <code>LASER_PULSE_LENGTH_IN_US = 2;</code>
         */
        public static final int LASER_PULSE_LENGTH_IN_US_VALUE = 2;
        /**
         * <code>LASER_PULSE_REPITION_RATE_IN_HZ = 3;</code>
         */
        public static final int LASER_PULSE_REPITION_RATE_IN_HZ_VALUE = 3;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static AdaptedParameter valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static AdaptedParameter forNumber(int value) {
          switch (value) {
            case 0: return LASER_POWER_IN_W;
            case 1: return LASER_FOCUS_SHIFT_IN_MM;
            case 2: return LASER_PULSE_LENGTH_IN_US;
            case 3: return LASER_PULSE_REPITION_RATE_IN_HZ;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<AdaptedParameter>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            AdaptedParameter> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<AdaptedParameter>() {
                public AdaptedParameter findValueByNumber(int number) {
                  return AdaptedParameter.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.getDescriptor().getEnumTypes().get(0);
        }

        private static final AdaptedParameter[] VALUES = values();

        public static AdaptedParameter valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private AdaptedParameter(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:open_vector_format.VectorBlock.LineSequenceParaAdapt.AdaptedParameter)
      }

      public static final int POINTS_WITH_PARAS_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.FloatList pointsWithParas_ =
          emptyFloatList();
      /**
       * <code>repeated float points_with_paras = 1;</code>
       * @return A list containing the pointsWithParas.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getPointsWithParasList() {
        return pointsWithParas_;
      }
      /**
       * <code>repeated float points_with_paras = 1;</code>
       * @return The count of pointsWithParas.
       */
      public int getPointsWithParasCount() {
        return pointsWithParas_.size();
      }
      /**
       * <code>repeated float points_with_paras = 1;</code>
       * @param index The index of the element to return.
       * @return The pointsWithParas at the given index.
       */
      public float getPointsWithParas(int index) {
        return pointsWithParas_.getFloat(index);
      }
      private int pointsWithParasMemoizedSerializedSize = -1;

      public static final int PARAMETER_FIELD_NUMBER = 2;
      private int parameter_ = 0;
      /**
       * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt.AdaptedParameter parameter = 2;</code>
       * @return The enum numeric value on the wire for parameter.
       */
      @java.lang.Override public int getParameterValue() {
        return parameter_;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt.AdaptedParameter parameter = 2;</code>
       * @return The parameter.
       */
      @java.lang.Override public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.AdaptedParameter getParameter() {
        open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.AdaptedParameter result = open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.AdaptedParameter.forNumber(parameter_);
        return result == null ? open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.AdaptedParameter.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getPointsWithParasList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(pointsWithParasMemoizedSerializedSize);
        }
        for (int i = 0; i < pointsWithParas_.size(); i++) {
          output.writeFloatNoTag(pointsWithParas_.getFloat(i));
        }
        if (parameter_ != open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.AdaptedParameter.LASER_POWER_IN_W.getNumber()) {
          output.writeEnum(2, parameter_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 4 * getPointsWithParasList().size();
          size += dataSize;
          if (!getPointsWithParasList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          pointsWithParasMemoizedSerializedSize = dataSize;
        }
        if (parameter_ != open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.AdaptedParameter.LASER_POWER_IN_W.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, parameter_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt other = (open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt) obj;

        if (!getPointsWithParasList()
            .equals(other.getPointsWithParasList())) return false;
        if (parameter_ != other.parameter_) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getPointsWithParasCount() > 0) {
          hash = (37 * hash) + POINTS_WITH_PARAS_FIELD_NUMBER;
          hash = (53 * hash) + getPointsWithParasList().hashCode();
        }
        hash = (37 * hash) + PARAMETER_FIELD_NUMBER;
        hash = (53 * hash) + parameter_;
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *A LineSequence with additional adaption of one laser parameter along the vectors.
       *Each point consists of (x,y,parameterValue) for 2D.
       *The parameterValue is the goal value that will be reached at the end of the vector,
       *scaling linear along the vector. The goal gets priority and overwrites settings of the
       *parameter set.
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.LineSequenceParaAdapt}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.LineSequenceParaAdapt)
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequenceParaAdapt_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequenceParaAdapt_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.class, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          pointsWithParas_ = emptyFloatList();
          parameter_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_LineSequenceParaAdapt_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt build() {
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt result = new open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            pointsWithParas_.makeImmutable();
            result.pointsWithParas_ = pointsWithParas_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.parameter_ = parameter_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.getDefaultInstance()) return this;
          if (!other.pointsWithParas_.isEmpty()) {
            if (pointsWithParas_.isEmpty()) {
              pointsWithParas_ = other.pointsWithParas_;
              pointsWithParas_.makeImmutable();
              bitField0_ |= 0x00000001;
            } else {
              ensurePointsWithParasIsMutable();
              pointsWithParas_.addAll(other.pointsWithParas_);
            }
            onChanged();
          }
          if (other.parameter_ != 0) {
            setParameterValue(other.getParameterValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  float v = input.readFloat();
                  ensurePointsWithParasIsMutable();
                  pointsWithParas_.addFloat(v);
                  break;
                } // case 13
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensurePointsWithParasIsMutable(alloc / 4);
                  while (input.getBytesUntilLimit() > 0) {
                    pointsWithParas_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                } // case 10
                case 16: {
                  parameter_ = input.readEnum();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.FloatList pointsWithParas_ = emptyFloatList();
        private void ensurePointsWithParasIsMutable() {
          if (!pointsWithParas_.isModifiable()) {
            pointsWithParas_ = makeMutableCopy(pointsWithParas_);
          }
          bitField0_ |= 0x00000001;
        }
        private void ensurePointsWithParasIsMutable(int capacity) {
          if (!pointsWithParas_.isModifiable()) {
            pointsWithParas_ = makeMutableCopy(pointsWithParas_, capacity);
          }
          bitField0_ |= 0x00000001;
        }
        /**
         * <code>repeated float points_with_paras = 1;</code>
         * @return A list containing the pointsWithParas.
         */
        public java.util.List<java.lang.Float>
            getPointsWithParasList() {
          pointsWithParas_.makeImmutable();
          return pointsWithParas_;
        }
        /**
         * <code>repeated float points_with_paras = 1;</code>
         * @return The count of pointsWithParas.
         */
        public int getPointsWithParasCount() {
          return pointsWithParas_.size();
        }
        /**
         * <code>repeated float points_with_paras = 1;</code>
         * @param index The index of the element to return.
         * @return The pointsWithParas at the given index.
         */
        public float getPointsWithParas(int index) {
          return pointsWithParas_.getFloat(index);
        }
        /**
         * <code>repeated float points_with_paras = 1;</code>
         * @param index The index to set the value at.
         * @param value The pointsWithParas to set.
         * @return This builder for chaining.
         */
        public Builder setPointsWithParas(
            int index, float value) {

          ensurePointsWithParasIsMutable();
          pointsWithParas_.setFloat(index, value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points_with_paras = 1;</code>
         * @param value The pointsWithParas to add.
         * @return This builder for chaining.
         */
        public Builder addPointsWithParas(float value) {

          ensurePointsWithParasIsMutable();
          pointsWithParas_.addFloat(value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points_with_paras = 1;</code>
         * @param values The pointsWithParas to add.
         * @return This builder for chaining.
         */
        public Builder addAllPointsWithParas(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensurePointsWithParasIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pointsWithParas_);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float points_with_paras = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPointsWithParas() {
          pointsWithParas_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        private int parameter_ = 0;
        /**
         * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt.AdaptedParameter parameter = 2;</code>
         * @return The enum numeric value on the wire for parameter.
         */
        @java.lang.Override public int getParameterValue() {
          return parameter_;
        }
        /**
         * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt.AdaptedParameter parameter = 2;</code>
         * @param value The enum numeric value on the wire for parameter to set.
         * @return This builder for chaining.
         */
        public Builder setParameterValue(int value) {
          parameter_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt.AdaptedParameter parameter = 2;</code>
         * @return The parameter.
         */
        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.AdaptedParameter getParameter() {
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.AdaptedParameter result = open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.AdaptedParameter.forNumber(parameter_);
          return result == null ? open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.AdaptedParameter.UNRECOGNIZED : result;
        }
        /**
         * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt.AdaptedParameter parameter = 2;</code>
         * @param value The parameter to set.
         * @return This builder for chaining.
         */
        public Builder setParameter(open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.AdaptedParameter value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          parameter_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt.AdaptedParameter parameter = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearParameter() {
          bitField0_ = (bitField0_ & ~0x00000002);
          parameter_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.LineSequenceParaAdapt)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.LineSequenceParaAdapt)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LineSequenceParaAdapt>
          PARSER = new com.google.protobuf.AbstractParser<LineSequenceParaAdapt>() {
        @java.lang.Override
        public LineSequenceParaAdapt parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<LineSequenceParaAdapt> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LineSequenceParaAdapt> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface HatchesParaAdaptOrBuilder extends
        // @@protoc_insertion_point(interface_extends:open_vector_format.VectorBlock.HatchesParaAdapt)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
       */
      java.util.List<open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt> 
          getHatchAsLinesequenceList();
      /**
       * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
       */
      open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt getHatchAsLinesequence(int index);
      /**
       * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
       */
      int getHatchAsLinesequenceCount();
      /**
       * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
       */
      java.util.List<? extends open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder> 
          getHatchAsLinesequenceOrBuilderList();
      /**
       * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
       */
      open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder getHatchAsLinesequenceOrBuilder(
          int index);
    }
    /**
     * <pre>
     *A hatch divided into a line sequence with adaption parameter
     * </pre>
     *
     * Protobuf type {@code open_vector_format.VectorBlock.HatchesParaAdapt}
     */
    public static final class HatchesParaAdapt extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:open_vector_format.VectorBlock.HatchesParaAdapt)
        HatchesParaAdaptOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use HatchesParaAdapt.newBuilder() to construct.
      private HatchesParaAdapt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HatchesParaAdapt() {
        hatchAsLinesequence_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new HatchesParaAdapt();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_HatchesParaAdapt_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_HatchesParaAdapt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.class, open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.Builder.class);
      }

      public static final int HATCHASLINESEQUENCE_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private java.util.List<open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt> hatchAsLinesequence_;
      /**
       * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
       */
      @java.lang.Override
      public java.util.List<open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt> getHatchAsLinesequenceList() {
        return hatchAsLinesequence_;
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
       */
      @java.lang.Override
      public java.util.List<? extends open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder> 
          getHatchAsLinesequenceOrBuilderList() {
        return hatchAsLinesequence_;
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
       */
      @java.lang.Override
      public int getHatchAsLinesequenceCount() {
        return hatchAsLinesequence_.size();
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt getHatchAsLinesequence(int index) {
        return hatchAsLinesequence_.get(index);
      }
      /**
       * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder getHatchAsLinesequenceOrBuilder(
          int index) {
        return hatchAsLinesequence_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < hatchAsLinesequence_.size(); i++) {
          output.writeMessage(1, hatchAsLinesequence_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < hatchAsLinesequence_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, hatchAsLinesequence_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt)) {
          return super.equals(obj);
        }
        open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt other = (open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt) obj;

        if (!getHatchAsLinesequenceList()
            .equals(other.getHatchAsLinesequenceList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getHatchAsLinesequenceCount() > 0) {
          hash = (37 * hash) + HATCHASLINESEQUENCE_FIELD_NUMBER;
          hash = (53 * hash) + getHatchAsLinesequenceList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *A hatch divided into a line sequence with adaption parameter
       * </pre>
       *
       * Protobuf type {@code open_vector_format.VectorBlock.HatchesParaAdapt}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock.HatchesParaAdapt)
          open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdaptOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_HatchesParaAdapt_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_HatchesParaAdapt_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.class, open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.Builder.class);
        }

        // Construct using open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          if (hatchAsLinesequenceBuilder_ == null) {
            hatchAsLinesequence_ = java.util.Collections.emptyList();
          } else {
            hatchAsLinesequence_ = null;
            hatchAsLinesequenceBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_HatchesParaAdapt_descriptor;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt getDefaultInstanceForType() {
          return open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.getDefaultInstance();
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt build() {
          open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt buildPartial() {
          open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt result = new open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt result) {
          if (hatchAsLinesequenceBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              hatchAsLinesequence_ = java.util.Collections.unmodifiableList(hatchAsLinesequence_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.hatchAsLinesequence_ = hatchAsLinesequence_;
          } else {
            result.hatchAsLinesequence_ = hatchAsLinesequenceBuilder_.build();
          }
        }

        private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt result) {
          int from_bitField0_ = bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt) {
            return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt other) {
          if (other == open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.getDefaultInstance()) return this;
          if (hatchAsLinesequenceBuilder_ == null) {
            if (!other.hatchAsLinesequence_.isEmpty()) {
              if (hatchAsLinesequence_.isEmpty()) {
                hatchAsLinesequence_ = other.hatchAsLinesequence_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureHatchAsLinesequenceIsMutable();
                hatchAsLinesequence_.addAll(other.hatchAsLinesequence_);
              }
              onChanged();
            }
          } else {
            if (!other.hatchAsLinesequence_.isEmpty()) {
              if (hatchAsLinesequenceBuilder_.isEmpty()) {
                hatchAsLinesequenceBuilder_.dispose();
                hatchAsLinesequenceBuilder_ = null;
                hatchAsLinesequence_ = other.hatchAsLinesequence_;
                bitField0_ = (bitField0_ & ~0x00000001);
                hatchAsLinesequenceBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getHatchAsLinesequenceFieldBuilder() : null;
              } else {
                hatchAsLinesequenceBuilder_.addAllMessages(other.hatchAsLinesequence_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt m =
                      input.readMessage(
                          open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.parser(),
                          extensionRegistry);
                  if (hatchAsLinesequenceBuilder_ == null) {
                    ensureHatchAsLinesequenceIsMutable();
                    hatchAsLinesequence_.add(m);
                  } else {
                    hatchAsLinesequenceBuilder_.addMessage(m);
                  }
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.util.List<open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt> hatchAsLinesequence_ =
          java.util.Collections.emptyList();
        private void ensureHatchAsLinesequenceIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            hatchAsLinesequence_ = new java.util.ArrayList<open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt>(hatchAsLinesequence_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder> hatchAsLinesequenceBuilder_;

        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public java.util.List<open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt> getHatchAsLinesequenceList() {
          if (hatchAsLinesequenceBuilder_ == null) {
            return java.util.Collections.unmodifiableList(hatchAsLinesequence_);
          } else {
            return hatchAsLinesequenceBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public int getHatchAsLinesequenceCount() {
          if (hatchAsLinesequenceBuilder_ == null) {
            return hatchAsLinesequence_.size();
          } else {
            return hatchAsLinesequenceBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt getHatchAsLinesequence(int index) {
          if (hatchAsLinesequenceBuilder_ == null) {
            return hatchAsLinesequence_.get(index);
          } else {
            return hatchAsLinesequenceBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public Builder setHatchAsLinesequence(
            int index, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt value) {
          if (hatchAsLinesequenceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureHatchAsLinesequenceIsMutable();
            hatchAsLinesequence_.set(index, value);
            onChanged();
          } else {
            hatchAsLinesequenceBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public Builder setHatchAsLinesequence(
            int index, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder builderForValue) {
          if (hatchAsLinesequenceBuilder_ == null) {
            ensureHatchAsLinesequenceIsMutable();
            hatchAsLinesequence_.set(index, builderForValue.build());
            onChanged();
          } else {
            hatchAsLinesequenceBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public Builder addHatchAsLinesequence(open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt value) {
          if (hatchAsLinesequenceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureHatchAsLinesequenceIsMutable();
            hatchAsLinesequence_.add(value);
            onChanged();
          } else {
            hatchAsLinesequenceBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public Builder addHatchAsLinesequence(
            int index, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt value) {
          if (hatchAsLinesequenceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureHatchAsLinesequenceIsMutable();
            hatchAsLinesequence_.add(index, value);
            onChanged();
          } else {
            hatchAsLinesequenceBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public Builder addHatchAsLinesequence(
            open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder builderForValue) {
          if (hatchAsLinesequenceBuilder_ == null) {
            ensureHatchAsLinesequenceIsMutable();
            hatchAsLinesequence_.add(builderForValue.build());
            onChanged();
          } else {
            hatchAsLinesequenceBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public Builder addHatchAsLinesequence(
            int index, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder builderForValue) {
          if (hatchAsLinesequenceBuilder_ == null) {
            ensureHatchAsLinesequenceIsMutable();
            hatchAsLinesequence_.add(index, builderForValue.build());
            onChanged();
          } else {
            hatchAsLinesequenceBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public Builder addAllHatchAsLinesequence(
            java.lang.Iterable<? extends open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt> values) {
          if (hatchAsLinesequenceBuilder_ == null) {
            ensureHatchAsLinesequenceIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, hatchAsLinesequence_);
            onChanged();
          } else {
            hatchAsLinesequenceBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public Builder clearHatchAsLinesequence() {
          if (hatchAsLinesequenceBuilder_ == null) {
            hatchAsLinesequence_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            hatchAsLinesequenceBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public Builder removeHatchAsLinesequence(int index) {
          if (hatchAsLinesequenceBuilder_ == null) {
            ensureHatchAsLinesequenceIsMutable();
            hatchAsLinesequence_.remove(index);
            onChanged();
          } else {
            hatchAsLinesequenceBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder getHatchAsLinesequenceBuilder(
            int index) {
          return getHatchAsLinesequenceFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder getHatchAsLinesequenceOrBuilder(
            int index) {
          if (hatchAsLinesequenceBuilder_ == null) {
            return hatchAsLinesequence_.get(index);  } else {
            return hatchAsLinesequenceBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public java.util.List<? extends open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder> 
             getHatchAsLinesequenceOrBuilderList() {
          if (hatchAsLinesequenceBuilder_ != null) {
            return hatchAsLinesequenceBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(hatchAsLinesequence_);
          }
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder addHatchAsLinesequenceBuilder() {
          return getHatchAsLinesequenceFieldBuilder().addBuilder(
              open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.getDefaultInstance());
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder addHatchAsLinesequenceBuilder(
            int index) {
          return getHatchAsLinesequenceFieldBuilder().addBuilder(
              index, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.getDefaultInstance());
        }
        /**
         * <code>repeated .open_vector_format.VectorBlock.LineSequenceParaAdapt hatchAsLinesequence = 1;</code>
         */
        public java.util.List<open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder> 
             getHatchAsLinesequenceBuilderList() {
          return getHatchAsLinesequenceFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder> 
            getHatchAsLinesequenceFieldBuilder() {
          if (hatchAsLinesequenceBuilder_ == null) {
            hatchAsLinesequenceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder>(
                    hatchAsLinesequence_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            hatchAsLinesequence_ = null;
          }
          return hatchAsLinesequenceBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock.HatchesParaAdapt)
      }

      // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock.HatchesParaAdapt)
      private static final open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt();
      }

      public static open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<HatchesParaAdapt>
          PARSER = new com.google.protobuf.AbstractParser<HatchesParaAdapt>() {
        @java.lang.Override
        public HatchesParaAdapt parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<HatchesParaAdapt> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HatchesParaAdapt> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    private int vectorDataCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object vectorData_;
    public enum VectorDataCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      LINE_SEQUENCE(1),
      _HATCHES(2),
      POINT_SEQUENCE(3),
      _ARCS(4),
      ELLIPSES(5),
      LINE_SEQUENCE_3D(6),
      HATCHES_3D(7),
      POINT_SEQUENCE_3D(8),
      ARCS_3D(9),
      EXPOSURE_PAUSE(10),
      LINE_SEQUENCE_PARA_ADAPT(11),
      _HATCHPARAADAPT(12),
      VECTORDATA_NOT_SET(0);
      private final int value;
      private VectorDataCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static VectorDataCase valueOf(int value) {
        return forNumber(value);
      }

      public static VectorDataCase forNumber(int value) {
        switch (value) {
          case 1: return LINE_SEQUENCE;
          case 2: return _HATCHES;
          case 3: return POINT_SEQUENCE;
          case 4: return _ARCS;
          case 5: return ELLIPSES;
          case 6: return LINE_SEQUENCE_3D;
          case 7: return HATCHES_3D;
          case 8: return POINT_SEQUENCE_3D;
          case 9: return ARCS_3D;
          case 10: return EXPOSURE_PAUSE;
          case 11: return LINE_SEQUENCE_PARA_ADAPT;
          case 12: return _HATCHPARAADAPT;
          case 0: return VECTORDATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public VectorDataCase
    getVectorDataCase() {
      return VectorDataCase.forNumber(
          vectorDataCase_);
    }

    private int processMetaDataCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object processMetaData_;
    public enum ProcessMetaDataCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      LPBF_METADATA(101),
      MICRO_STRUCTURING_METADATA(102),
      POLISHING_METADATA(103),
      PROCESSMETADATA_NOT_SET(0);
      private final int value;
      private ProcessMetaDataCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ProcessMetaDataCase valueOf(int value) {
        return forNumber(value);
      }

      public static ProcessMetaDataCase forNumber(int value) {
        switch (value) {
          case 101: return LPBF_METADATA;
          case 102: return MICRO_STRUCTURING_METADATA;
          case 103: return POLISHING_METADATA;
          case 0: return PROCESSMETADATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ProcessMetaDataCase
    getProcessMetaDataCase() {
      return ProcessMetaDataCase.forNumber(
          processMetaDataCase_);
    }

    public static final int LINE_SEQUENCE_FIELD_NUMBER = 1;
    /**
     * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
     * @return Whether the lineSequence field is set.
     */
    @java.lang.Override
    public boolean hasLineSequence() {
      return vectorDataCase_ == 1;
    }
    /**
     * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
     * @return The lineSequence.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence getLineSequence() {
      if (vectorDataCase_ == 1) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceOrBuilder getLineSequenceOrBuilder() {
      if (vectorDataCase_ == 1) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.getDefaultInstance();
    }

    public static final int _HATCHES_FIELD_NUMBER = 2;
    /**
     * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
     * @return Whether the hatches field is set.
     */
    @java.lang.Override
    public boolean hasHatches() {
      return vectorDataCase_ == 2;
    }
    /**
     * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
     * @return The hatches.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.Hatches getHatches() {
      if (vectorDataCase_ == 2) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.Hatches) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.Hatches.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.HatchesOrBuilder getHatchesOrBuilder() {
      if (vectorDataCase_ == 2) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.Hatches) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.Hatches.getDefaultInstance();
    }

    public static final int POINT_SEQUENCE_FIELD_NUMBER = 3;
    /**
     * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
     * @return Whether the pointSequence field is set.
     */
    @java.lang.Override
    public boolean hasPointSequence() {
      return vectorDataCase_ == 3;
    }
    /**
     * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
     * @return The pointSequence.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence getPointSequence() {
      if (vectorDataCase_ == 3) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.PointSequenceOrBuilder getPointSequenceOrBuilder() {
      if (vectorDataCase_ == 3) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.getDefaultInstance();
    }

    public static final int _ARCS_FIELD_NUMBER = 4;
    /**
     * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
     * @return Whether the arcs field is set.
     */
    @java.lang.Override
    public boolean hasArcs() {
      return vectorDataCase_ == 4;
    }
    /**
     * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
     * @return The arcs.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.Arcs getArcs() {
      if (vectorDataCase_ == 4) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.Arcs) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.Arcs.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.ArcsOrBuilder getArcsOrBuilder() {
      if (vectorDataCase_ == 4) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.Arcs) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.Arcs.getDefaultInstance();
    }

    public static final int ELLIPSES_FIELD_NUMBER = 5;
    /**
     * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
     * @return Whether the ellipses field is set.
     */
    @java.lang.Override
    public boolean hasEllipses() {
      return vectorDataCase_ == 5;
    }
    /**
     * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
     * @return The ellipses.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.Ellipses getEllipses() {
      if (vectorDataCase_ == 5) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.Ellipses) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.EllipsesOrBuilder getEllipsesOrBuilder() {
      if (vectorDataCase_ == 5) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.Ellipses) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.getDefaultInstance();
    }

    public static final int LINE_SEQUENCE_3D_FIELD_NUMBER = 6;
    /**
     * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
     * @return Whether the lineSequence3d field is set.
     */
    @java.lang.Override
    public boolean hasLineSequence3D() {
      return vectorDataCase_ == 6;
    }
    /**
     * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
     * @return The lineSequence3d.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D getLineSequence3D() {
      if (vectorDataCase_ == 6) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3DOrBuilder getLineSequence3DOrBuilder() {
      if (vectorDataCase_ == 6) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.getDefaultInstance();
    }

    public static final int HATCHES_3D_FIELD_NUMBER = 7;
    /**
     * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
     * @return Whether the hatches3d field is set.
     */
    @java.lang.Override
    public boolean hasHatches3D() {
      return vectorDataCase_ == 7;
    }
    /**
     * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
     * @return The hatches3d.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D getHatches3D() {
      if (vectorDataCase_ == 7) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.Hatches3DOrBuilder getHatches3DOrBuilder() {
      if (vectorDataCase_ == 7) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.getDefaultInstance();
    }

    public static final int POINT_SEQUENCE_3D_FIELD_NUMBER = 8;
    /**
     * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
     * @return Whether the pointSequence3d field is set.
     */
    @java.lang.Override
    public boolean hasPointSequence3D() {
      return vectorDataCase_ == 8;
    }
    /**
     * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
     * @return The pointSequence3d.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D getPointSequence3D() {
      if (vectorDataCase_ == 8) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3DOrBuilder getPointSequence3DOrBuilder() {
      if (vectorDataCase_ == 8) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.getDefaultInstance();
    }

    public static final int ARCS_3D_FIELD_NUMBER = 9;
    /**
     * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
     * @return Whether the arcs3d field is set.
     */
    @java.lang.Override
    public boolean hasArcs3D() {
      return vectorDataCase_ == 9;
    }
    /**
     * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
     * @return The arcs3d.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D getArcs3D() {
      if (vectorDataCase_ == 9) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.Arcs3DOrBuilder getArcs3DOrBuilder() {
      if (vectorDataCase_ == 9) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.getDefaultInstance();
    }

    public static final int EXPOSURE_PAUSE_FIELD_NUMBER = 10;
    /**
     * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
     * @return Whether the exposurePause field is set.
     */
    @java.lang.Override
    public boolean hasExposurePause() {
      return vectorDataCase_ == 10;
    }
    /**
     * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
     * @return The exposurePause.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause getExposurePause() {
      if (vectorDataCase_ == 10) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.ExposurePauseOrBuilder getExposurePauseOrBuilder() {
      if (vectorDataCase_ == 10) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.getDefaultInstance();
    }

    public static final int LINE_SEQUENCE_PARA_ADAPT_FIELD_NUMBER = 11;
    /**
     * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
     * @return Whether the lineSequenceParaAdapt field is set.
     */
    @java.lang.Override
    public boolean hasLineSequenceParaAdapt() {
      return vectorDataCase_ == 11;
    }
    /**
     * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
     * @return The lineSequenceParaAdapt.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt getLineSequenceParaAdapt() {
      if (vectorDataCase_ == 11) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder getLineSequenceParaAdaptOrBuilder() {
      if (vectorDataCase_ == 11) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.getDefaultInstance();
    }

    public static final int _HATCHPARAADAPT_FIELD_NUMBER = 12;
    /**
     * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
     * @return Whether the hatchParaAdapt field is set.
     */
    @java.lang.Override
    public boolean hasHatchParaAdapt() {
      return vectorDataCase_ == 12;
    }
    /**
     * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
     * @return The hatchParaAdapt.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt getHatchParaAdapt() {
      if (vectorDataCase_ == 12) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdaptOrBuilder getHatchParaAdaptOrBuilder() {
      if (vectorDataCase_ == 12) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt) vectorData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.getDefaultInstance();
    }

    public static final int MARKING_PARAMS_KEY_FIELD_NUMBER = 50;
    private int markingParamsKey_ = 0;
    /**
     * <pre>
     *key used in Job/markingParamsMap
     * </pre>
     *
     * <code>int32 marking_params_key = 50;</code>
     * @return The markingParamsKey.
     */
    @java.lang.Override
    public int getMarkingParamsKey() {
      return markingParamsKey_;
    }

    public static final int LASER_INDEX_FIELD_NUMBER = 53;
    private int laserIndex_ = 0;
    /**
     * <pre>
     *LaserIndex is used for assigning vectorBlocks to different actors, e.g. in multi scanner systems
     * </pre>
     *
     * <code>int32 laser_index = 53;</code>
     * @return The laserIndex.
     */
    @java.lang.Override
    public int getLaserIndex() {
      return laserIndex_;
    }

    public static final int REPEATS_FIELD_NUMBER = 54;
    private long repeats_ = 0L;
    /**
     * <pre>
     *vetor blocks are executed in order once by default (repeats = 0),
     *then repeated [repeats] times starting with the first vector again etc.
     * </pre>
     *
     * <code>uint64 repeats = 54;</code>
     * @return The repeats.
     */
    @java.lang.Override
    public long getRepeats() {
      return repeats_;
    }

    public static final int META_DATA_FIELD_NUMBER = 100;
    private open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData metaData_;
    /**
     * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
     * @return Whether the metaData field is set.
     */
    @java.lang.Override
    public boolean hasMetaData() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
     * @return The metaData.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData getMetaData() {
      return metaData_ == null ? open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.getDefaultInstance() : metaData_;
    }
    /**
     * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaDataOrBuilder getMetaDataOrBuilder() {
      return metaData_ == null ? open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.getDefaultInstance() : metaData_;
    }

    public static final int LPBF_METADATA_FIELD_NUMBER = 101;
    /**
     * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
     * @return Whether the lpbfMetadata field is set.
     */
    @java.lang.Override
    public boolean hasLpbfMetadata() {
      return processMetaDataCase_ == 101;
    }
    /**
     * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
     * @return The lpbfMetadata.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata getLpbfMetadata() {
      if (processMetaDataCase_ == 101) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata) processMetaData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder getLpbfMetadataOrBuilder() {
      if (processMetaDataCase_ == 101) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata) processMetaData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.getDefaultInstance();
    }

    public static final int MICRO_STRUCTURING_METADATA_FIELD_NUMBER = 102;
    /**
     * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
     * @return Whether the microStructuringMetadata field is set.
     */
    @java.lang.Override
    public boolean hasMicroStructuringMetadata() {
      return processMetaDataCase_ == 102;
    }
    /**
     * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
     * @return The microStructuringMetadata.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata getMicroStructuringMetadata() {
      if (processMetaDataCase_ == 102) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata) processMetaData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadataOrBuilder getMicroStructuringMetadataOrBuilder() {
      if (processMetaDataCase_ == 102) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata) processMetaData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.getDefaultInstance();
    }

    public static final int POLISHING_METADATA_FIELD_NUMBER = 103;
    /**
     * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
     * @return Whether the polishingMetadata field is set.
     */
    @java.lang.Override
    public boolean hasPolishingMetadata() {
      return processMetaDataCase_ == 103;
    }
    /**
     * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
     * @return The polishingMetadata.
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata getPolishingMetadata() {
      if (processMetaDataCase_ == 103) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata) processMetaData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.getDefaultInstance();
    }
    /**
     * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
     */
    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadataOrBuilder getPolishingMetadataOrBuilder() {
      if (processMetaDataCase_ == 103) {
         return (open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata) processMetaData_;
      }
      return open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (vectorDataCase_ == 1) {
        output.writeMessage(1, (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence) vectorData_);
      }
      if (vectorDataCase_ == 2) {
        output.writeMessage(2, (open_vector_format.OpenVectorFormat.VectorBlock.Hatches) vectorData_);
      }
      if (vectorDataCase_ == 3) {
        output.writeMessage(3, (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence) vectorData_);
      }
      if (vectorDataCase_ == 4) {
        output.writeMessage(4, (open_vector_format.OpenVectorFormat.VectorBlock.Arcs) vectorData_);
      }
      if (vectorDataCase_ == 5) {
        output.writeMessage(5, (open_vector_format.OpenVectorFormat.VectorBlock.Ellipses) vectorData_);
      }
      if (vectorDataCase_ == 6) {
        output.writeMessage(6, (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D) vectorData_);
      }
      if (vectorDataCase_ == 7) {
        output.writeMessage(7, (open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D) vectorData_);
      }
      if (vectorDataCase_ == 8) {
        output.writeMessage(8, (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D) vectorData_);
      }
      if (vectorDataCase_ == 9) {
        output.writeMessage(9, (open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D) vectorData_);
      }
      if (vectorDataCase_ == 10) {
        output.writeMessage(10, (open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause) vectorData_);
      }
      if (vectorDataCase_ == 11) {
        output.writeMessage(11, (open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt) vectorData_);
      }
      if (vectorDataCase_ == 12) {
        output.writeMessage(12, (open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt) vectorData_);
      }
      if (markingParamsKey_ != 0) {
        output.writeInt32(50, markingParamsKey_);
      }
      if (laserIndex_ != 0) {
        output.writeInt32(53, laserIndex_);
      }
      if (repeats_ != 0L) {
        output.writeUInt64(54, repeats_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(100, getMetaData());
      }
      if (processMetaDataCase_ == 101) {
        output.writeMessage(101, (open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata) processMetaData_);
      }
      if (processMetaDataCase_ == 102) {
        output.writeMessage(102, (open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata) processMetaData_);
      }
      if (processMetaDataCase_ == 103) {
        output.writeMessage(103, (open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata) processMetaData_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (vectorDataCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence) vectorData_);
      }
      if (vectorDataCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (open_vector_format.OpenVectorFormat.VectorBlock.Hatches) vectorData_);
      }
      if (vectorDataCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence) vectorData_);
      }
      if (vectorDataCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (open_vector_format.OpenVectorFormat.VectorBlock.Arcs) vectorData_);
      }
      if (vectorDataCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (open_vector_format.OpenVectorFormat.VectorBlock.Ellipses) vectorData_);
      }
      if (vectorDataCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D) vectorData_);
      }
      if (vectorDataCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D) vectorData_);
      }
      if (vectorDataCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D) vectorData_);
      }
      if (vectorDataCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D) vectorData_);
      }
      if (vectorDataCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause) vectorData_);
      }
      if (vectorDataCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt) vectorData_);
      }
      if (vectorDataCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt) vectorData_);
      }
      if (markingParamsKey_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(50, markingParamsKey_);
      }
      if (laserIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(53, laserIndex_);
      }
      if (repeats_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(54, repeats_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, getMetaData());
      }
      if (processMetaDataCase_ == 101) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, (open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata) processMetaData_);
      }
      if (processMetaDataCase_ == 102) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(102, (open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata) processMetaData_);
      }
      if (processMetaDataCase_ == 103) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(103, (open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata) processMetaData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof open_vector_format.OpenVectorFormat.VectorBlock)) {
        return super.equals(obj);
      }
      open_vector_format.OpenVectorFormat.VectorBlock other = (open_vector_format.OpenVectorFormat.VectorBlock) obj;

      if (getMarkingParamsKey()
          != other.getMarkingParamsKey()) return false;
      if (getLaserIndex()
          != other.getLaserIndex()) return false;
      if (getRepeats()
          != other.getRepeats()) return false;
      if (hasMetaData() != other.hasMetaData()) return false;
      if (hasMetaData()) {
        if (!getMetaData()
            .equals(other.getMetaData())) return false;
      }
      if (!getVectorDataCase().equals(other.getVectorDataCase())) return false;
      switch (vectorDataCase_) {
        case 1:
          if (!getLineSequence()
              .equals(other.getLineSequence())) return false;
          break;
        case 2:
          if (!getHatches()
              .equals(other.getHatches())) return false;
          break;
        case 3:
          if (!getPointSequence()
              .equals(other.getPointSequence())) return false;
          break;
        case 4:
          if (!getArcs()
              .equals(other.getArcs())) return false;
          break;
        case 5:
          if (!getEllipses()
              .equals(other.getEllipses())) return false;
          break;
        case 6:
          if (!getLineSequence3D()
              .equals(other.getLineSequence3D())) return false;
          break;
        case 7:
          if (!getHatches3D()
              .equals(other.getHatches3D())) return false;
          break;
        case 8:
          if (!getPointSequence3D()
              .equals(other.getPointSequence3D())) return false;
          break;
        case 9:
          if (!getArcs3D()
              .equals(other.getArcs3D())) return false;
          break;
        case 10:
          if (!getExposurePause()
              .equals(other.getExposurePause())) return false;
          break;
        case 11:
          if (!getLineSequenceParaAdapt()
              .equals(other.getLineSequenceParaAdapt())) return false;
          break;
        case 12:
          if (!getHatchParaAdapt()
              .equals(other.getHatchParaAdapt())) return false;
          break;
        case 0:
        default:
      }
      if (!getProcessMetaDataCase().equals(other.getProcessMetaDataCase())) return false;
      switch (processMetaDataCase_) {
        case 101:
          if (!getLpbfMetadata()
              .equals(other.getLpbfMetadata())) return false;
          break;
        case 102:
          if (!getMicroStructuringMetadata()
              .equals(other.getMicroStructuringMetadata())) return false;
          break;
        case 103:
          if (!getPolishingMetadata()
              .equals(other.getPolishingMetadata())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MARKING_PARAMS_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getMarkingParamsKey();
      hash = (37 * hash) + LASER_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getLaserIndex();
      hash = (37 * hash) + REPEATS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRepeats());
      if (hasMetaData()) {
        hash = (37 * hash) + META_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetaData().hashCode();
      }
      switch (vectorDataCase_) {
        case 1:
          hash = (37 * hash) + LINE_SEQUENCE_FIELD_NUMBER;
          hash = (53 * hash) + getLineSequence().hashCode();
          break;
        case 2:
          hash = (37 * hash) + _HATCHES_FIELD_NUMBER;
          hash = (53 * hash) + getHatches().hashCode();
          break;
        case 3:
          hash = (37 * hash) + POINT_SEQUENCE_FIELD_NUMBER;
          hash = (53 * hash) + getPointSequence().hashCode();
          break;
        case 4:
          hash = (37 * hash) + _ARCS_FIELD_NUMBER;
          hash = (53 * hash) + getArcs().hashCode();
          break;
        case 5:
          hash = (37 * hash) + ELLIPSES_FIELD_NUMBER;
          hash = (53 * hash) + getEllipses().hashCode();
          break;
        case 6:
          hash = (37 * hash) + LINE_SEQUENCE_3D_FIELD_NUMBER;
          hash = (53 * hash) + getLineSequence3D().hashCode();
          break;
        case 7:
          hash = (37 * hash) + HATCHES_3D_FIELD_NUMBER;
          hash = (53 * hash) + getHatches3D().hashCode();
          break;
        case 8:
          hash = (37 * hash) + POINT_SEQUENCE_3D_FIELD_NUMBER;
          hash = (53 * hash) + getPointSequence3D().hashCode();
          break;
        case 9:
          hash = (37 * hash) + ARCS_3D_FIELD_NUMBER;
          hash = (53 * hash) + getArcs3D().hashCode();
          break;
        case 10:
          hash = (37 * hash) + EXPOSURE_PAUSE_FIELD_NUMBER;
          hash = (53 * hash) + getExposurePause().hashCode();
          break;
        case 11:
          hash = (37 * hash) + LINE_SEQUENCE_PARA_ADAPT_FIELD_NUMBER;
          hash = (53 * hash) + getLineSequenceParaAdapt().hashCode();
          break;
        case 12:
          hash = (37 * hash) + _HATCHPARAADAPT_FIELD_NUMBER;
          hash = (53 * hash) + getHatchParaAdapt().hashCode();
          break;
        case 0:
        default:
      }
      switch (processMetaDataCase_) {
        case 101:
          hash = (37 * hash) + LPBF_METADATA_FIELD_NUMBER;
          hash = (53 * hash) + getLpbfMetadata().hashCode();
          break;
        case 102:
          hash = (37 * hash) + MICRO_STRUCTURING_METADATA_FIELD_NUMBER;
          hash = (53 * hash) + getMicroStructuringMetadata().hashCode();
          break;
        case 103:
          hash = (37 * hash) + POLISHING_METADATA_FIELD_NUMBER;
          hash = (53 * hash) + getPolishingMetadata().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static open_vector_format.OpenVectorFormat.VectorBlock parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.VectorBlock parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.VectorBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.VectorBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.VectorBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.VectorBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.VectorBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.VectorBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static open_vector_format.OpenVectorFormat.VectorBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static open_vector_format.OpenVectorFormat.VectorBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.VectorBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.VectorBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(open_vector_format.OpenVectorFormat.VectorBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code open_vector_format.VectorBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:open_vector_format.VectorBlock)
        open_vector_format.OpenVectorFormat.VectorBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.VectorBlock.class, open_vector_format.OpenVectorFormat.VectorBlock.Builder.class);
      }

      // Construct using open_vector_format.OpenVectorFormat.VectorBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetaDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (lineSequenceBuilder_ != null) {
          lineSequenceBuilder_.clear();
        }
        if (HatchesBuilder_ != null) {
          HatchesBuilder_.clear();
        }
        if (pointSequenceBuilder_ != null) {
          pointSequenceBuilder_.clear();
        }
        if (ArcsBuilder_ != null) {
          ArcsBuilder_.clear();
        }
        if (ellipsesBuilder_ != null) {
          ellipsesBuilder_.clear();
        }
        if (lineSequence3DBuilder_ != null) {
          lineSequence3DBuilder_.clear();
        }
        if (hatches3DBuilder_ != null) {
          hatches3DBuilder_.clear();
        }
        if (pointSequence3DBuilder_ != null) {
          pointSequence3DBuilder_.clear();
        }
        if (arcs3DBuilder_ != null) {
          arcs3DBuilder_.clear();
        }
        if (exposurePauseBuilder_ != null) {
          exposurePauseBuilder_.clear();
        }
        if (lineSequenceParaAdaptBuilder_ != null) {
          lineSequenceParaAdaptBuilder_.clear();
        }
        if (HatchParaAdaptBuilder_ != null) {
          HatchParaAdaptBuilder_.clear();
        }
        markingParamsKey_ = 0;
        laserIndex_ = 0;
        repeats_ = 0L;
        metaData_ = null;
        if (metaDataBuilder_ != null) {
          metaDataBuilder_.dispose();
          metaDataBuilder_ = null;
        }
        if (lpbfMetadataBuilder_ != null) {
          lpbfMetadataBuilder_.clear();
        }
        if (microStructuringMetadataBuilder_ != null) {
          microStructuringMetadataBuilder_.clear();
        }
        if (polishingMetadataBuilder_ != null) {
          polishingMetadataBuilder_.clear();
        }
        vectorDataCase_ = 0;
        vectorData_ = null;
        processMetaDataCase_ = 0;
        processMetaData_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_VectorBlock_descriptor;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock getDefaultInstanceForType() {
        return open_vector_format.OpenVectorFormat.VectorBlock.getDefaultInstance();
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock build() {
        open_vector_format.OpenVectorFormat.VectorBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock buildPartial() {
        open_vector_format.OpenVectorFormat.VectorBlock result = new open_vector_format.OpenVectorFormat.VectorBlock(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(open_vector_format.OpenVectorFormat.VectorBlock result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.markingParamsKey_ = markingParamsKey_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.laserIndex_ = laserIndex_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.repeats_ = repeats_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.metaData_ = metaDataBuilder_ == null
              ? metaData_
              : metaDataBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartialOneofs(open_vector_format.OpenVectorFormat.VectorBlock result) {
        result.vectorDataCase_ = vectorDataCase_;
        result.vectorData_ = this.vectorData_;
        if (vectorDataCase_ == 1 &&
            lineSequenceBuilder_ != null) {
          result.vectorData_ = lineSequenceBuilder_.build();
        }
        if (vectorDataCase_ == 2 &&
            HatchesBuilder_ != null) {
          result.vectorData_ = HatchesBuilder_.build();
        }
        if (vectorDataCase_ == 3 &&
            pointSequenceBuilder_ != null) {
          result.vectorData_ = pointSequenceBuilder_.build();
        }
        if (vectorDataCase_ == 4 &&
            ArcsBuilder_ != null) {
          result.vectorData_ = ArcsBuilder_.build();
        }
        if (vectorDataCase_ == 5 &&
            ellipsesBuilder_ != null) {
          result.vectorData_ = ellipsesBuilder_.build();
        }
        if (vectorDataCase_ == 6 &&
            lineSequence3DBuilder_ != null) {
          result.vectorData_ = lineSequence3DBuilder_.build();
        }
        if (vectorDataCase_ == 7 &&
            hatches3DBuilder_ != null) {
          result.vectorData_ = hatches3DBuilder_.build();
        }
        if (vectorDataCase_ == 8 &&
            pointSequence3DBuilder_ != null) {
          result.vectorData_ = pointSequence3DBuilder_.build();
        }
        if (vectorDataCase_ == 9 &&
            arcs3DBuilder_ != null) {
          result.vectorData_ = arcs3DBuilder_.build();
        }
        if (vectorDataCase_ == 10 &&
            exposurePauseBuilder_ != null) {
          result.vectorData_ = exposurePauseBuilder_.build();
        }
        if (vectorDataCase_ == 11 &&
            lineSequenceParaAdaptBuilder_ != null) {
          result.vectorData_ = lineSequenceParaAdaptBuilder_.build();
        }
        if (vectorDataCase_ == 12 &&
            HatchParaAdaptBuilder_ != null) {
          result.vectorData_ = HatchParaAdaptBuilder_.build();
        }
        result.processMetaDataCase_ = processMetaDataCase_;
        result.processMetaData_ = this.processMetaData_;
        if (processMetaDataCase_ == 101 &&
            lpbfMetadataBuilder_ != null) {
          result.processMetaData_ = lpbfMetadataBuilder_.build();
        }
        if (processMetaDataCase_ == 102 &&
            microStructuringMetadataBuilder_ != null) {
          result.processMetaData_ = microStructuringMetadataBuilder_.build();
        }
        if (processMetaDataCase_ == 103 &&
            polishingMetadataBuilder_ != null) {
          result.processMetaData_ = polishingMetadataBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof open_vector_format.OpenVectorFormat.VectorBlock) {
          return mergeFrom((open_vector_format.OpenVectorFormat.VectorBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(open_vector_format.OpenVectorFormat.VectorBlock other) {
        if (other == open_vector_format.OpenVectorFormat.VectorBlock.getDefaultInstance()) return this;
        if (other.getMarkingParamsKey() != 0) {
          setMarkingParamsKey(other.getMarkingParamsKey());
        }
        if (other.getLaserIndex() != 0) {
          setLaserIndex(other.getLaserIndex());
        }
        if (other.getRepeats() != 0L) {
          setRepeats(other.getRepeats());
        }
        if (other.hasMetaData()) {
          mergeMetaData(other.getMetaData());
        }
        switch (other.getVectorDataCase()) {
          case LINE_SEQUENCE: {
            mergeLineSequence(other.getLineSequence());
            break;
          }
          case _HATCHES: {
            mergeHatches(other.getHatches());
            break;
          }
          case POINT_SEQUENCE: {
            mergePointSequence(other.getPointSequence());
            break;
          }
          case _ARCS: {
            mergeArcs(other.getArcs());
            break;
          }
          case ELLIPSES: {
            mergeEllipses(other.getEllipses());
            break;
          }
          case LINE_SEQUENCE_3D: {
            mergeLineSequence3D(other.getLineSequence3D());
            break;
          }
          case HATCHES_3D: {
            mergeHatches3D(other.getHatches3D());
            break;
          }
          case POINT_SEQUENCE_3D: {
            mergePointSequence3D(other.getPointSequence3D());
            break;
          }
          case ARCS_3D: {
            mergeArcs3D(other.getArcs3D());
            break;
          }
          case EXPOSURE_PAUSE: {
            mergeExposurePause(other.getExposurePause());
            break;
          }
          case LINE_SEQUENCE_PARA_ADAPT: {
            mergeLineSequenceParaAdapt(other.getLineSequenceParaAdapt());
            break;
          }
          case _HATCHPARAADAPT: {
            mergeHatchParaAdapt(other.getHatchParaAdapt());
            break;
          }
          case VECTORDATA_NOT_SET: {
            break;
          }
        }
        switch (other.getProcessMetaDataCase()) {
          case LPBF_METADATA: {
            mergeLpbfMetadata(other.getLpbfMetadata());
            break;
          }
          case MICRO_STRUCTURING_METADATA: {
            mergeMicroStructuringMetadata(other.getMicroStructuringMetadata());
            break;
          }
          case POLISHING_METADATA: {
            mergePolishingMetadata(other.getPolishingMetadata());
            break;
          }
          case PROCESSMETADATA_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getLineSequenceFieldBuilder().getBuilder(),
                    extensionRegistry);
                vectorDataCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getHatchesFieldBuilder().getBuilder(),
                    extensionRegistry);
                vectorDataCase_ = 2;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getPointSequenceFieldBuilder().getBuilder(),
                    extensionRegistry);
                vectorDataCase_ = 3;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getArcsFieldBuilder().getBuilder(),
                    extensionRegistry);
                vectorDataCase_ = 4;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getEllipsesFieldBuilder().getBuilder(),
                    extensionRegistry);
                vectorDataCase_ = 5;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getLineSequence3DFieldBuilder().getBuilder(),
                    extensionRegistry);
                vectorDataCase_ = 6;
                break;
              } // case 50
              case 58: {
                input.readMessage(
                    getHatches3DFieldBuilder().getBuilder(),
                    extensionRegistry);
                vectorDataCase_ = 7;
                break;
              } // case 58
              case 66: {
                input.readMessage(
                    getPointSequence3DFieldBuilder().getBuilder(),
                    extensionRegistry);
                vectorDataCase_ = 8;
                break;
              } // case 66
              case 74: {
                input.readMessage(
                    getArcs3DFieldBuilder().getBuilder(),
                    extensionRegistry);
                vectorDataCase_ = 9;
                break;
              } // case 74
              case 82: {
                input.readMessage(
                    getExposurePauseFieldBuilder().getBuilder(),
                    extensionRegistry);
                vectorDataCase_ = 10;
                break;
              } // case 82
              case 90: {
                input.readMessage(
                    getLineSequenceParaAdaptFieldBuilder().getBuilder(),
                    extensionRegistry);
                vectorDataCase_ = 11;
                break;
              } // case 90
              case 98: {
                input.readMessage(
                    getHatchParaAdaptFieldBuilder().getBuilder(),
                    extensionRegistry);
                vectorDataCase_ = 12;
                break;
              } // case 98
              case 400: {
                markingParamsKey_ = input.readInt32();
                bitField0_ |= 0x00001000;
                break;
              } // case 400
              case 424: {
                laserIndex_ = input.readInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 424
              case 432: {
                repeats_ = input.readUInt64();
                bitField0_ |= 0x00004000;
                break;
              } // case 432
              case 802: {
                input.readMessage(
                    getMetaDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00008000;
                break;
              } // case 802
              case 810: {
                input.readMessage(
                    getLpbfMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);
                processMetaDataCase_ = 101;
                break;
              } // case 810
              case 818: {
                input.readMessage(
                    getMicroStructuringMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);
                processMetaDataCase_ = 102;
                break;
              } // case 818
              case 826: {
                input.readMessage(
                    getPolishingMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);
                processMetaDataCase_ = 103;
                break;
              } // case 826
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int vectorDataCase_ = 0;
      private java.lang.Object vectorData_;
      public VectorDataCase
          getVectorDataCase() {
        return VectorDataCase.forNumber(
            vectorDataCase_);
      }

      public Builder clearVectorData() {
        vectorDataCase_ = 0;
        vectorData_ = null;
        onChanged();
        return this;
      }

      private int processMetaDataCase_ = 0;
      private java.lang.Object processMetaData_;
      public ProcessMetaDataCase
          getProcessMetaDataCase() {
        return ProcessMetaDataCase.forNumber(
            processMetaDataCase_);
      }

      public Builder clearProcessMetaData() {
        processMetaDataCase_ = 0;
        processMetaData_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequence, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceOrBuilder> lineSequenceBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
       * @return Whether the lineSequence field is set.
       */
      @java.lang.Override
      public boolean hasLineSequence() {
        return vectorDataCase_ == 1;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
       * @return The lineSequence.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence getLineSequence() {
        if (lineSequenceBuilder_ == null) {
          if (vectorDataCase_ == 1) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.getDefaultInstance();
        } else {
          if (vectorDataCase_ == 1) {
            return lineSequenceBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
       */
      public Builder setLineSequence(open_vector_format.OpenVectorFormat.VectorBlock.LineSequence value) {
        if (lineSequenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vectorData_ = value;
          onChanged();
        } else {
          lineSequenceBuilder_.setMessage(value);
        }
        vectorDataCase_ = 1;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
       */
      public Builder setLineSequence(
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.Builder builderForValue) {
        if (lineSequenceBuilder_ == null) {
          vectorData_ = builderForValue.build();
          onChanged();
        } else {
          lineSequenceBuilder_.setMessage(builderForValue.build());
        }
        vectorDataCase_ = 1;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
       */
      public Builder mergeLineSequence(open_vector_format.OpenVectorFormat.VectorBlock.LineSequence value) {
        if (lineSequenceBuilder_ == null) {
          if (vectorDataCase_ == 1 &&
              vectorData_ != open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.getDefaultInstance()) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.LineSequence) vectorData_)
                .mergeFrom(value).buildPartial();
          } else {
            vectorData_ = value;
          }
          onChanged();
        } else {
          if (vectorDataCase_ == 1) {
            lineSequenceBuilder_.mergeFrom(value);
          } else {
            lineSequenceBuilder_.setMessage(value);
          }
        }
        vectorDataCase_ = 1;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
       */
      public Builder clearLineSequence() {
        if (lineSequenceBuilder_ == null) {
          if (vectorDataCase_ == 1) {
            vectorDataCase_ = 0;
            vectorData_ = null;
            onChanged();
          }
        } else {
          if (vectorDataCase_ == 1) {
            vectorDataCase_ = 0;
            vectorData_ = null;
          }
          lineSequenceBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.Builder getLineSequenceBuilder() {
        return getLineSequenceFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceOrBuilder getLineSequenceOrBuilder() {
        if ((vectorDataCase_ == 1) && (lineSequenceBuilder_ != null)) {
          return lineSequenceBuilder_.getMessageOrBuilder();
        } else {
          if (vectorDataCase_ == 1) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence line_sequence = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequence, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceOrBuilder> 
          getLineSequenceFieldBuilder() {
        if (lineSequenceBuilder_ == null) {
          if (!(vectorDataCase_ == 1)) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.getDefaultInstance();
          }
          lineSequenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.LineSequence, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence) vectorData_,
                  getParentForChildren(),
                  isClean());
          vectorData_ = null;
        }
        vectorDataCase_ = 1;
        onChanged();
        return lineSequenceBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.Hatches, open_vector_format.OpenVectorFormat.VectorBlock.Hatches.Builder, open_vector_format.OpenVectorFormat.VectorBlock.HatchesOrBuilder> HatchesBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
       * @return Whether the hatches field is set.
       */
      @java.lang.Override
      public boolean hasHatches() {
        return vectorDataCase_ == 2;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
       * @return The hatches.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.Hatches getHatches() {
        if (HatchesBuilder_ == null) {
          if (vectorDataCase_ == 2) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.Hatches) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Hatches.getDefaultInstance();
        } else {
          if (vectorDataCase_ == 2) {
            return HatchesBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Hatches.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
       */
      public Builder setHatches(open_vector_format.OpenVectorFormat.VectorBlock.Hatches value) {
        if (HatchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vectorData_ = value;
          onChanged();
        } else {
          HatchesBuilder_.setMessage(value);
        }
        vectorDataCase_ = 2;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
       */
      public Builder setHatches(
          open_vector_format.OpenVectorFormat.VectorBlock.Hatches.Builder builderForValue) {
        if (HatchesBuilder_ == null) {
          vectorData_ = builderForValue.build();
          onChanged();
        } else {
          HatchesBuilder_.setMessage(builderForValue.build());
        }
        vectorDataCase_ = 2;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
       */
      public Builder mergeHatches(open_vector_format.OpenVectorFormat.VectorBlock.Hatches value) {
        if (HatchesBuilder_ == null) {
          if (vectorDataCase_ == 2 &&
              vectorData_ != open_vector_format.OpenVectorFormat.VectorBlock.Hatches.getDefaultInstance()) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.Hatches.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.Hatches) vectorData_)
                .mergeFrom(value).buildPartial();
          } else {
            vectorData_ = value;
          }
          onChanged();
        } else {
          if (vectorDataCase_ == 2) {
            HatchesBuilder_.mergeFrom(value);
          } else {
            HatchesBuilder_.setMessage(value);
          }
        }
        vectorDataCase_ = 2;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
       */
      public Builder clearHatches() {
        if (HatchesBuilder_ == null) {
          if (vectorDataCase_ == 2) {
            vectorDataCase_ = 0;
            vectorData_ = null;
            onChanged();
          }
        } else {
          if (vectorDataCase_ == 2) {
            vectorDataCase_ = 0;
            vectorData_ = null;
          }
          HatchesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.Hatches.Builder getHatchesBuilder() {
        return getHatchesFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.HatchesOrBuilder getHatchesOrBuilder() {
        if ((vectorDataCase_ == 2) && (HatchesBuilder_ != null)) {
          return HatchesBuilder_.getMessageOrBuilder();
        } else {
          if (vectorDataCase_ == 2) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.Hatches) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Hatches.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches _hatches = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.Hatches, open_vector_format.OpenVectorFormat.VectorBlock.Hatches.Builder, open_vector_format.OpenVectorFormat.VectorBlock.HatchesOrBuilder> 
          getHatchesFieldBuilder() {
        if (HatchesBuilder_ == null) {
          if (!(vectorDataCase_ == 2)) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.Hatches.getDefaultInstance();
          }
          HatchesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.Hatches, open_vector_format.OpenVectorFormat.VectorBlock.Hatches.Builder, open_vector_format.OpenVectorFormat.VectorBlock.HatchesOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.Hatches) vectorData_,
                  getParentForChildren(),
                  isClean());
          vectorData_ = null;
        }
        vectorDataCase_ = 2;
        onChanged();
        return HatchesBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.PointSequence, open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.Builder, open_vector_format.OpenVectorFormat.VectorBlock.PointSequenceOrBuilder> pointSequenceBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
       * @return Whether the pointSequence field is set.
       */
      @java.lang.Override
      public boolean hasPointSequence() {
        return vectorDataCase_ == 3;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
       * @return The pointSequence.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence getPointSequence() {
        if (pointSequenceBuilder_ == null) {
          if (vectorDataCase_ == 3) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.getDefaultInstance();
        } else {
          if (vectorDataCase_ == 3) {
            return pointSequenceBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
       */
      public Builder setPointSequence(open_vector_format.OpenVectorFormat.VectorBlock.PointSequence value) {
        if (pointSequenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vectorData_ = value;
          onChanged();
        } else {
          pointSequenceBuilder_.setMessage(value);
        }
        vectorDataCase_ = 3;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
       */
      public Builder setPointSequence(
          open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.Builder builderForValue) {
        if (pointSequenceBuilder_ == null) {
          vectorData_ = builderForValue.build();
          onChanged();
        } else {
          pointSequenceBuilder_.setMessage(builderForValue.build());
        }
        vectorDataCase_ = 3;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
       */
      public Builder mergePointSequence(open_vector_format.OpenVectorFormat.VectorBlock.PointSequence value) {
        if (pointSequenceBuilder_ == null) {
          if (vectorDataCase_ == 3 &&
              vectorData_ != open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.getDefaultInstance()) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.PointSequence) vectorData_)
                .mergeFrom(value).buildPartial();
          } else {
            vectorData_ = value;
          }
          onChanged();
        } else {
          if (vectorDataCase_ == 3) {
            pointSequenceBuilder_.mergeFrom(value);
          } else {
            pointSequenceBuilder_.setMessage(value);
          }
        }
        vectorDataCase_ = 3;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
       */
      public Builder clearPointSequence() {
        if (pointSequenceBuilder_ == null) {
          if (vectorDataCase_ == 3) {
            vectorDataCase_ = 0;
            vectorData_ = null;
            onChanged();
          }
        } else {
          if (vectorDataCase_ == 3) {
            vectorDataCase_ = 0;
            vectorData_ = null;
          }
          pointSequenceBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.Builder getPointSequenceBuilder() {
        return getPointSequenceFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.PointSequenceOrBuilder getPointSequenceOrBuilder() {
        if ((vectorDataCase_ == 3) && (pointSequenceBuilder_ != null)) {
          return pointSequenceBuilder_.getMessageOrBuilder();
        } else {
          if (vectorDataCase_ == 3) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence point_sequence = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.PointSequence, open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.Builder, open_vector_format.OpenVectorFormat.VectorBlock.PointSequenceOrBuilder> 
          getPointSequenceFieldBuilder() {
        if (pointSequenceBuilder_ == null) {
          if (!(vectorDataCase_ == 3)) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.getDefaultInstance();
          }
          pointSequenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.PointSequence, open_vector_format.OpenVectorFormat.VectorBlock.PointSequence.Builder, open_vector_format.OpenVectorFormat.VectorBlock.PointSequenceOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence) vectorData_,
                  getParentForChildren(),
                  isClean());
          vectorData_ = null;
        }
        vectorDataCase_ = 3;
        onChanged();
        return pointSequenceBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.Arcs, open_vector_format.OpenVectorFormat.VectorBlock.Arcs.Builder, open_vector_format.OpenVectorFormat.VectorBlock.ArcsOrBuilder> ArcsBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
       * @return Whether the arcs field is set.
       */
      @java.lang.Override
      public boolean hasArcs() {
        return vectorDataCase_ == 4;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
       * @return The arcs.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.Arcs getArcs() {
        if (ArcsBuilder_ == null) {
          if (vectorDataCase_ == 4) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.Arcs) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Arcs.getDefaultInstance();
        } else {
          if (vectorDataCase_ == 4) {
            return ArcsBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Arcs.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
       */
      public Builder setArcs(open_vector_format.OpenVectorFormat.VectorBlock.Arcs value) {
        if (ArcsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vectorData_ = value;
          onChanged();
        } else {
          ArcsBuilder_.setMessage(value);
        }
        vectorDataCase_ = 4;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
       */
      public Builder setArcs(
          open_vector_format.OpenVectorFormat.VectorBlock.Arcs.Builder builderForValue) {
        if (ArcsBuilder_ == null) {
          vectorData_ = builderForValue.build();
          onChanged();
        } else {
          ArcsBuilder_.setMessage(builderForValue.build());
        }
        vectorDataCase_ = 4;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
       */
      public Builder mergeArcs(open_vector_format.OpenVectorFormat.VectorBlock.Arcs value) {
        if (ArcsBuilder_ == null) {
          if (vectorDataCase_ == 4 &&
              vectorData_ != open_vector_format.OpenVectorFormat.VectorBlock.Arcs.getDefaultInstance()) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.Arcs.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.Arcs) vectorData_)
                .mergeFrom(value).buildPartial();
          } else {
            vectorData_ = value;
          }
          onChanged();
        } else {
          if (vectorDataCase_ == 4) {
            ArcsBuilder_.mergeFrom(value);
          } else {
            ArcsBuilder_.setMessage(value);
          }
        }
        vectorDataCase_ = 4;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
       */
      public Builder clearArcs() {
        if (ArcsBuilder_ == null) {
          if (vectorDataCase_ == 4) {
            vectorDataCase_ = 0;
            vectorData_ = null;
            onChanged();
          }
        } else {
          if (vectorDataCase_ == 4) {
            vectorDataCase_ = 0;
            vectorData_ = null;
          }
          ArcsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.Arcs.Builder getArcsBuilder() {
        return getArcsFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.ArcsOrBuilder getArcsOrBuilder() {
        if ((vectorDataCase_ == 4) && (ArcsBuilder_ != null)) {
          return ArcsBuilder_.getMessageOrBuilder();
        } else {
          if (vectorDataCase_ == 4) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.Arcs) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Arcs.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs _arcs = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.Arcs, open_vector_format.OpenVectorFormat.VectorBlock.Arcs.Builder, open_vector_format.OpenVectorFormat.VectorBlock.ArcsOrBuilder> 
          getArcsFieldBuilder() {
        if (ArcsBuilder_ == null) {
          if (!(vectorDataCase_ == 4)) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.Arcs.getDefaultInstance();
          }
          ArcsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.Arcs, open_vector_format.OpenVectorFormat.VectorBlock.Arcs.Builder, open_vector_format.OpenVectorFormat.VectorBlock.ArcsOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.Arcs) vectorData_,
                  getParentForChildren(),
                  isClean());
          vectorData_ = null;
        }
        vectorDataCase_ = 4;
        onChanged();
        return ArcsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.Ellipses, open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.Builder, open_vector_format.OpenVectorFormat.VectorBlock.EllipsesOrBuilder> ellipsesBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
       * @return Whether the ellipses field is set.
       */
      @java.lang.Override
      public boolean hasEllipses() {
        return vectorDataCase_ == 5;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
       * @return The ellipses.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.Ellipses getEllipses() {
        if (ellipsesBuilder_ == null) {
          if (vectorDataCase_ == 5) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.Ellipses) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.getDefaultInstance();
        } else {
          if (vectorDataCase_ == 5) {
            return ellipsesBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
       */
      public Builder setEllipses(open_vector_format.OpenVectorFormat.VectorBlock.Ellipses value) {
        if (ellipsesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vectorData_ = value;
          onChanged();
        } else {
          ellipsesBuilder_.setMessage(value);
        }
        vectorDataCase_ = 5;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
       */
      public Builder setEllipses(
          open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.Builder builderForValue) {
        if (ellipsesBuilder_ == null) {
          vectorData_ = builderForValue.build();
          onChanged();
        } else {
          ellipsesBuilder_.setMessage(builderForValue.build());
        }
        vectorDataCase_ = 5;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
       */
      public Builder mergeEllipses(open_vector_format.OpenVectorFormat.VectorBlock.Ellipses value) {
        if (ellipsesBuilder_ == null) {
          if (vectorDataCase_ == 5 &&
              vectorData_ != open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.getDefaultInstance()) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.Ellipses) vectorData_)
                .mergeFrom(value).buildPartial();
          } else {
            vectorData_ = value;
          }
          onChanged();
        } else {
          if (vectorDataCase_ == 5) {
            ellipsesBuilder_.mergeFrom(value);
          } else {
            ellipsesBuilder_.setMessage(value);
          }
        }
        vectorDataCase_ = 5;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
       */
      public Builder clearEllipses() {
        if (ellipsesBuilder_ == null) {
          if (vectorDataCase_ == 5) {
            vectorDataCase_ = 0;
            vectorData_ = null;
            onChanged();
          }
        } else {
          if (vectorDataCase_ == 5) {
            vectorDataCase_ = 0;
            vectorData_ = null;
          }
          ellipsesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.Builder getEllipsesBuilder() {
        return getEllipsesFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.EllipsesOrBuilder getEllipsesOrBuilder() {
        if ((vectorDataCase_ == 5) && (ellipsesBuilder_ != null)) {
          return ellipsesBuilder_.getMessageOrBuilder();
        } else {
          if (vectorDataCase_ == 5) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.Ellipses) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.Ellipses ellipses = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.Ellipses, open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.Builder, open_vector_format.OpenVectorFormat.VectorBlock.EllipsesOrBuilder> 
          getEllipsesFieldBuilder() {
        if (ellipsesBuilder_ == null) {
          if (!(vectorDataCase_ == 5)) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.getDefaultInstance();
          }
          ellipsesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.Ellipses, open_vector_format.OpenVectorFormat.VectorBlock.Ellipses.Builder, open_vector_format.OpenVectorFormat.VectorBlock.EllipsesOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.Ellipses) vectorData_,
                  getParentForChildren(),
                  isClean());
          vectorData_ = null;
        }
        vectorDataCase_ = 5;
        onChanged();
        return ellipsesBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3DOrBuilder> lineSequence3DBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
       * @return Whether the lineSequence3d field is set.
       */
      @java.lang.Override
      public boolean hasLineSequence3D() {
        return vectorDataCase_ == 6;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
       * @return The lineSequence3d.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D getLineSequence3D() {
        if (lineSequence3DBuilder_ == null) {
          if (vectorDataCase_ == 6) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.getDefaultInstance();
        } else {
          if (vectorDataCase_ == 6) {
            return lineSequence3DBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
       */
      public Builder setLineSequence3D(open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D value) {
        if (lineSequence3DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vectorData_ = value;
          onChanged();
        } else {
          lineSequence3DBuilder_.setMessage(value);
        }
        vectorDataCase_ = 6;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
       */
      public Builder setLineSequence3D(
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.Builder builderForValue) {
        if (lineSequence3DBuilder_ == null) {
          vectorData_ = builderForValue.build();
          onChanged();
        } else {
          lineSequence3DBuilder_.setMessage(builderForValue.build());
        }
        vectorDataCase_ = 6;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
       */
      public Builder mergeLineSequence3D(open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D value) {
        if (lineSequence3DBuilder_ == null) {
          if (vectorDataCase_ == 6 &&
              vectorData_ != open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.getDefaultInstance()) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D) vectorData_)
                .mergeFrom(value).buildPartial();
          } else {
            vectorData_ = value;
          }
          onChanged();
        } else {
          if (vectorDataCase_ == 6) {
            lineSequence3DBuilder_.mergeFrom(value);
          } else {
            lineSequence3DBuilder_.setMessage(value);
          }
        }
        vectorDataCase_ = 6;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
       */
      public Builder clearLineSequence3D() {
        if (lineSequence3DBuilder_ == null) {
          if (vectorDataCase_ == 6) {
            vectorDataCase_ = 0;
            vectorData_ = null;
            onChanged();
          }
        } else {
          if (vectorDataCase_ == 6) {
            vectorDataCase_ = 0;
            vectorData_ = null;
          }
          lineSequence3DBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.Builder getLineSequence3DBuilder() {
        return getLineSequence3DFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3DOrBuilder getLineSequence3DOrBuilder() {
        if ((vectorDataCase_ == 6) && (lineSequence3DBuilder_ != null)) {
          return lineSequence3DBuilder_.getMessageOrBuilder();
        } else {
          if (vectorDataCase_ == 6) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequence3D line_sequence_3d = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3DOrBuilder> 
          getLineSequence3DFieldBuilder() {
        if (lineSequence3DBuilder_ == null) {
          if (!(vectorDataCase_ == 6)) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.getDefaultInstance();
          }
          lineSequence3DBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3DOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.LineSequence3D) vectorData_,
                  getParentForChildren(),
                  isClean());
          vectorData_ = null;
        }
        vectorDataCase_ = 6;
        onChanged();
        return lineSequence3DBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D, open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.Builder, open_vector_format.OpenVectorFormat.VectorBlock.Hatches3DOrBuilder> hatches3DBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
       * @return Whether the hatches3d field is set.
       */
      @java.lang.Override
      public boolean hasHatches3D() {
        return vectorDataCase_ == 7;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
       * @return The hatches3d.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D getHatches3D() {
        if (hatches3DBuilder_ == null) {
          if (vectorDataCase_ == 7) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.getDefaultInstance();
        } else {
          if (vectorDataCase_ == 7) {
            return hatches3DBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
       */
      public Builder setHatches3D(open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D value) {
        if (hatches3DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vectorData_ = value;
          onChanged();
        } else {
          hatches3DBuilder_.setMessage(value);
        }
        vectorDataCase_ = 7;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
       */
      public Builder setHatches3D(
          open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.Builder builderForValue) {
        if (hatches3DBuilder_ == null) {
          vectorData_ = builderForValue.build();
          onChanged();
        } else {
          hatches3DBuilder_.setMessage(builderForValue.build());
        }
        vectorDataCase_ = 7;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
       */
      public Builder mergeHatches3D(open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D value) {
        if (hatches3DBuilder_ == null) {
          if (vectorDataCase_ == 7 &&
              vectorData_ != open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.getDefaultInstance()) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D) vectorData_)
                .mergeFrom(value).buildPartial();
          } else {
            vectorData_ = value;
          }
          onChanged();
        } else {
          if (vectorDataCase_ == 7) {
            hatches3DBuilder_.mergeFrom(value);
          } else {
            hatches3DBuilder_.setMessage(value);
          }
        }
        vectorDataCase_ = 7;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
       */
      public Builder clearHatches3D() {
        if (hatches3DBuilder_ == null) {
          if (vectorDataCase_ == 7) {
            vectorDataCase_ = 0;
            vectorData_ = null;
            onChanged();
          }
        } else {
          if (vectorDataCase_ == 7) {
            vectorDataCase_ = 0;
            vectorData_ = null;
          }
          hatches3DBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.Builder getHatches3DBuilder() {
        return getHatches3DFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.Hatches3DOrBuilder getHatches3DOrBuilder() {
        if ((vectorDataCase_ == 7) && (hatches3DBuilder_ != null)) {
          return hatches3DBuilder_.getMessageOrBuilder();
        } else {
          if (vectorDataCase_ == 7) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.Hatches3D hatches_3d = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D, open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.Builder, open_vector_format.OpenVectorFormat.VectorBlock.Hatches3DOrBuilder> 
          getHatches3DFieldBuilder() {
        if (hatches3DBuilder_ == null) {
          if (!(vectorDataCase_ == 7)) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.getDefaultInstance();
          }
          hatches3DBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D, open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D.Builder, open_vector_format.OpenVectorFormat.VectorBlock.Hatches3DOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.Hatches3D) vectorData_,
                  getParentForChildren(),
                  isClean());
          vectorData_ = null;
        }
        vectorDataCase_ = 7;
        onChanged();
        return hatches3DBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D, open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.Builder, open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3DOrBuilder> pointSequence3DBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
       * @return Whether the pointSequence3d field is set.
       */
      @java.lang.Override
      public boolean hasPointSequence3D() {
        return vectorDataCase_ == 8;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
       * @return The pointSequence3d.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D getPointSequence3D() {
        if (pointSequence3DBuilder_ == null) {
          if (vectorDataCase_ == 8) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.getDefaultInstance();
        } else {
          if (vectorDataCase_ == 8) {
            return pointSequence3DBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
       */
      public Builder setPointSequence3D(open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D value) {
        if (pointSequence3DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vectorData_ = value;
          onChanged();
        } else {
          pointSequence3DBuilder_.setMessage(value);
        }
        vectorDataCase_ = 8;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
       */
      public Builder setPointSequence3D(
          open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.Builder builderForValue) {
        if (pointSequence3DBuilder_ == null) {
          vectorData_ = builderForValue.build();
          onChanged();
        } else {
          pointSequence3DBuilder_.setMessage(builderForValue.build());
        }
        vectorDataCase_ = 8;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
       */
      public Builder mergePointSequence3D(open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D value) {
        if (pointSequence3DBuilder_ == null) {
          if (vectorDataCase_ == 8 &&
              vectorData_ != open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.getDefaultInstance()) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D) vectorData_)
                .mergeFrom(value).buildPartial();
          } else {
            vectorData_ = value;
          }
          onChanged();
        } else {
          if (vectorDataCase_ == 8) {
            pointSequence3DBuilder_.mergeFrom(value);
          } else {
            pointSequence3DBuilder_.setMessage(value);
          }
        }
        vectorDataCase_ = 8;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
       */
      public Builder clearPointSequence3D() {
        if (pointSequence3DBuilder_ == null) {
          if (vectorDataCase_ == 8) {
            vectorDataCase_ = 0;
            vectorData_ = null;
            onChanged();
          }
        } else {
          if (vectorDataCase_ == 8) {
            vectorDataCase_ = 0;
            vectorData_ = null;
          }
          pointSequence3DBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.Builder getPointSequence3DBuilder() {
        return getPointSequence3DFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3DOrBuilder getPointSequence3DOrBuilder() {
        if ((vectorDataCase_ == 8) && (pointSequence3DBuilder_ != null)) {
          return pointSequence3DBuilder_.getMessageOrBuilder();
        } else {
          if (vectorDataCase_ == 8) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.PointSequence3D point_sequence_3d = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D, open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.Builder, open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3DOrBuilder> 
          getPointSequence3DFieldBuilder() {
        if (pointSequence3DBuilder_ == null) {
          if (!(vectorDataCase_ == 8)) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.getDefaultInstance();
          }
          pointSequence3DBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D, open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D.Builder, open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3DOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.PointSequence3D) vectorData_,
                  getParentForChildren(),
                  isClean());
          vectorData_ = null;
        }
        vectorDataCase_ = 8;
        onChanged();
        return pointSequence3DBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D, open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.Builder, open_vector_format.OpenVectorFormat.VectorBlock.Arcs3DOrBuilder> arcs3DBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
       * @return Whether the arcs3d field is set.
       */
      @java.lang.Override
      public boolean hasArcs3D() {
        return vectorDataCase_ == 9;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
       * @return The arcs3d.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D getArcs3D() {
        if (arcs3DBuilder_ == null) {
          if (vectorDataCase_ == 9) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.getDefaultInstance();
        } else {
          if (vectorDataCase_ == 9) {
            return arcs3DBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
       */
      public Builder setArcs3D(open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D value) {
        if (arcs3DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vectorData_ = value;
          onChanged();
        } else {
          arcs3DBuilder_.setMessage(value);
        }
        vectorDataCase_ = 9;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
       */
      public Builder setArcs3D(
          open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.Builder builderForValue) {
        if (arcs3DBuilder_ == null) {
          vectorData_ = builderForValue.build();
          onChanged();
        } else {
          arcs3DBuilder_.setMessage(builderForValue.build());
        }
        vectorDataCase_ = 9;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
       */
      public Builder mergeArcs3D(open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D value) {
        if (arcs3DBuilder_ == null) {
          if (vectorDataCase_ == 9 &&
              vectorData_ != open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.getDefaultInstance()) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D) vectorData_)
                .mergeFrom(value).buildPartial();
          } else {
            vectorData_ = value;
          }
          onChanged();
        } else {
          if (vectorDataCase_ == 9) {
            arcs3DBuilder_.mergeFrom(value);
          } else {
            arcs3DBuilder_.setMessage(value);
          }
        }
        vectorDataCase_ = 9;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
       */
      public Builder clearArcs3D() {
        if (arcs3DBuilder_ == null) {
          if (vectorDataCase_ == 9) {
            vectorDataCase_ = 0;
            vectorData_ = null;
            onChanged();
          }
        } else {
          if (vectorDataCase_ == 9) {
            vectorDataCase_ = 0;
            vectorData_ = null;
          }
          arcs3DBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.Builder getArcs3DBuilder() {
        return getArcs3DFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.Arcs3DOrBuilder getArcs3DOrBuilder() {
        if ((vectorDataCase_ == 9) && (arcs3DBuilder_ != null)) {
          return arcs3DBuilder_.getMessageOrBuilder();
        } else {
          if (vectorDataCase_ == 9) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.Arcs3D arcs_3d = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D, open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.Builder, open_vector_format.OpenVectorFormat.VectorBlock.Arcs3DOrBuilder> 
          getArcs3DFieldBuilder() {
        if (arcs3DBuilder_ == null) {
          if (!(vectorDataCase_ == 9)) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.getDefaultInstance();
          }
          arcs3DBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D, open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D.Builder, open_vector_format.OpenVectorFormat.VectorBlock.Arcs3DOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.Arcs3D) vectorData_,
                  getParentForChildren(),
                  isClean());
          vectorData_ = null;
        }
        vectorDataCase_ = 9;
        onChanged();
        return arcs3DBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause, open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.Builder, open_vector_format.OpenVectorFormat.VectorBlock.ExposurePauseOrBuilder> exposurePauseBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
       * @return Whether the exposurePause field is set.
       */
      @java.lang.Override
      public boolean hasExposurePause() {
        return vectorDataCase_ == 10;
      }
      /**
       * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
       * @return The exposurePause.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause getExposurePause() {
        if (exposurePauseBuilder_ == null) {
          if (vectorDataCase_ == 10) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.getDefaultInstance();
        } else {
          if (vectorDataCase_ == 10) {
            return exposurePauseBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
       */
      public Builder setExposurePause(open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause value) {
        if (exposurePauseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vectorData_ = value;
          onChanged();
        } else {
          exposurePauseBuilder_.setMessage(value);
        }
        vectorDataCase_ = 10;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
       */
      public Builder setExposurePause(
          open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.Builder builderForValue) {
        if (exposurePauseBuilder_ == null) {
          vectorData_ = builderForValue.build();
          onChanged();
        } else {
          exposurePauseBuilder_.setMessage(builderForValue.build());
        }
        vectorDataCase_ = 10;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
       */
      public Builder mergeExposurePause(open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause value) {
        if (exposurePauseBuilder_ == null) {
          if (vectorDataCase_ == 10 &&
              vectorData_ != open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.getDefaultInstance()) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause) vectorData_)
                .mergeFrom(value).buildPartial();
          } else {
            vectorData_ = value;
          }
          onChanged();
        } else {
          if (vectorDataCase_ == 10) {
            exposurePauseBuilder_.mergeFrom(value);
          } else {
            exposurePauseBuilder_.setMessage(value);
          }
        }
        vectorDataCase_ = 10;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
       */
      public Builder clearExposurePause() {
        if (exposurePauseBuilder_ == null) {
          if (vectorDataCase_ == 10) {
            vectorDataCase_ = 0;
            vectorData_ = null;
            onChanged();
          }
        } else {
          if (vectorDataCase_ == 10) {
            vectorDataCase_ = 0;
            vectorData_ = null;
          }
          exposurePauseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.Builder getExposurePauseBuilder() {
        return getExposurePauseFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.ExposurePauseOrBuilder getExposurePauseOrBuilder() {
        if ((vectorDataCase_ == 10) && (exposurePauseBuilder_ != null)) {
          return exposurePauseBuilder_.getMessageOrBuilder();
        } else {
          if (vectorDataCase_ == 10) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.ExposurePause exposure_pause = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause, open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.Builder, open_vector_format.OpenVectorFormat.VectorBlock.ExposurePauseOrBuilder> 
          getExposurePauseFieldBuilder() {
        if (exposurePauseBuilder_ == null) {
          if (!(vectorDataCase_ == 10)) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.getDefaultInstance();
          }
          exposurePauseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause, open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause.Builder, open_vector_format.OpenVectorFormat.VectorBlock.ExposurePauseOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.ExposurePause) vectorData_,
                  getParentForChildren(),
                  isClean());
          vectorData_ = null;
        }
        vectorDataCase_ = 10;
        onChanged();
        return exposurePauseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder> lineSequenceParaAdaptBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
       * @return Whether the lineSequenceParaAdapt field is set.
       */
      @java.lang.Override
      public boolean hasLineSequenceParaAdapt() {
        return vectorDataCase_ == 11;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
       * @return The lineSequenceParaAdapt.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt getLineSequenceParaAdapt() {
        if (lineSequenceParaAdaptBuilder_ == null) {
          if (vectorDataCase_ == 11) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.getDefaultInstance();
        } else {
          if (vectorDataCase_ == 11) {
            return lineSequenceParaAdaptBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
       */
      public Builder setLineSequenceParaAdapt(open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt value) {
        if (lineSequenceParaAdaptBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vectorData_ = value;
          onChanged();
        } else {
          lineSequenceParaAdaptBuilder_.setMessage(value);
        }
        vectorDataCase_ = 11;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
       */
      public Builder setLineSequenceParaAdapt(
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder builderForValue) {
        if (lineSequenceParaAdaptBuilder_ == null) {
          vectorData_ = builderForValue.build();
          onChanged();
        } else {
          lineSequenceParaAdaptBuilder_.setMessage(builderForValue.build());
        }
        vectorDataCase_ = 11;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
       */
      public Builder mergeLineSequenceParaAdapt(open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt value) {
        if (lineSequenceParaAdaptBuilder_ == null) {
          if (vectorDataCase_ == 11 &&
              vectorData_ != open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.getDefaultInstance()) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt) vectorData_)
                .mergeFrom(value).buildPartial();
          } else {
            vectorData_ = value;
          }
          onChanged();
        } else {
          if (vectorDataCase_ == 11) {
            lineSequenceParaAdaptBuilder_.mergeFrom(value);
          } else {
            lineSequenceParaAdaptBuilder_.setMessage(value);
          }
        }
        vectorDataCase_ = 11;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
       */
      public Builder clearLineSequenceParaAdapt() {
        if (lineSequenceParaAdaptBuilder_ == null) {
          if (vectorDataCase_ == 11) {
            vectorDataCase_ = 0;
            vectorData_ = null;
            onChanged();
          }
        } else {
          if (vectorDataCase_ == 11) {
            vectorDataCase_ = 0;
            vectorData_ = null;
          }
          lineSequenceParaAdaptBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder getLineSequenceParaAdaptBuilder() {
        return getLineSequenceParaAdaptFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder getLineSequenceParaAdaptOrBuilder() {
        if ((vectorDataCase_ == 11) && (lineSequenceParaAdaptBuilder_ != null)) {
          return lineSequenceParaAdaptBuilder_.getMessageOrBuilder();
        } else {
          if (vectorDataCase_ == 11) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.LineSequenceParaAdapt line_sequence_para_adapt = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder> 
          getLineSequenceParaAdaptFieldBuilder() {
        if (lineSequenceParaAdaptBuilder_ == null) {
          if (!(vectorDataCase_ == 11)) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.getDefaultInstance();
          }
          lineSequenceParaAdaptBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdaptOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.LineSequenceParaAdapt) vectorData_,
                  getParentForChildren(),
                  isClean());
          vectorData_ = null;
        }
        vectorDataCase_ = 11;
        onChanged();
        return lineSequenceParaAdaptBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt, open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.Builder, open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdaptOrBuilder> HatchParaAdaptBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
       * @return Whether the hatchParaAdapt field is set.
       */
      @java.lang.Override
      public boolean hasHatchParaAdapt() {
        return vectorDataCase_ == 12;
      }
      /**
       * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
       * @return The hatchParaAdapt.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt getHatchParaAdapt() {
        if (HatchParaAdaptBuilder_ == null) {
          if (vectorDataCase_ == 12) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.getDefaultInstance();
        } else {
          if (vectorDataCase_ == 12) {
            return HatchParaAdaptBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
       */
      public Builder setHatchParaAdapt(open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt value) {
        if (HatchParaAdaptBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vectorData_ = value;
          onChanged();
        } else {
          HatchParaAdaptBuilder_.setMessage(value);
        }
        vectorDataCase_ = 12;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
       */
      public Builder setHatchParaAdapt(
          open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.Builder builderForValue) {
        if (HatchParaAdaptBuilder_ == null) {
          vectorData_ = builderForValue.build();
          onChanged();
        } else {
          HatchParaAdaptBuilder_.setMessage(builderForValue.build());
        }
        vectorDataCase_ = 12;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
       */
      public Builder mergeHatchParaAdapt(open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt value) {
        if (HatchParaAdaptBuilder_ == null) {
          if (vectorDataCase_ == 12 &&
              vectorData_ != open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.getDefaultInstance()) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt) vectorData_)
                .mergeFrom(value).buildPartial();
          } else {
            vectorData_ = value;
          }
          onChanged();
        } else {
          if (vectorDataCase_ == 12) {
            HatchParaAdaptBuilder_.mergeFrom(value);
          } else {
            HatchParaAdaptBuilder_.setMessage(value);
          }
        }
        vectorDataCase_ = 12;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
       */
      public Builder clearHatchParaAdapt() {
        if (HatchParaAdaptBuilder_ == null) {
          if (vectorDataCase_ == 12) {
            vectorDataCase_ = 0;
            vectorData_ = null;
            onChanged();
          }
        } else {
          if (vectorDataCase_ == 12) {
            vectorDataCase_ = 0;
            vectorData_ = null;
          }
          HatchParaAdaptBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.Builder getHatchParaAdaptBuilder() {
        return getHatchParaAdaptFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdaptOrBuilder getHatchParaAdaptOrBuilder() {
        if ((vectorDataCase_ == 12) && (HatchParaAdaptBuilder_ != null)) {
          return HatchParaAdaptBuilder_.getMessageOrBuilder();
        } else {
          if (vectorDataCase_ == 12) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt) vectorData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.HatchesParaAdapt _hatchParaAdapt = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt, open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.Builder, open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdaptOrBuilder> 
          getHatchParaAdaptFieldBuilder() {
        if (HatchParaAdaptBuilder_ == null) {
          if (!(vectorDataCase_ == 12)) {
            vectorData_ = open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.getDefaultInstance();
          }
          HatchParaAdaptBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt, open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt.Builder, open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdaptOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.HatchesParaAdapt) vectorData_,
                  getParentForChildren(),
                  isClean());
          vectorData_ = null;
        }
        vectorDataCase_ = 12;
        onChanged();
        return HatchParaAdaptBuilder_;
      }

      private int markingParamsKey_ ;
      /**
       * <pre>
       *key used in Job/markingParamsMap
       * </pre>
       *
       * <code>int32 marking_params_key = 50;</code>
       * @return The markingParamsKey.
       */
      @java.lang.Override
      public int getMarkingParamsKey() {
        return markingParamsKey_;
      }
      /**
       * <pre>
       *key used in Job/markingParamsMap
       * </pre>
       *
       * <code>int32 marking_params_key = 50;</code>
       * @param value The markingParamsKey to set.
       * @return This builder for chaining.
       */
      public Builder setMarkingParamsKey(int value) {

        markingParamsKey_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *key used in Job/markingParamsMap
       * </pre>
       *
       * <code>int32 marking_params_key = 50;</code>
       * @return This builder for chaining.
       */
      public Builder clearMarkingParamsKey() {
        bitField0_ = (bitField0_ & ~0x00001000);
        markingParamsKey_ = 0;
        onChanged();
        return this;
      }

      private int laserIndex_ ;
      /**
       * <pre>
       *LaserIndex is used for assigning vectorBlocks to different actors, e.g. in multi scanner systems
       * </pre>
       *
       * <code>int32 laser_index = 53;</code>
       * @return The laserIndex.
       */
      @java.lang.Override
      public int getLaserIndex() {
        return laserIndex_;
      }
      /**
       * <pre>
       *LaserIndex is used for assigning vectorBlocks to different actors, e.g. in multi scanner systems
       * </pre>
       *
       * <code>int32 laser_index = 53;</code>
       * @param value The laserIndex to set.
       * @return This builder for chaining.
       */
      public Builder setLaserIndex(int value) {

        laserIndex_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *LaserIndex is used for assigning vectorBlocks to different actors, e.g. in multi scanner systems
       * </pre>
       *
       * <code>int32 laser_index = 53;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaserIndex() {
        bitField0_ = (bitField0_ & ~0x00002000);
        laserIndex_ = 0;
        onChanged();
        return this;
      }

      private long repeats_ ;
      /**
       * <pre>
       *vetor blocks are executed in order once by default (repeats = 0),
       *then repeated [repeats] times starting with the first vector again etc.
       * </pre>
       *
       * <code>uint64 repeats = 54;</code>
       * @return The repeats.
       */
      @java.lang.Override
      public long getRepeats() {
        return repeats_;
      }
      /**
       * <pre>
       *vetor blocks are executed in order once by default (repeats = 0),
       *then repeated [repeats] times starting with the first vector again etc.
       * </pre>
       *
       * <code>uint64 repeats = 54;</code>
       * @param value The repeats to set.
       * @return This builder for chaining.
       */
      public Builder setRepeats(long value) {

        repeats_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *vetor blocks are executed in order once by default (repeats = 0),
       *then repeated [repeats] times starting with the first vector again etc.
       * </pre>
       *
       * <code>uint64 repeats = 54;</code>
       * @return This builder for chaining.
       */
      public Builder clearRepeats() {
        bitField0_ = (bitField0_ & ~0x00004000);
        repeats_ = 0L;
        onChanged();
        return this;
      }

      private open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData metaData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData, open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.Builder, open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaDataOrBuilder> metaDataBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
       * @return Whether the metaData field is set.
       */
      public boolean hasMetaData() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
       * @return The metaData.
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData getMetaData() {
        if (metaDataBuilder_ == null) {
          return metaData_ == null ? open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.getDefaultInstance() : metaData_;
        } else {
          return metaDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
       */
      public Builder setMetaData(open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metaData_ = value;
        } else {
          metaDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
       */
      public Builder setMetaData(
          open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          metaData_ = builderForValue.build();
        } else {
          metaDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
       */
      public Builder mergeMetaData(open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData value) {
        if (metaDataBuilder_ == null) {
          if (((bitField0_ & 0x00008000) != 0) &&
            metaData_ != null &&
            metaData_ != open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.getDefaultInstance()) {
            getMetaDataBuilder().mergeFrom(value);
          } else {
            metaData_ = value;
          }
        } else {
          metaDataBuilder_.mergeFrom(value);
        }
        if (metaData_ != null) {
          bitField0_ |= 0x00008000;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
       */
      public Builder clearMetaData() {
        bitField0_ = (bitField0_ & ~0x00008000);
        metaData_ = null;
        if (metaDataBuilder_ != null) {
          metaDataBuilder_.dispose();
          metaDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.Builder getMetaDataBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getMetaDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaDataOrBuilder getMetaDataOrBuilder() {
        if (metaDataBuilder_ != null) {
          return metaDataBuilder_.getMessageOrBuilder();
        } else {
          return metaData_ == null ?
              open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.getDefaultInstance() : metaData_;
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.VectorBlockMetaData meta_data = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData, open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.Builder, open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaDataOrBuilder> 
          getMetaDataFieldBuilder() {
        if (metaDataBuilder_ == null) {
          metaDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData, open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaData.Builder, open_vector_format.OpenVectorFormat.VectorBlock.VectorBlockMetaDataOrBuilder>(
                  getMetaData(),
                  getParentForChildren(),
                  isClean());
          metaData_ = null;
        }
        return metaDataBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder> lpbfMetadataBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
       * @return Whether the lpbfMetadata field is set.
       */
      @java.lang.Override
      public boolean hasLpbfMetadata() {
        return processMetaDataCase_ == 101;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
       * @return The lpbfMetadata.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata getLpbfMetadata() {
        if (lpbfMetadataBuilder_ == null) {
          if (processMetaDataCase_ == 101) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata) processMetaData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.getDefaultInstance();
        } else {
          if (processMetaDataCase_ == 101) {
            return lpbfMetadataBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
       */
      public Builder setLpbfMetadata(open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata value) {
        if (lpbfMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          processMetaData_ = value;
          onChanged();
        } else {
          lpbfMetadataBuilder_.setMessage(value);
        }
        processMetaDataCase_ = 101;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
       */
      public Builder setLpbfMetadata(
          open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder builderForValue) {
        if (lpbfMetadataBuilder_ == null) {
          processMetaData_ = builderForValue.build();
          onChanged();
        } else {
          lpbfMetadataBuilder_.setMessage(builderForValue.build());
        }
        processMetaDataCase_ = 101;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
       */
      public Builder mergeLpbfMetadata(open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata value) {
        if (lpbfMetadataBuilder_ == null) {
          if (processMetaDataCase_ == 101 &&
              processMetaData_ != open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.getDefaultInstance()) {
            processMetaData_ = open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata) processMetaData_)
                .mergeFrom(value).buildPartial();
          } else {
            processMetaData_ = value;
          }
          onChanged();
        } else {
          if (processMetaDataCase_ == 101) {
            lpbfMetadataBuilder_.mergeFrom(value);
          } else {
            lpbfMetadataBuilder_.setMessage(value);
          }
        }
        processMetaDataCase_ = 101;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
       */
      public Builder clearLpbfMetadata() {
        if (lpbfMetadataBuilder_ == null) {
          if (processMetaDataCase_ == 101) {
            processMetaDataCase_ = 0;
            processMetaData_ = null;
            onChanged();
          }
        } else {
          if (processMetaDataCase_ == 101) {
            processMetaDataCase_ = 0;
            processMetaData_ = null;
          }
          lpbfMetadataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder getLpbfMetadataBuilder() {
        return getLpbfMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder getLpbfMetadataOrBuilder() {
        if ((processMetaDataCase_ == 101) && (lpbfMetadataBuilder_ != null)) {
          return lpbfMetadataBuilder_.getMessageOrBuilder();
        } else {
          if (processMetaDataCase_ == 101) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata) processMetaData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.LPBFMetadata lpbf_metadata = 101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder> 
          getLpbfMetadataFieldBuilder() {
        if (lpbfMetadataBuilder_ == null) {
          if (!(processMetaDataCase_ == 101)) {
            processMetaData_ = open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.getDefaultInstance();
          }
          lpbfMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata.Builder, open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadataOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.LPBFMetadata) processMetaData_,
                  getParentForChildren(),
                  isClean());
          processMetaData_ = null;
        }
        processMetaDataCase_ = 101;
        onChanged();
        return lpbfMetadataBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata, open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.Builder, open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadataOrBuilder> microStructuringMetadataBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
       * @return Whether the microStructuringMetadata field is set.
       */
      @java.lang.Override
      public boolean hasMicroStructuringMetadata() {
        return processMetaDataCase_ == 102;
      }
      /**
       * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
       * @return The microStructuringMetadata.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata getMicroStructuringMetadata() {
        if (microStructuringMetadataBuilder_ == null) {
          if (processMetaDataCase_ == 102) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata) processMetaData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.getDefaultInstance();
        } else {
          if (processMetaDataCase_ == 102) {
            return microStructuringMetadataBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
       */
      public Builder setMicroStructuringMetadata(open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata value) {
        if (microStructuringMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          processMetaData_ = value;
          onChanged();
        } else {
          microStructuringMetadataBuilder_.setMessage(value);
        }
        processMetaDataCase_ = 102;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
       */
      public Builder setMicroStructuringMetadata(
          open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.Builder builderForValue) {
        if (microStructuringMetadataBuilder_ == null) {
          processMetaData_ = builderForValue.build();
          onChanged();
        } else {
          microStructuringMetadataBuilder_.setMessage(builderForValue.build());
        }
        processMetaDataCase_ = 102;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
       */
      public Builder mergeMicroStructuringMetadata(open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata value) {
        if (microStructuringMetadataBuilder_ == null) {
          if (processMetaDataCase_ == 102 &&
              processMetaData_ != open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.getDefaultInstance()) {
            processMetaData_ = open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata) processMetaData_)
                .mergeFrom(value).buildPartial();
          } else {
            processMetaData_ = value;
          }
          onChanged();
        } else {
          if (processMetaDataCase_ == 102) {
            microStructuringMetadataBuilder_.mergeFrom(value);
          } else {
            microStructuringMetadataBuilder_.setMessage(value);
          }
        }
        processMetaDataCase_ = 102;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
       */
      public Builder clearMicroStructuringMetadata() {
        if (microStructuringMetadataBuilder_ == null) {
          if (processMetaDataCase_ == 102) {
            processMetaDataCase_ = 0;
            processMetaData_ = null;
            onChanged();
          }
        } else {
          if (processMetaDataCase_ == 102) {
            processMetaDataCase_ = 0;
            processMetaData_ = null;
          }
          microStructuringMetadataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.Builder getMicroStructuringMetadataBuilder() {
        return getMicroStructuringMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadataOrBuilder getMicroStructuringMetadataOrBuilder() {
        if ((processMetaDataCase_ == 102) && (microStructuringMetadataBuilder_ != null)) {
          return microStructuringMetadataBuilder_.getMessageOrBuilder();
        } else {
          if (processMetaDataCase_ == 102) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata) processMetaData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.MicroStructuringMetadata micro_structuring_metadata = 102;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata, open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.Builder, open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadataOrBuilder> 
          getMicroStructuringMetadataFieldBuilder() {
        if (microStructuringMetadataBuilder_ == null) {
          if (!(processMetaDataCase_ == 102)) {
            processMetaData_ = open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.getDefaultInstance();
          }
          microStructuringMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata, open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata.Builder, open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadataOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.MicroStructuringMetadata) processMetaData_,
                  getParentForChildren(),
                  isClean());
          processMetaData_ = null;
        }
        processMetaDataCase_ = 102;
        onChanged();
        return microStructuringMetadataBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata, open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.Builder, open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadataOrBuilder> polishingMetadataBuilder_;
      /**
       * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
       * @return Whether the polishingMetadata field is set.
       */
      @java.lang.Override
      public boolean hasPolishingMetadata() {
        return processMetaDataCase_ == 103;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
       * @return The polishingMetadata.
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata getPolishingMetadata() {
        if (polishingMetadataBuilder_ == null) {
          if (processMetaDataCase_ == 103) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata) processMetaData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.getDefaultInstance();
        } else {
          if (processMetaDataCase_ == 103) {
            return polishingMetadataBuilder_.getMessage();
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
       */
      public Builder setPolishingMetadata(open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata value) {
        if (polishingMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          processMetaData_ = value;
          onChanged();
        } else {
          polishingMetadataBuilder_.setMessage(value);
        }
        processMetaDataCase_ = 103;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
       */
      public Builder setPolishingMetadata(
          open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.Builder builderForValue) {
        if (polishingMetadataBuilder_ == null) {
          processMetaData_ = builderForValue.build();
          onChanged();
        } else {
          polishingMetadataBuilder_.setMessage(builderForValue.build());
        }
        processMetaDataCase_ = 103;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
       */
      public Builder mergePolishingMetadata(open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata value) {
        if (polishingMetadataBuilder_ == null) {
          if (processMetaDataCase_ == 103 &&
              processMetaData_ != open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.getDefaultInstance()) {
            processMetaData_ = open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.newBuilder((open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata) processMetaData_)
                .mergeFrom(value).buildPartial();
          } else {
            processMetaData_ = value;
          }
          onChanged();
        } else {
          if (processMetaDataCase_ == 103) {
            polishingMetadataBuilder_.mergeFrom(value);
          } else {
            polishingMetadataBuilder_.setMessage(value);
          }
        }
        processMetaDataCase_ = 103;
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
       */
      public Builder clearPolishingMetadata() {
        if (polishingMetadataBuilder_ == null) {
          if (processMetaDataCase_ == 103) {
            processMetaDataCase_ = 0;
            processMetaData_ = null;
            onChanged();
          }
        } else {
          if (processMetaDataCase_ == 103) {
            processMetaDataCase_ = 0;
            processMetaData_ = null;
          }
          polishingMetadataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
       */
      public open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.Builder getPolishingMetadataBuilder() {
        return getPolishingMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
       */
      @java.lang.Override
      public open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadataOrBuilder getPolishingMetadataOrBuilder() {
        if ((processMetaDataCase_ == 103) && (polishingMetadataBuilder_ != null)) {
          return polishingMetadataBuilder_.getMessageOrBuilder();
        } else {
          if (processMetaDataCase_ == 103) {
            return (open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata) processMetaData_;
          }
          return open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.getDefaultInstance();
        }
      }
      /**
       * <code>.open_vector_format.VectorBlock.PolishingMetadata polishing_metadata = 103;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata, open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.Builder, open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadataOrBuilder> 
          getPolishingMetadataFieldBuilder() {
        if (polishingMetadataBuilder_ == null) {
          if (!(processMetaDataCase_ == 103)) {
            processMetaData_ = open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.getDefaultInstance();
          }
          polishingMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata, open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata.Builder, open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadataOrBuilder>(
                  (open_vector_format.OpenVectorFormat.VectorBlock.PolishingMetadata) processMetaData_,
                  getParentForChildren(),
                  isClean());
          processMetaData_ = null;
        }
        processMetaDataCase_ = 103;
        onChanged();
        return polishingMetadataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:open_vector_format.VectorBlock)
    }

    // @@protoc_insertion_point(class_scope:open_vector_format.VectorBlock)
    private static final open_vector_format.OpenVectorFormat.VectorBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.VectorBlock();
    }

    public static open_vector_format.OpenVectorFormat.VectorBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VectorBlock>
        PARSER = new com.google.protobuf.AbstractParser<VectorBlock>() {
      @java.lang.Override
      public VectorBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<VectorBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VectorBlock> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public open_vector_format.OpenVectorFormat.VectorBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AxisAlignedBox2DOrBuilder extends
      // @@protoc_insertion_point(interface_extends:open_vector_format.AxisAlignedBox2D)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float x_min = 1;</code>
     * @return The xMin.
     */
    float getXMin();

    /**
     * <code>float y_min = 2;</code>
     * @return The yMin.
     */
    float getYMin();

    /**
     * <code>float x_max = 3;</code>
     * @return The xMax.
     */
    float getXMax();

    /**
     * <code>float y_max = 4;</code>
     * @return The yMax.
     */
    float getYMax();
  }
  /**
   * <pre>
   *axis aligned rectangular box in 2D
   *defined by the x and y coordinates of the lower left (min) and upper right (max) corner
   * </pre>
   *
   * Protobuf type {@code open_vector_format.AxisAlignedBox2D}
   */
  public static final class AxisAlignedBox2D extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:open_vector_format.AxisAlignedBox2D)
      AxisAlignedBox2DOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AxisAlignedBox2D.newBuilder() to construct.
    private AxisAlignedBox2D(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AxisAlignedBox2D() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AxisAlignedBox2D();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_AxisAlignedBox2D_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_AxisAlignedBox2D_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              open_vector_format.OpenVectorFormat.AxisAlignedBox2D.class, open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder.class);
    }

    public static final int X_MIN_FIELD_NUMBER = 1;
    private float xMin_ = 0F;
    /**
     * <code>float x_min = 1;</code>
     * @return The xMin.
     */
    @java.lang.Override
    public float getXMin() {
      return xMin_;
    }

    public static final int Y_MIN_FIELD_NUMBER = 2;
    private float yMin_ = 0F;
    /**
     * <code>float y_min = 2;</code>
     * @return The yMin.
     */
    @java.lang.Override
    public float getYMin() {
      return yMin_;
    }

    public static final int X_MAX_FIELD_NUMBER = 3;
    private float xMax_ = 0F;
    /**
     * <code>float x_max = 3;</code>
     * @return The xMax.
     */
    @java.lang.Override
    public float getXMax() {
      return xMax_;
    }

    public static final int Y_MAX_FIELD_NUMBER = 4;
    private float yMax_ = 0F;
    /**
     * <code>float y_max = 4;</code>
     * @return The yMax.
     */
    @java.lang.Override
    public float getYMax() {
      return yMax_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(xMin_) != 0) {
        output.writeFloat(1, xMin_);
      }
      if (java.lang.Float.floatToRawIntBits(yMin_) != 0) {
        output.writeFloat(2, yMin_);
      }
      if (java.lang.Float.floatToRawIntBits(xMax_) != 0) {
        output.writeFloat(3, xMax_);
      }
      if (java.lang.Float.floatToRawIntBits(yMax_) != 0) {
        output.writeFloat(4, yMax_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(xMin_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, xMin_);
      }
      if (java.lang.Float.floatToRawIntBits(yMin_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, yMin_);
      }
      if (java.lang.Float.floatToRawIntBits(xMax_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, xMax_);
      }
      if (java.lang.Float.floatToRawIntBits(yMax_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, yMax_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof open_vector_format.OpenVectorFormat.AxisAlignedBox2D)) {
        return super.equals(obj);
      }
      open_vector_format.OpenVectorFormat.AxisAlignedBox2D other = (open_vector_format.OpenVectorFormat.AxisAlignedBox2D) obj;

      if (java.lang.Float.floatToIntBits(getXMin())
          != java.lang.Float.floatToIntBits(
              other.getXMin())) return false;
      if (java.lang.Float.floatToIntBits(getYMin())
          != java.lang.Float.floatToIntBits(
              other.getYMin())) return false;
      if (java.lang.Float.floatToIntBits(getXMax())
          != java.lang.Float.floatToIntBits(
              other.getXMax())) return false;
      if (java.lang.Float.floatToIntBits(getYMax())
          != java.lang.Float.floatToIntBits(
              other.getYMax())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_MIN_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getXMin());
      hash = (37 * hash) + Y_MIN_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getYMin());
      hash = (37 * hash) + X_MAX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getXMax());
      hash = (37 * hash) + Y_MAX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getYMax());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static open_vector_format.OpenVectorFormat.AxisAlignedBox2D parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.AxisAlignedBox2D parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.AxisAlignedBox2D parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.AxisAlignedBox2D parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.AxisAlignedBox2D parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open_vector_format.OpenVectorFormat.AxisAlignedBox2D parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.AxisAlignedBox2D parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.AxisAlignedBox2D parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static open_vector_format.OpenVectorFormat.AxisAlignedBox2D parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static open_vector_format.OpenVectorFormat.AxisAlignedBox2D parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static open_vector_format.OpenVectorFormat.AxisAlignedBox2D parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open_vector_format.OpenVectorFormat.AxisAlignedBox2D parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(open_vector_format.OpenVectorFormat.AxisAlignedBox2D prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *axis aligned rectangular box in 2D
     *defined by the x and y coordinates of the lower left (min) and upper right (max) corner
     * </pre>
     *
     * Protobuf type {@code open_vector_format.AxisAlignedBox2D}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:open_vector_format.AxisAlignedBox2D)
        open_vector_format.OpenVectorFormat.AxisAlignedBox2DOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_AxisAlignedBox2D_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_AxisAlignedBox2D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open_vector_format.OpenVectorFormat.AxisAlignedBox2D.class, open_vector_format.OpenVectorFormat.AxisAlignedBox2D.Builder.class);
      }

      // Construct using open_vector_format.OpenVectorFormat.AxisAlignedBox2D.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        xMin_ = 0F;
        yMin_ = 0F;
        xMax_ = 0F;
        yMax_ = 0F;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return open_vector_format.OpenVectorFormat.internal_static_open_vector_format_AxisAlignedBox2D_descriptor;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.AxisAlignedBox2D getDefaultInstanceForType() {
        return open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance();
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.AxisAlignedBox2D build() {
        open_vector_format.OpenVectorFormat.AxisAlignedBox2D result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public open_vector_format.OpenVectorFormat.AxisAlignedBox2D buildPartial() {
        open_vector_format.OpenVectorFormat.AxisAlignedBox2D result = new open_vector_format.OpenVectorFormat.AxisAlignedBox2D(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(open_vector_format.OpenVectorFormat.AxisAlignedBox2D result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.xMin_ = xMin_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.yMin_ = yMin_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.xMax_ = xMax_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.yMax_ = yMax_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof open_vector_format.OpenVectorFormat.AxisAlignedBox2D) {
          return mergeFrom((open_vector_format.OpenVectorFormat.AxisAlignedBox2D)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(open_vector_format.OpenVectorFormat.AxisAlignedBox2D other) {
        if (other == open_vector_format.OpenVectorFormat.AxisAlignedBox2D.getDefaultInstance()) return this;
        if (other.getXMin() != 0F) {
          setXMin(other.getXMin());
        }
        if (other.getYMin() != 0F) {
          setYMin(other.getYMin());
        }
        if (other.getXMax() != 0F) {
          setXMax(other.getXMax());
        }
        if (other.getYMax() != 0F) {
          setYMax(other.getYMax());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                xMin_ = input.readFloat();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              case 21: {
                yMin_ = input.readFloat();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              case 29: {
                xMax_ = input.readFloat();
                bitField0_ |= 0x00000004;
                break;
              } // case 29
              case 37: {
                yMax_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private float xMin_ ;
      /**
       * <code>float x_min = 1;</code>
       * @return The xMin.
       */
      @java.lang.Override
      public float getXMin() {
        return xMin_;
      }
      /**
       * <code>float x_min = 1;</code>
       * @param value The xMin to set.
       * @return This builder for chaining.
       */
      public Builder setXMin(float value) {

        xMin_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>float x_min = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearXMin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        xMin_ = 0F;
        onChanged();
        return this;
      }

      private float yMin_ ;
      /**
       * <code>float y_min = 2;</code>
       * @return The yMin.
       */
      @java.lang.Override
      public float getYMin() {
        return yMin_;
      }
      /**
       * <code>float y_min = 2;</code>
       * @param value The yMin to set.
       * @return This builder for chaining.
       */
      public Builder setYMin(float value) {

        yMin_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>float y_min = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearYMin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        yMin_ = 0F;
        onChanged();
        return this;
      }

      private float xMax_ ;
      /**
       * <code>float x_max = 3;</code>
       * @return The xMax.
       */
      @java.lang.Override
      public float getXMax() {
        return xMax_;
      }
      /**
       * <code>float x_max = 3;</code>
       * @param value The xMax to set.
       * @return This builder for chaining.
       */
      public Builder setXMax(float value) {

        xMax_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>float x_max = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearXMax() {
        bitField0_ = (bitField0_ & ~0x00000004);
        xMax_ = 0F;
        onChanged();
        return this;
      }

      private float yMax_ ;
      /**
       * <code>float y_max = 4;</code>
       * @return The yMax.
       */
      @java.lang.Override
      public float getYMax() {
        return yMax_;
      }
      /**
       * <code>float y_max = 4;</code>
       * @param value The yMax to set.
       * @return This builder for chaining.
       */
      public Builder setYMax(float value) {

        yMax_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>float y_max = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearYMax() {
        bitField0_ = (bitField0_ & ~0x00000008);
        yMax_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:open_vector_format.AxisAlignedBox2D)
    }

    // @@protoc_insertion_point(class_scope:open_vector_format.AxisAlignedBox2D)
    private static final open_vector_format.OpenVectorFormat.AxisAlignedBox2D DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new open_vector_format.OpenVectorFormat.AxisAlignedBox2D();
    }

    public static open_vector_format.OpenVectorFormat.AxisAlignedBox2D getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AxisAlignedBox2D>
        PARSER = new com.google.protobuf.AbstractParser<AxisAlignedBox2D>() {
      @java.lang.Override
      public AxisAlignedBox2D parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AxisAlignedBox2D> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AxisAlignedBox2D> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public open_vector_format.OpenVectorFormat.AxisAlignedBox2D getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_Job_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_Job_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_Job_MarkingParamsMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_Job_MarkingParamsMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_Job_PartsMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_Job_PartsMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_Job_JobMetaData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_Job_JobMetaData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_JobParameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_JobParameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_MarkingParams_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_MarkingParams_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_PowerGradientParams_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_PowerGradientParams_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_Part_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_Part_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_Part_GeometryInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_Part_GeometryInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_Part_Material_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_Part_Material_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_Part_ProcessStrategy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_Part_ProcessStrategy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_Part_ProcessStrategy_ProprietaryParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_Part_ProcessStrategy_ProprietaryParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_WorkPlane_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_WorkPlane_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_PatchesMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_PatchesMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_closedContour_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_closedContour_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_WorkPlane_Patch_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_WorkPlane_Patch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_VectorBlockMetaData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_VectorBlockMetaData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_LPBFMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_LPBFMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_MicroStructuringMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_MicroStructuringMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_PolishingMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_PolishingMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_LineSequence_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_LineSequence_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_LineSequence3D_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_LineSequence3D_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_Hatches_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_Hatches_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_Hatches3D_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_Hatches3D_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_PointSequence_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_PointSequence_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_PointSequence3D_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_PointSequence3D_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_Arcs_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_Arcs_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_Arcs3D_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_Arcs3D_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_Ellipses_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_Ellipses_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_ExposurePause_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_ExposurePause_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_LineSequenceParaAdapt_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_LineSequenceParaAdapt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_VectorBlock_HatchesParaAdapt_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_VectorBlock_HatchesParaAdapt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_open_vector_format_AxisAlignedBox2D_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_open_vector_format_AxisAlignedBox2D_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030open_vector_format.proto\022\022open_vector_" +
      "format\"\236\005\n\003Job\0222\n\013work_planes\030\001 \003(\0132\035.op" +
      "en_vector_format.WorkPlane\022:\n\rjob_meta_d" +
      "ata\030\002 \001(\0132#.open_vector_format.Job.JobMe" +
      "taData\022I\n\022marking_params_map\030\003 \003(\0132-.ope" +
      "n_vector_format.Job.MarkingParamsMapEntr" +
      "y\0228\n\tparts_map\030\004 \003(\0132%.open_vector_forma" +
      "t.Job.PartsMapEntry\0229\n\016job_parameters\030\005 " +
      "\001(\0132!.open_vector_format.JobParameters\022\027" +
      "\n\017num_work_planes\030\006 \001(\005\032Z\n\025MarkingParams" +
      "MapEntry\022\013\n\003key\030\001 \001(\005\0220\n\005value\030\002 \001(\0132!.o" +
      "pen_vector_format.MarkingParams:\0028\001\032I\n\rP" +
      "artsMapEntry\022\013\n\003key\030\001 \001(\005\022\'\n\005value\030\002 \001(\013" +
      "2\030.open_vector_format.Part:\0028\001\032\246\001\n\013JobMe" +
      "taData\022\031\n\021job_creation_time\030\001 \001(\003\022\017\n\007ver" +
      "sion\030\002 \001(\004\022\020\n\010job_name\030\003 \001(\t\022\016\n\006author\030\004" +
      " \001(\t\022\023\n\013description\030\005 \001(\t\0224\n\006bounds\030\006 \001(" +
      "\0132$.open_vector_format.AxisAlignedBox2D\"" +
      "z\n\rJobParameters\022%\n\035preheating_temperatu" +
      "r_in_dg_c\030\001 \001(\001\022 \n\030shielding_gas_directi" +
      "ons\030\002 \003(\001\022 \n\030material_feed_directions\030\003 " +
      "\003(\001\"\205\010\n\rMarkingParams\022\030\n\020laser_power_in_" +
      "w\030\001 \001(\002\022\037\n\027laser_speed_in_mm_per_s\030\002 \001(\002" +
      "\022\037\n\027laser_focus_shift_in_mm\030\003 \001(\002\022!\n\031poi" +
      "nt_exposure_time_in_us\030\004 \001(\002\022\032\n\022jump_spe" +
      "ed_in_mm_s\030\005 \001(\002\022\"\n\032point_exposure_repet" +
      "itions\030\006 \001(\002\022\035\n\025repetition_rate_in_hz\030\007 " +
      "\001(\004\022\036\n\026laser_pulses_per_burst\030\010 \001(\004\022#\n\033p" +
      "ulseDurationInFemtoseconds\030\t \001(\004\022C\n\014mark" +
      "ing_mode\030\n \001(\0162-.open_vector_format.Mark" +
      "ingParams.MarkingMode\022\030\n\020jump_delay_in_u" +
      "s\030\013 \001(\002\022\035\n\025laser_off_delay_in_us\030\014 \001(\002\022\034" +
      "\n\024laser_on_delay_in_us\030\r \001(\002\022\030\n\020mark_del" +
      "ay_in_us\030\016 \001(\002\022\033\n\023polygon_delay_in_us\030\017 " +
      "\001(\002\022\026\n\016time_lag_in_us\030\020 \001(\002\022\034\n\024laser_on_" +
      "shift_in_us\030\021 \001(\002\022\r\n\005limit\030\022 \001(\002\022\024\n\014n_pr" +
      "ev_in_us\030\023 \001(\002\022\024\n\014n_post_in_us\030\024 \001(\002\022\033\n\023" +
      "wob_frequency_in_hz\030\025 \001(\002\022\032\n\022wob_amp_lon" +
      "g_in_mm\030\026 \001(\002\022\033\n\023wob_amp_trans_in_mm\030\027 \001" +
      "(\002\022A\n\013wobble_mode\030\030 \001(\0162,.open_vector_fo" +
      "rmat.MarkingParams.WobbleMode\022>\n\rpowerGr" +
      "adient\030\031 \001(\0132\'.open_vector_format.PowerG" +
      "radientParams\022\014\n\004name\030\032 \001(\t\":\n\013MarkingMo" +
      "de\022\n\n\006NO_SKY\020\000\022\t\n\005SKY_1\020\001\022\t\n\005SKY_2\020\002\022\t\n\005" +
      "SKY_3\020\003\"b\n\nWobbleMode\022\r\n\tNO_WOBBLE\020\000\022\022\n\016" +
      "ELLIPSE_WOBBLE\020\001\022\031\n\025STANDING_EIGHT_WOBBL" +
      "E\020\002\022\026\n\022LYING_EIGHT_WOBBLE\020\003J\006\010\200\001\020\245\001\"C\n\023P" +
      "owerGradientParams\022\023\n\013minPowerInW\030\001 \001(\002\022" +
      "\027\n\017gradientInWPerS\030\002 \001(\002\"\205\013\n\004Part\022\014\n\004nam" +
      "e\030\001 \001(\t\022<\n\rgeometry_info\030\002 \001(\0132%.open_ve" +
      "ctor_format.Part.GeometryInfo\0223\n\010materia" +
      "l\030\003 \001(\0132!.open_vector_format.Part.Materi" +
      "al\022B\n\020process_strategy\030\004 \001(\0132(.open_vect" +
      "or_format.Part.ProcessStrategy\022J\n\030up_ski" +
      "n_process_strategy\030\005 \001(\0132(.open_vector_f" +
      "ormat.Part.ProcessStrategy\022L\n\032down_skin_" +
      "process_strategy\030\006 \001(\0132(.open_vector_for" +
      "mat.Part.ProcessStrategy\022D\n\016exposure_ord" +
      "er\030\007 \003(\0132,.open_vector_format.VectorBloc" +
      "k.LPBFMetadata\022\030\n\020parent_part_name\030\010 \001(\t" +
      "\032\237\001\n\014GeometryInfo\022\025\n\rvolume_in_mm3\030\001 \001(\001" +
      "\022\035\n\025support_volume_in_mm3\030\002 \001(\001\022\032\n\022build" +
      "_height_in_mm\030\003 \001(\001\022\033\n\023surface_area_in_m" +
      "m2\030\004 \001(\001\022 \n\030projected_surface_in_mm2\030\005 \001" +
      "(\001\032$\n\010Material\022\n\n\002id\030\001 \001(\004\022\014\n\004name\030\002 \001(\t" +
      "\032\365\005\n\017ProcessStrategy\022\030\n\020rot_angle_in_deg" +
      "\030\001 \001(\002\022\036\n\026increment_angle_in_deg\030\002 \001(\002\022\023" +
      "\n\013shift_in_mm\030\003 \001(\002\022\031\n\021extend_into_in_mm" +
      "\030\004 \001(\002\022\"\n\032pattern_hatch_length_in_mm\030\r \001" +
      "(\002\022R\n\020hatching_pattern\030\014 \001(\01628.open_vect" +
      "or_format.Part.ProcessStrategy.HatchingP" +
      "attern\022\035\n\025layer_thickness_in_mm\030\005 \001(\002\022\034\n" +
      "\024hatch_distance_in_mm\030\006 \001(\002\022$\n\034hatch_con" +
      "tour_distance_in_mm\030\007 \001(\002\022\035\n\025overhang_an" +
      "gle_in_deg\030\010 \001(\002\022\034\n\024contour_offset_in_mm" +
      "\030\t \001(\002\022\032\n\022number_of_contours\030\n \001(\005\022\036\n\026co" +
      "ntour_distance_in_mm\030\013 \001(\002\022\014\n\004name\030Z \001(\t" +
      "\022X\n\025additional_parameters\030d \003(\01329.open_v" +
      "ector_format.Part.ProcessStrategy.Propri" +
      "etaryParam\032V\n\020ProprietaryParam\022\022\n\nparam_" +
      "name\030\001 \001(\t\022\023\n\013param_value\030\002 \001(\001\022\031\n\021param" +
      "_description\030\003 \001(\t\"d\n\017HatchingPattern\022\022\n" +
      "\016UNIDIRECTIONAL\020\000\022\021\n\rBIDIRECTIONAL\020\001\022\020\n\014" +
      "CHECKERBOARD\020\002\022\013\n\007STRIPES\020\003\022\013\n\007HEXAGON\020\004" +
      "\"\362\t\n\tWorkPlane\0226\n\rvector_blocks\030\001 \003(\0132\037." +
      "open_vector_format.VectorBlock\022\023\n\013x_pos_" +
      "in_mm\030\002 \001(\002\022\023\n\013y_pos_in_mm\030\003 \001(\002\022\023\n\013z_po" +
      "s_in_mm\030\004 \001(\002\022\024\n\014x_rot_in_deg\030\005 \001(\002\022\024\n\014y" +
      "_rot_in_deg\030\006 \001(\002\022\024\n\014z_rot_in_deg\030\007 \001(\002\022" +
      "\022\n\nnum_blocks\030\010 \001(\005\022\017\n\007repeats\030\t \001(\r\022\031\n\021" +
      "work_plane_number\030\n \001(\005\022\024\n\014machine_type\030" +
      "\013 \001(\t\022!\n\031additional_axis_positions\030\014 \003(\002" +
      "\022B\n\tmeta_data\030\r \001(\0132/.open_vector_format" +
      ".WorkPlane.WorkPlaneMetaData\032\370\005\n\021WorkPla" +
      "neMetaData\022!\n\031total_scan_distance_in_mm\030" +
      "\001 \001(\001\022!\n\031total_jump_distance_in_mm\030\002 \001(\001" +
      "\022T\n\013patches_map\030\003 \003(\0132?.open_vector_form" +
      "at.WorkPlane.WorkPlaneMetaData.PatchesMa" +
      "pEntry\022\020\n\010maxPower\030\004 \001(\002\022\020\n\010minPower\030\005 \001" +
      "(\002\022O\n\010contours\030\006 \003(\0132=.open_vector_forma" +
      "t.WorkPlane.WorkPlaneMetaData.closedCont" +
      "our\0224\n\006Bounds\030\007 \001(\0132$.open_vector_format" +
      ".AxisAlignedBox2D\032V\n\017PatchesMapEntry\022\013\n\003" +
      "key\030\001 \001(\005\0222\n\005value\030\002 \001(\0132#.open_vector_f" +
      "ormat.WorkPlane.Patch:\0028\001\032\303\002\n\rclosedCont" +
      "our\022,\n$contour_section_vector_block_indi" +
      "ces\030\001 \003(\005\022\024\n\014area_in_mm_2\030\002 \001(\002\022\024\n\014lengt" +
      "h_in_mm\030\003 \001(\002\022\024\n\014parent_index\030\005 \001(\005\022\026\n\016w" +
      "inding_number\030\006 \001(\005\022W\n\004type\030\007 \001(\0162I.open" +
      "_vector_format.WorkPlane.WorkPlaneMetaDa" +
      "ta.closedContour.ContourType\"Q\n\013ContourT" +
      "ype\022\026\n\022PART_OUTER_CONTOUR\020\000\022\026\n\022PART_INNE" +
      "R_CONTOUR\020\001\022\022\n\016OFFSET_CONTOUR\020\002\032t\n\005Patch" +
      "\022C\n\router_contour\030\001 \001(\0132,.open_vector_fo" +
      "rmat.VectorBlock.LineSequence\022\t\n\001u\030\002 \001(\002" +
      "\022\t\n\001v\030\003 \001(\002\022\020\n\010layer_id\030\004 \001(\005\"\357\030\n\013Vector" +
      "Block\022E\n\rline_sequence\030\001 \001(\0132,.open_vect" +
      "or_format.VectorBlock.LineSequenceH\000\022;\n\010" +
      "_hatches\030\002 \001(\0132\'.open_vector_format.Vect" +
      "orBlock.HatchesH\000\022G\n\016point_sequence\030\003 \001(" +
      "\0132-.open_vector_format.VectorBlock.Point" +
      "SequenceH\000\0225\n\005_arcs\030\004 \001(\0132$.open_vector_" +
      "format.VectorBlock.ArcsH\000\022<\n\010ellipses\030\005 " +
      "\001(\0132(.open_vector_format.VectorBlock.Ell" +
      "ipsesH\000\022J\n\020line_sequence_3d\030\006 \001(\0132..open" +
      "_vector_format.VectorBlock.LineSequence3" +
      "DH\000\022?\n\nhatches_3d\030\007 \001(\0132).open_vector_fo" +
      "rmat.VectorBlock.Hatches3DH\000\022L\n\021point_se" +
      "quence_3d\030\010 \001(\0132/.open_vector_format.Vec" +
      "torBlock.PointSequence3DH\000\0229\n\007arcs_3d\030\t " +
      "\001(\0132&.open_vector_format.VectorBlock.Arc" +
      "s3DH\000\022G\n\016exposure_pause\030\n \001(\0132-.open_vec" +
      "tor_format.VectorBlock.ExposurePauseH\000\022Y" +
      "\n\030line_sequence_para_adapt\030\013 \001(\01325.open_" +
      "vector_format.VectorBlock.LineSequencePa" +
      "raAdaptH\000\022K\n\017_hatchParaAdapt\030\014 \001(\01320.ope" +
      "n_vector_format.VectorBlock.HatchesParaA" +
      "daptH\000\022\032\n\022marking_params_key\0302 \001(\005\022\023\n\013la" +
      "ser_index\0305 \001(\005\022\017\n\007repeats\0306 \001(\004\022F\n\tmeta" +
      "_data\030d \001(\01323.open_vector_format.VectorB" +
      "lock.VectorBlockMetaData\022E\n\rlpbf_metadat" +
      "a\030e \001(\0132,.open_vector_format.VectorBlock" +
      ".LPBFMetadataH\001\022^\n\032micro_structuring_met" +
      "adata\030f \001(\01328.open_vector_format.VectorB" +
      "lock.MicroStructuringMetadataH\001\022O\n\022polis" +
      "hing_metadata\030g \001(\01321.open_vector_format" +
      ".VectorBlock.PolishingMetadataH\001\032\344\001\n\023Vec" +
      "torBlockMetaData\022!\n\031total_scan_distance_" +
      "in_mm\030\001 \001(\001\022!\n\031total_jump_distance_in_mm" +
      "\030\002 \001(\001\022\020\n\010part_key\030\003 \001(\005\022\021\n\tpatch_key\030\004 " +
      "\001(\005\022\025\n\rcontour_index\030\005 \001(\005\0224\n\006bounds\030\006 \001" +
      "(\0132$.open_vector_format.AxisAlignedBox2D" +
      "\022\025\n\rdisplay_color\030\007 \001(\005\032\317\003\n\014LPBFMetadata" +
      "\022;\n\tpart_area\030\001 \001(\0162(.open_vector_format" +
      ".VectorBlock.PartArea\022H\n\tskin_type\030\002 \001(\016" +
      "25.open_vector_format.VectorBlock.LPBFMe" +
      "tadata.SkinType\022b\n\027skin_core_strategy_ar" +
      "ea\030\003 \001(\0162A.open_vector_format.VectorBloc" +
      "k.LPBFMetadata.SkinCoreStrategyArea\022E\n\016s" +
      "tructure_type\030\004 \001(\0162-.open_vector_format" +
      ".VectorBlock.StructureType\022\022\n\nreexposure" +
      "\030\005 \001(\010\"3\n\010SkinType\022\013\n\007IN_SKIN\020\000\022\r\n\tDOWN_" +
      "SKIN\020\001\022\013\n\007UP_SKIN\020\002\"D\n\024SkinCoreStrategyA" +
      "rea\022\016\n\nOUTER_HULL\020\000\022\010\n\004CORE\020\001\022\022\n\016INBETWE" +
      "EN_HULL\020\002\032\236\001\n\030MicroStructuringMetadata\022;" +
      "\n\tpart_area\030\001 \001(\0162(.open_vector_format.V" +
      "ectorBlock.PartArea\022E\n\016structure_type\030\002 " +
      "\001(\0162-.open_vector_format.VectorBlock.Str" +
      "uctureType\032\023\n\021PolishingMetadata\032\036\n\014LineS" +
      "equence\022\016\n\006points\030\001 \003(\002\032 \n\016LineSequence3" +
      "D\022\016\n\006points\030\001 \003(\002\032\031\n\007Hatches\022\016\n\006points\030\001" +
      " \003(\002\032\033\n\tHatches3D\022\016\n\006points\030\001 \003(\002\032\037\n\rPoi" +
      "ntSequence\022\016\n\006points\030\001 \003(\002\032!\n\017PointSeque" +
      "nce3D\022\016\n\006points\030\001 \003(\002\032J\n\004Arcs\022\r\n\005angle\030\001" +
      " \001(\001\022\020\n\010start_dx\030\002 \001(\002\022\020\n\010start_dy\030\003 \001(\002" +
      "\022\017\n\007centers\030\004 \003(\002\032^\n\006Arcs3D\022\r\n\005angle\030\001 \001" +
      "(\001\022\020\n\010start_dx\030\002 \001(\002\022\020\n\010start_dy\030\003 \001(\002\022\020" +
      "\n\010start_dz\030\004 \001(\002\022\017\n\007centers\030\005 \003(\002\032k\n\010Ell" +
      "ipses\022\t\n\001a\030\001 \001(\002\022\t\n\001b\030\002 \001(\002\022\014\n\004phi0\030\003 \001(" +
      "\001\022;\n\rellipses_arcs\030\004 \001(\0132$.open_vector_f" +
      "ormat.VectorBlock.Arcs\032$\n\rExposurePause\022" +
      "\023\n\013pause_in_us\030\001 \001(\004\032\230\002\n\025LineSequencePar" +
      "aAdapt\022\031\n\021points_with_paras\030\001 \003(\002\022Y\n\tpar" +
      "ameter\030\002 \001(\0162F.open_vector_format.Vector" +
      "Block.LineSequenceParaAdapt.AdaptedParam" +
      "eter\"\210\001\n\020AdaptedParameter\022\024\n\020LASER_POWER" +
      "_IN_W\020\000\022\033\n\027LASER_FOCUS_SHIFT_IN_MM\020\001\022\034\n\030" +
      "LASER_PULSE_LENGTH_IN_US\020\002\022#\n\037LASER_PULS" +
      "E_REPITION_RATE_IN_HZ\020\003\032f\n\020HatchesParaAd" +
      "apt\022R\n\023hatchAsLinesequence\030\001 \003(\01325.open_" +
      "vector_format.VectorBlock.LineSequencePa" +
      "raAdapt\";\n\010PartArea\022\n\n\006VOLUME\020\000\022\013\n\007CONTO" +
      "UR\020\001\022\026\n\022TRANSITION_CONTOUR\020\002\"E\n\rStructur" +
      "eType\022\010\n\004PART\020\000\022\013\n\007SUPPORT\020\001\022\021\n\rWIRESTRU" +
      "CTURE\020\002\022\n\n\006POINTS\020\003B\r\n\013vector_dataB\023\n\021pr" +
      "ocess_meta_data\"N\n\020AxisAlignedBox2D\022\r\n\005x" +
      "_min\030\001 \001(\002\022\r\n\005y_min\030\002 \001(\002\022\r\n\005x_max\030\003 \001(\002" +
      "\022\r\n\005y_max\030\004 \001(\002B=Z;github.com/digital-pr" +
      "oduction-aachen/openvectorformat/protob\006" +
      "proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_open_vector_format_Job_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_open_vector_format_Job_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_Job_descriptor,
        new java.lang.String[] { "WorkPlanes", "JobMetaData", "MarkingParamsMap", "PartsMap", "JobParameters", "NumWorkPlanes", });
    internal_static_open_vector_format_Job_MarkingParamsMapEntry_descriptor =
      internal_static_open_vector_format_Job_descriptor.getNestedTypes().get(0);
    internal_static_open_vector_format_Job_MarkingParamsMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_Job_MarkingParamsMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_open_vector_format_Job_PartsMapEntry_descriptor =
      internal_static_open_vector_format_Job_descriptor.getNestedTypes().get(1);
    internal_static_open_vector_format_Job_PartsMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_Job_PartsMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_open_vector_format_Job_JobMetaData_descriptor =
      internal_static_open_vector_format_Job_descriptor.getNestedTypes().get(2);
    internal_static_open_vector_format_Job_JobMetaData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_Job_JobMetaData_descriptor,
        new java.lang.String[] { "JobCreationTime", "Version", "JobName", "Author", "Description", "Bounds", });
    internal_static_open_vector_format_JobParameters_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_open_vector_format_JobParameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_JobParameters_descriptor,
        new java.lang.String[] { "PreheatingTemperaturInDgC", "ShieldingGasDirections", "MaterialFeedDirections", });
    internal_static_open_vector_format_MarkingParams_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_open_vector_format_MarkingParams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_MarkingParams_descriptor,
        new java.lang.String[] { "LaserPowerInW", "LaserSpeedInMmPerS", "LaserFocusShiftInMm", "PointExposureTimeInUs", "JumpSpeedInMmS", "PointExposureRepetitions", "RepetitionRateInHz", "LaserPulsesPerBurst", "PulseDurationInFemtoseconds", "MarkingMode", "JumpDelayInUs", "LaserOffDelayInUs", "LaserOnDelayInUs", "MarkDelayInUs", "PolygonDelayInUs", "TimeLagInUs", "LaserOnShiftInUs", "Limit", "NPrevInUs", "NPostInUs", "WobFrequencyInHz", "WobAmpLongInMm", "WobAmpTransInMm", "WobbleMode", "PowerGradient", "Name", });
    internal_static_open_vector_format_PowerGradientParams_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_open_vector_format_PowerGradientParams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_PowerGradientParams_descriptor,
        new java.lang.String[] { "MinPowerInW", "GradientInWPerS", });
    internal_static_open_vector_format_Part_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_open_vector_format_Part_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_Part_descriptor,
        new java.lang.String[] { "Name", "GeometryInfo", "Material", "ProcessStrategy", "UpSkinProcessStrategy", "DownSkinProcessStrategy", "ExposureOrder", "ParentPartName", });
    internal_static_open_vector_format_Part_GeometryInfo_descriptor =
      internal_static_open_vector_format_Part_descriptor.getNestedTypes().get(0);
    internal_static_open_vector_format_Part_GeometryInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_Part_GeometryInfo_descriptor,
        new java.lang.String[] { "VolumeInMm3", "SupportVolumeInMm3", "BuildHeightInMm", "SurfaceAreaInMm2", "ProjectedSurfaceInMm2", });
    internal_static_open_vector_format_Part_Material_descriptor =
      internal_static_open_vector_format_Part_descriptor.getNestedTypes().get(1);
    internal_static_open_vector_format_Part_Material_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_Part_Material_descriptor,
        new java.lang.String[] { "Id", "Name", });
    internal_static_open_vector_format_Part_ProcessStrategy_descriptor =
      internal_static_open_vector_format_Part_descriptor.getNestedTypes().get(2);
    internal_static_open_vector_format_Part_ProcessStrategy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_Part_ProcessStrategy_descriptor,
        new java.lang.String[] { "RotAngleInDeg", "IncrementAngleInDeg", "ShiftInMm", "ExtendIntoInMm", "PatternHatchLengthInMm", "HatchingPattern", "LayerThicknessInMm", "HatchDistanceInMm", "HatchContourDistanceInMm", "OverhangAngleInDeg", "ContourOffsetInMm", "NumberOfContours", "ContourDistanceInMm", "Name", "AdditionalParameters", });
    internal_static_open_vector_format_Part_ProcessStrategy_ProprietaryParam_descriptor =
      internal_static_open_vector_format_Part_ProcessStrategy_descriptor.getNestedTypes().get(0);
    internal_static_open_vector_format_Part_ProcessStrategy_ProprietaryParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_Part_ProcessStrategy_ProprietaryParam_descriptor,
        new java.lang.String[] { "ParamName", "ParamValue", "ParamDescription", });
    internal_static_open_vector_format_WorkPlane_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_open_vector_format_WorkPlane_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_WorkPlane_descriptor,
        new java.lang.String[] { "VectorBlocks", "XPosInMm", "YPosInMm", "ZPosInMm", "XRotInDeg", "YRotInDeg", "ZRotInDeg", "NumBlocks", "Repeats", "WorkPlaneNumber", "MachineType", "AdditionalAxisPositions", "MetaData", });
    internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_descriptor =
      internal_static_open_vector_format_WorkPlane_descriptor.getNestedTypes().get(0);
    internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_descriptor,
        new java.lang.String[] { "TotalScanDistanceInMm", "TotalJumpDistanceInMm", "PatchesMap", "MaxPower", "MinPower", "Contours", "Bounds", });
    internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_PatchesMapEntry_descriptor =
      internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_descriptor.getNestedTypes().get(0);
    internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_PatchesMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_PatchesMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_closedContour_descriptor =
      internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_descriptor.getNestedTypes().get(1);
    internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_closedContour_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_WorkPlane_WorkPlaneMetaData_closedContour_descriptor,
        new java.lang.String[] { "ContourSectionVectorBlockIndices", "AreaInMm2", "LengthInMm", "ParentIndex", "WindingNumber", "Type", });
    internal_static_open_vector_format_WorkPlane_Patch_descriptor =
      internal_static_open_vector_format_WorkPlane_descriptor.getNestedTypes().get(1);
    internal_static_open_vector_format_WorkPlane_Patch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_WorkPlane_Patch_descriptor,
        new java.lang.String[] { "OuterContour", "U", "V", "LayerId", });
    internal_static_open_vector_format_VectorBlock_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_open_vector_format_VectorBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_descriptor,
        new java.lang.String[] { "LineSequence", "Hatches", "PointSequence", "Arcs", "Ellipses", "LineSequence3D", "Hatches3D", "PointSequence3D", "Arcs3D", "ExposurePause", "LineSequenceParaAdapt", "HatchParaAdapt", "MarkingParamsKey", "LaserIndex", "Repeats", "MetaData", "LpbfMetadata", "MicroStructuringMetadata", "PolishingMetadata", "VectorData", "ProcessMetaData", });
    internal_static_open_vector_format_VectorBlock_VectorBlockMetaData_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(0);
    internal_static_open_vector_format_VectorBlock_VectorBlockMetaData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_VectorBlockMetaData_descriptor,
        new java.lang.String[] { "TotalScanDistanceInMm", "TotalJumpDistanceInMm", "PartKey", "PatchKey", "ContourIndex", "Bounds", "DisplayColor", });
    internal_static_open_vector_format_VectorBlock_LPBFMetadata_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(1);
    internal_static_open_vector_format_VectorBlock_LPBFMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_LPBFMetadata_descriptor,
        new java.lang.String[] { "PartArea", "SkinType", "SkinCoreStrategyArea", "StructureType", "Reexposure", });
    internal_static_open_vector_format_VectorBlock_MicroStructuringMetadata_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(2);
    internal_static_open_vector_format_VectorBlock_MicroStructuringMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_MicroStructuringMetadata_descriptor,
        new java.lang.String[] { "PartArea", "StructureType", });
    internal_static_open_vector_format_VectorBlock_PolishingMetadata_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(3);
    internal_static_open_vector_format_VectorBlock_PolishingMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_PolishingMetadata_descriptor,
        new java.lang.String[] { });
    internal_static_open_vector_format_VectorBlock_LineSequence_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(4);
    internal_static_open_vector_format_VectorBlock_LineSequence_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_LineSequence_descriptor,
        new java.lang.String[] { "Points", });
    internal_static_open_vector_format_VectorBlock_LineSequence3D_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(5);
    internal_static_open_vector_format_VectorBlock_LineSequence3D_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_LineSequence3D_descriptor,
        new java.lang.String[] { "Points", });
    internal_static_open_vector_format_VectorBlock_Hatches_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(6);
    internal_static_open_vector_format_VectorBlock_Hatches_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_Hatches_descriptor,
        new java.lang.String[] { "Points", });
    internal_static_open_vector_format_VectorBlock_Hatches3D_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(7);
    internal_static_open_vector_format_VectorBlock_Hatches3D_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_Hatches3D_descriptor,
        new java.lang.String[] { "Points", });
    internal_static_open_vector_format_VectorBlock_PointSequence_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(8);
    internal_static_open_vector_format_VectorBlock_PointSequence_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_PointSequence_descriptor,
        new java.lang.String[] { "Points", });
    internal_static_open_vector_format_VectorBlock_PointSequence3D_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(9);
    internal_static_open_vector_format_VectorBlock_PointSequence3D_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_PointSequence3D_descriptor,
        new java.lang.String[] { "Points", });
    internal_static_open_vector_format_VectorBlock_Arcs_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(10);
    internal_static_open_vector_format_VectorBlock_Arcs_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_Arcs_descriptor,
        new java.lang.String[] { "Angle", "StartDx", "StartDy", "Centers", });
    internal_static_open_vector_format_VectorBlock_Arcs3D_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(11);
    internal_static_open_vector_format_VectorBlock_Arcs3D_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_Arcs3D_descriptor,
        new java.lang.String[] { "Angle", "StartDx", "StartDy", "StartDz", "Centers", });
    internal_static_open_vector_format_VectorBlock_Ellipses_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(12);
    internal_static_open_vector_format_VectorBlock_Ellipses_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_Ellipses_descriptor,
        new java.lang.String[] { "A", "B", "Phi0", "EllipsesArcs", });
    internal_static_open_vector_format_VectorBlock_ExposurePause_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(13);
    internal_static_open_vector_format_VectorBlock_ExposurePause_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_ExposurePause_descriptor,
        new java.lang.String[] { "PauseInUs", });
    internal_static_open_vector_format_VectorBlock_LineSequenceParaAdapt_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(14);
    internal_static_open_vector_format_VectorBlock_LineSequenceParaAdapt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_LineSequenceParaAdapt_descriptor,
        new java.lang.String[] { "PointsWithParas", "Parameter", });
    internal_static_open_vector_format_VectorBlock_HatchesParaAdapt_descriptor =
      internal_static_open_vector_format_VectorBlock_descriptor.getNestedTypes().get(15);
    internal_static_open_vector_format_VectorBlock_HatchesParaAdapt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_VectorBlock_HatchesParaAdapt_descriptor,
        new java.lang.String[] { "HatchAsLinesequence", });
    internal_static_open_vector_format_AxisAlignedBox2D_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_open_vector_format_AxisAlignedBox2D_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_open_vector_format_AxisAlignedBox2D_descriptor,
        new java.lang.String[] { "XMin", "YMin", "XMax", "YMax", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
