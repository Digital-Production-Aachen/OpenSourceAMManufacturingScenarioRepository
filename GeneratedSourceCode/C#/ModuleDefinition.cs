// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ModuleDefinition.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ModularEmulator.Modules.Proto {

  /// <summary>Holder for reflection information generated from ModuleDefinition.proto</summary>
  public static partial class ModuleDefinitionReflection {

    #region Descriptor
    /// <summary>File descriptor for ModuleDefinition.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ModuleDefinitionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZNb2R1bGVEZWZpbml0aW9uLnByb3RvEh1tb2R1bGFyRW11bGF0b3IubW9k",
            "dWxlcy5wcm90byIzChNPUENVQUlkZW50aWZpY2F0aW9uEg4KBm5vZGVJZBgB",
            "IAEoDRIMCgRuYW1lGAIgASgJIuIECgZNb2R1bGUSOwoMY2hpbGRNb2R1bGVz",
            "GAEgAygLMiUubW9kdWxhckVtdWxhdG9yLm1vZHVsZXMucHJvdG8uTW9kdWxl",
            "EjoKDGN1cnJlbnRTdGF0ZRgCIAEoDjIkLm1vZHVsYXJFbXVsYXRvci5tb2R1",
            "bGVzLnByb3RvLnN0YXRlEkkKEHRpbWVQZXJTdGF0ZUluTVMYAyABKAsyLy5t",
            "b2R1bGFyRW11bGF0b3IubW9kdWxlcy5wcm90by5UaW1lUGVyU3RhdGVJbk1T",
            "ElUKFmVuZXJneVVzZVBlclN0YXRlSW5rV2gYBCABKAsyNS5tb2R1bGFyRW11",
            "bGF0b3IubW9kdWxlcy5wcm90by5FbmVyZ3lVc2VQZXJTdGF0ZUlua1doEj4K",
            "AmlkGAUgASgLMjIubW9kdWxhckVtdWxhdG9yLm1vZHVsZXMucHJvdG8uT1BD",
            "VUFJZGVudGlmaWNhdGlvbhITCgtkZXNjcmlwdGlvbhgGIAEoCRIXCg9pbnZl",
            "c3RtZW50Q29zdHMYByABKAESQwoTaW1wbGVtZW50ZWRTZXJ2aWNlcxgIIAMo",
            "DjImLm1vZHVsYXJFbXVsYXRvci5tb2R1bGVzLnByb3RvLlNlcnZpY2USSQoQ",
            "Y29uc3VtZWRTZXJ2aWNlcxgJIAMoCzIvLm1vZHVsYXJFbXVsYXRvci5tb2R1",
            "bGVzLnByb3RvLlNlcnZpY2VJbnRlcmZhY2USPwoKcGFyYW1ldGVycxgKIAEo",
            "CzIrLm1vZHVsYXJFbXVsYXRvci5tb2R1bGVzLnByb3RvLlBhcmFtZXRlclNl",
            "dCKeBgoMUGFyYW1ldGVyU2V0Ej4KAmlkGAEgASgLMjIubW9kdWxhckVtdWxh",
            "dG9yLm1vZHVsZXMucHJvdG8uT1BDVUFJZGVudGlmaWNhdGlvbhJNCg5zY2Fu",
            "bGFiU2Nhbm5lchgKIAEoCzIzLm1vZHVsYXJFbXVsYXRvci5tb2R1bGVzLnBy",
            "b3RvLlNjYW5sYWJTY2FubmVyUGFyYW1zSAASOwoFbGFzZXIYCyABKAsyKi5t",
            "b2R1bGFyRW11bGF0b3IubW9kdWxlcy5wcm90by5MYXNlclBhcmFtc0gAEk0K",
            "DnN0YW5kYXJkQ29hdGVyGAwgASgLMjMubW9kdWxhckVtdWxhdG9yLm1vZHVs",
            "ZXMucHJvdG8uU3RhbmRhcmRDb2F0ZXJQYXJhbXNIABJJCgxidWlsZENoYW1i",
            "ZXIYDyABKAsyMS5tb2R1bGFyRW11bGF0b3IubW9kdWxlcy5wcm90by5CdWls",
            "ZENoYW1iZXJQYXJhbXNIABJTChFjdWJvaWRCdWlsZFZvbHVtZRgQIAEoCzI2",
            "Lm1vZHVsYXJFbXVsYXRvci5tb2R1bGVzLnByb3RvLkN1Ym9pZEJ1aWxkVm9s",
            "dW1lUGFyYW1zSAASVwoTenlsaW5kZXJCdWlsZFZvbHVtZRgRIAEoCzI4Lm1v",
            "ZHVsYXJFbXVsYXRvci5tb2R1bGVzLnByb3RvLlp5bGluZGVyQnVpbGRWb2x1",
            "bWVQYXJhbXNIABJDCglwcmVoZWF0ZXIYEyABKAsyLi5tb2R1bGFyRW11bGF0",
            "b3IubW9kdWxlcy5wcm90by5QcmVoZWF0ZXJQYXJhbXNIABJNCg5ub3ZhbnRh",
            "U2Nhbm5lchgfIAEoCzIzLm1vZHVsYXJFbXVsYXRvci5tb2R1bGVzLnByb3Rv",
            "Lk5vdmFudGFTY2FubmVyUGFyYW1zSAASUQoQYmFzaWNMUEJGTWFjaGluZRhk",
            "IAEoCzI1Lm1vZHVsYXJFbXVsYXRvci5tb2R1bGVzLnByb3RvLkJhc2ljTFBC",
            "Rk1hY2hpbmVQYXJhbXNIAEITChFUeXBlQW5kUGFyYW1ldGVycyLpAQoWQmFz",
            "aWNMUEJGTWFjaGluZVBhcmFtcxIhChludW1iZXJPZkxhc2VyU2Nhbm5lclVu",
            "aXRzGAEgASgFEjwKCnNjYW5GaWVsZHMYFCADKAsyKC5tb2R1bGFyRW11bGF0",
            "b3IubW9kdWxlcy5wcm90by5TY2FuRmllbGQSGAoQTWluTGF5ZXJIZWlnaHRV",
            "TRgKIAEoARISCgpNaW5aRGlzdE1tGAsgASgBEhoKEk1pbmltYWxIYXRjaExl",
            "bmd0aBgMIAEoARIkChxGb3JjZWRNaW5pbXVtRXhwb3N1cmVUaW1lSW5TGA0g",
            "ASgBIqMBChBTZXJ2aWNlSW50ZXJmYWNlEj8KD2NvbnN1bWVkU2VydmljZRgB",
            "IAEoDjImLm1vZHVsYXJFbXVsYXRvci5tb2R1bGVzLnByb3RvLlNlcnZpY2US",
            "TgoSaW1wbGVtZW50aW5nTW9kdWxlGAIgASgLMjIubW9kdWxhckVtdWxhdG9y",
            "Lm1vZHVsZXMucHJvdG8uT1BDVUFJZGVudGlmaWNhdGlvbiLgAwoSQmFzaWNT",
            "Y2FubmVyUGFyYW1zEhYKDmp1bXBTcGVlZEluTW1TGAEgASgBEhYKDm1hcmtT",
            "cGVlZEluTW1TGAIgASgBEhsKE2xhc2VyRm9jdXNTaGlmdEluTW0YAyABKAES",
            "IAoYbWF4QWNjZWxlcmF0aW9uSW5NbVBlclNTGAQgASgBEhYKDnN0YXRpY0Rl",
            "bGF5SW5TGAUgASgBEhUKDWp1bXBEZWxheUluVXMYBiABKAESFQoNbWFya0Rl",
            "bGF5SW5VcxgHIAEoARIZChFsYXNlck9mZkRlbGF5SW5VcxgIIAEoARIYChBs",
            "YXNlck9uRGVsYXlJblVzGAkgASgBEhgKEHBvbHlnb25EZWxheUluVXMYCiAB",
            "KAESGAoQVmVjdG9yQmxvY2tEZWxheRgLIAEoARIYChBQYXJhbUNoYW5nZURl",
            "bGF5GAwgASgBEhsKE1dhcnBKdW1wTGVuZ3RoTGltaXQYDSABKAESTAoIanVt",
            "cE1vZGUYDiABKA4yOi5tb2R1bGFyRW11bGF0b3IubW9kdWxlcy5wcm90by5C",
            "YXNpY1NjYW5uZXJQYXJhbXMuSnVtcE1vZGUiJwoISnVtcE1vZGUSCgoGU1RB",
            "VElDEAASDwoLQUNDRUxFUkFURUQQASJiChZDb21tb25Ta3lXcml0aW5nUGFy",
            "YW1zEhkKEU5QcmV2SW5UZW5Vc1RpY2tzGAEgASgBEhkKEU5Qb3N0SW5UZW5V",
            "c1RpY2tzGAIgASgBEhIKCmxpbWl0QW5nbGUYAyABKAEicAoZQ29vcmRpbmF0",
            "ZVRyYW5zZm9ybVBhcmFtcxIdChVEZWxldGVaZXJvTGVuZ3RoSnVtcHMYASAB",
            "KAgSGQoRTWluaW1hbEp1bXBMZW5ndGgYAiABKAESGQoRTWluaW1hbE1hcmtM",
            "ZW5ndGgYAyABKAEipwUKFE5vdmFudGFTY2FubmVyUGFyYW1zEk0KEmJhc2lj",
            "U2Nhbm5lclBhcmFtcxgBIAEoCzIxLm1vZHVsYXJFbXVsYXRvci5tb2R1bGVz",
            "LnByb3RvLkJhc2ljU2Nhbm5lclBhcmFtcxJPChBza3lXcml0aW5nUGFyYW1z",
            "GAIgASgLMjUubW9kdWxhckVtdWxhdG9yLm1vZHVsZXMucHJvdG8uQ29tbW9u",
            "U2t5V3JpdGluZ1BhcmFtcxJWChRjb29yZFRyYW5zZm9ybVBhcmFtcxgDIAEo",
            "CzI4Lm1vZHVsYXJFbXVsYXRvci5tb2R1bGVzLnByb3RvLkNvb3JkaW5hdGVU",
            "cmFuc2Zvcm1QYXJhbXMSWgoOc2t5V3JpdGluZ01vZGUYBCABKA4yQi5tb2R1",
            "bGFyRW11bGF0b3IubW9kdWxlcy5wcm90by5Ob3ZhbnRhU2Nhbm5lclBhcmFt",
            "cy5Ta3lXcml0aW5nTW9kZRJQCglkZWxheU1vZGUYBSABKA4yPS5tb2R1bGFy",
            "RW11bGF0b3IubW9kdWxlcy5wcm90by5Ob3ZhbnRhU2Nhbm5lclBhcmFtcy5E",
            "ZWxheU1vZGUSFwoPcmFkaWFsRXJyb3JJblVtGAYgASgBEhwKFFNhZmV0eUZh",
            "Y3RvckZseUJ5TG93GAcgASgBEh0KFVNhZmV0eUZhY3RvckZseUJ5SGlnaBgI",
            "IAEoARIkChxTYWZldHlGYWN0b3JSYWRpYWxFcnJvckxpbWl0GAkgASgBIjQK",
            "DlNreVdyaXRpbmdNb2RlEggKBE5PTkUQABIJCgVNT0RFMxABEg0KCVNDQU5f",
            "UEFDSxACIjcKCURlbGF5TW9kZRIRCg1NQU5VQUxfREVMQVlTEAASFwoTVkFS",
            "SUFCTEVfUE9MWV9ERUxBWRABIuEGChRTY2FubGFiU2Nhbm5lclBhcmFtcxJN",
            "ChJiYXNpY1NjYW5uZXJQYXJhbXMYASABKAsyMS5tb2R1bGFyRW11bGF0b3Iu",
            "bW9kdWxlcy5wcm90by5CYXNpY1NjYW5uZXJQYXJhbXMSTwoQc2t5V3JpdGlu",
            "Z1BhcmFtcxgCIAEoCzI1Lm1vZHVsYXJFbXVsYXRvci5tb2R1bGVzLnByb3Rv",
            "LkNvbW1vblNreVdyaXRpbmdQYXJhbXMSVgoUY29vcmRUcmFuc2Zvcm1QYXJh",
            "bXMYAyABKAsyOC5tb2R1bGFyRW11bGF0b3IubW9kdWxlcy5wcm90by5Db29y",
            "ZGluYXRlVHJhbnNmb3JtUGFyYW1zEloKDnNreVdyaXRpbmdNb2RlGAQgASgO",
            "MkIubW9kdWxhckVtdWxhdG9yLm1vZHVsZXMucHJvdG8uU2NhbmxhYlNjYW5u",
            "ZXJQYXJhbXMuU2t5V3JpdGluZ01vZGUSEwoLdGltZUxhZ0luVXMYBSABKAES",
            "cAoZc2t5V3JpdGluZ1BhcmFtZXRyaW5nTW9kZRgGIAEoDjJNLm1vZHVsYXJF",
            "bXVsYXRvci5tb2R1bGVzLnByb3RvLlNjYW5sYWJTY2FubmVyUGFyYW1zLlNr",
            "eVdyaXRpbmdQYXJhbWV0cmluZ01vZGUSUAoJZGVsYXlNb2RlGAcgASgOMj0u",
            "bW9kdWxhckVtdWxhdG9yLm1vZHVsZXMucHJvdG8uU2NhbmxhYlNjYW5uZXJQ",
            "YXJhbXMuRGVsYXlNb2RlIjsKDlNreVdyaXRpbmdNb2RlEggKBE5PTkUQABIJ",
            "CgVNT0RFMRABEgkKBU1PREUyEAISCQoFTU9ERTMQAyKFAQoZU2t5V3JpdGlu",
            "Z1BhcmFtZXRyaW5nTW9kZRIWChJNQU5VQUxfTlBSRVZfTlBPU1QQABIqCiZB",
            "VVRPTUFUSUNfTlBSRVZfTlBPU1RfQkFTRURfT05fVElNRUxBRxABEiQKIE1J",
            "TklNVU1fTlBSRVZfTlBPU1RfQUNDRUxFUkFUSU9OEAIiVwoJRGVsYXlNb2Rl",
            "EhEKDU1BTlVBTF9ERUxBWVMQABIXChNWQVJJQUJMRV9QT0xZX0RFTEFZEAES",
            "HgoaTUlOSU1VTV9ERUxBWV9BQ0NFTEVSQVRJT04QAiJDCglTY2FuRmllbGQS",
            "DAoEWE1pbhgBIAEoARIMCgRYTWF4GAIgASgBEgwKBFlNaW4YAyABKAESDAoE",
            "WU1heBgEIAEoASIkCgtMYXNlclBhcmFtcxIVCg1MYXNlclBvd2VySW5XGAIg",
            "ASgBIuEBChRTdGFuZGFyZENvYXRlclBhcmFtcxIlCh1jb2F0aW5nU3BlZWRG",
            "b3J3YXJkSW5NbVBlclNlYxgBIAEoARImCh5jb2F0aW5nU3BlZWRCYWNrd2Fy",
            "ZEluTW1QZXJTZWMYAiABKAESFAoMZGlzdGFuY2VJbk1tGAMgASgBEhkKEWZv",
            "cndhcmREZWxheUluU2VjGAQgASgBEhoKEmJhY2t3YXJkRGVsYXlJblNlYxgF",
            "IAEoARIUCgxhY2NlbGVyYXRpb24YBiABKAESFwoPaXNCaWRpcmVjdGlvbmFs",
            "GAcgASgIItsBChJCdWlsZENoYW1iZXJQYXJhbXMSIgoacGxhdGZvcm1MaWZ0",
            "UmF0ZUluTW1QZXJTZWMYASABKAESKwojcGxhdGZvcm1MaWZ0QWNjZWxlcmF0",
            "aW9uSW5NbVBlclNlYzIYBSABKAESHAoUcGxhdGZvcm1MaWZ0RGVsYXlJblMY",
            "BiABKAESHgoWaW5lcnRBdG1vc3BoZXJlVGltZUluUxgCIAEoARIgChhyZWxl",
            "YXNlQXRtb3NwaGVyZVRpbWVJblMYAyABKAESFAoMbWF4aW11bU8yUFBNGAQg",
            "ASgBIm0KF0N1Ym9pZEJ1aWxkVm9sdW1lUGFyYW1zEgwKBFhNaW4YASABKAES",
            "DAoEWE1heBgCIAEoARIMCgRZTWluGAMgASgBEgwKBFlNYXgYBCABKAESDAoE",
            "Wk1pbhgFIAEoARIMCgRaTWF4GAYgASgBIj0KGVp5bGluZGVyQnVpbGRWb2x1",
            "bWVQYXJhbXMSEAoIZGlhbWV0ZXIYAiABKAESDgoGaGVpZ2h0GAMgASgBIo0B",
            "Cg9QcmVoZWF0ZXJQYXJhbXMSHQoVcHJlaGVhdGluZ1RlbXBlcmF0dXJlGAIg",
            "ASgBEiQKHG1heGltdW1QcmVoZWF0aW5nVGVtcGVyYXR1cmUYAyABKAESHAoU",
            "aGVhdGluZ1JhdGVJblNlY1BlcksYBCABKAESFwoPcm9vbVRlbXBlcmF0dXJl",
            "GAUgASgBImIKEFRpbWVQZXJTdGF0ZUluTVMSDwoHdGltZU9mZhgBIAEoARIQ",
            "Cgh0aW1lSWRsZRgCIAEoARISCgp0aW1lQWN0aXZlGAMgASgBEhcKD3RpbWVN",
            "YWludGVuYW5jZRgEIAEoASJwChZFbmVyZ3lVc2VQZXJTdGF0ZUlua1doEhEK",
            "CWVuZXJneU9mZhgBIAEoARISCgplbmVyZ3lJZGxlGAIgASgBEhQKDGVuZXJn",
            "eUFjdGl2ZRgDIAEoARIZChFlbmVyZ3lNYWludGVuYW5jZRgEIAEoASqNAwoH",
            "U2VydmljZRISCg5MQVNFUkRFRkxFQ1RPUhAAEg8KC0xBU0VSU09VUkNFEAES",
            "CgoGQ09BVEVSEAISFAoQSU5FUlRfQVRNT1NQSEVSRRADEgoKBkxPQURFUhAE",
            "EhIKDlBPU1RQUk9DRVNTSU5HEAUSGQoVUE9XREVSX0JFRF9NT05JVE9SSU5H",
            "EAYSDwoLUE9XREVSX0ZFRUQQBxIUChBQT1dERVJfUkVDWUNMSU5HEAgSEQoN",
            "UE9XREVSX1VOTE9BRBAJEg0KCVBSRUhFQVRFUhAKEhcKE1BVTFNFRF9MQVNF",
            "Ul9TT1VSQ0UQCxITCg9SRU1PVkVfU1VQUE9SVFMQDBIbChdTVUJTVFJBVEVf",
            "UExBVEVfTUlMTElORxANEhUKEVRIRVJNQUxfVFJFQVRNRU5UEA4SEQoNUExB",
            "VEZPUk1fTElGVBAPEhgKFFNDQU5GSUVMRF9BTExPQ0FUSU9OEBASEAoMRklM",
            "VEVSX0NMRUFOEBESFgoSVEhFUk1BTF9TSU1VTEFUSU9OEBIqNwoFc3RhdGUS",
            "BwoDT0ZGEAASCAoESURMRRABEgoKBkFDVElWRRACEg8KC01BSU5URU5BTkNF",
            "EANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ModularEmulator.Modules.Proto.Service), typeof(global::ModularEmulator.Modules.Proto.state), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.OPCUAIdentification), global::ModularEmulator.Modules.Proto.OPCUAIdentification.Parser, new[]{ "NodeId", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.Module), global::ModularEmulator.Modules.Proto.Module.Parser, new[]{ "ChildModules", "CurrentState", "TimePerStateInMS", "EnergyUsePerStateInkWh", "Id", "Description", "InvestmentCosts", "ImplementedServices", "ConsumedServices", "Parameters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.ParameterSet), global::ModularEmulator.Modules.Proto.ParameterSet.Parser, new[]{ "Id", "ScanlabScanner", "Laser", "StandardCoater", "BuildChamber", "CuboidBuildVolume", "ZylinderBuildVolume", "Preheater", "NovantaScanner", "BasicLPBFMachine" }, new[]{ "TypeAndParameters" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.BasicLPBFMachineParams), global::ModularEmulator.Modules.Proto.BasicLPBFMachineParams.Parser, new[]{ "NumberOfLaserScannerUnits", "ScanFields", "MinLayerHeightUM", "MinZDistMm", "MinimalHatchLength", "ForcedMinimumExposureTimeInS" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.ServiceInterface), global::ModularEmulator.Modules.Proto.ServiceInterface.Parser, new[]{ "ConsumedService", "ImplementingModule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.BasicScannerParams), global::ModularEmulator.Modules.Proto.BasicScannerParams.Parser, new[]{ "JumpSpeedInMmS", "MarkSpeedInMmS", "LaserFocusShiftInMm", "MaxAccelerationInMmPerSS", "StaticDelayInS", "JumpDelayInUs", "MarkDelayInUs", "LaserOffDelayInUs", "LaserOnDelayInUs", "PolygonDelayInUs", "VectorBlockDelay", "ParamChangeDelay", "WarpJumpLengthLimit", "JumpMode" }, null, new[]{ typeof(global::ModularEmulator.Modules.Proto.BasicScannerParams.Types.JumpMode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.CommonSkyWritingParams), global::ModularEmulator.Modules.Proto.CommonSkyWritingParams.Parser, new[]{ "NPrevInTenUsTicks", "NPostInTenUsTicks", "LimitAngle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.CoordinateTransformParams), global::ModularEmulator.Modules.Proto.CoordinateTransformParams.Parser, new[]{ "DeleteZeroLengthJumps", "MinimalJumpLength", "MinimalMarkLength" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.NovantaScannerParams), global::ModularEmulator.Modules.Proto.NovantaScannerParams.Parser, new[]{ "BasicScannerParams", "SkyWritingParams", "CoordTransformParams", "SkyWritingMode", "DelayMode", "RadialErrorInUm", "SafetyFactorFlyByLow", "SafetyFactorFlyByHigh", "SafetyFactorRadialErrorLimit" }, null, new[]{ typeof(global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.SkyWritingMode), typeof(global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.DelayMode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.ScanlabScannerParams), global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Parser, new[]{ "BasicScannerParams", "SkyWritingParams", "CoordTransformParams", "SkyWritingMode", "TimeLagInUs", "SkyWritingParametringMode", "DelayMode" }, null, new[]{ typeof(global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingMode), typeof(global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingParametringMode), typeof(global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.DelayMode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.ScanField), global::ModularEmulator.Modules.Proto.ScanField.Parser, new[]{ "XMin", "XMax", "YMin", "YMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.LaserParams), global::ModularEmulator.Modules.Proto.LaserParams.Parser, new[]{ "LaserPowerInW" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.StandardCoaterParams), global::ModularEmulator.Modules.Proto.StandardCoaterParams.Parser, new[]{ "CoatingSpeedForwardInMmPerSec", "CoatingSpeedBackwardInMmPerSec", "DistanceInMm", "ForwardDelayInSec", "BackwardDelayInSec", "Acceleration", "IsBidirectional" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.BuildChamberParams), global::ModularEmulator.Modules.Proto.BuildChamberParams.Parser, new[]{ "PlatformLiftRateInMmPerSec", "PlatformLiftAccelerationInMmPerSec2", "PlatformLiftDelayInS", "InertAtmosphereTimeInS", "ReleaseAtmosphereTimeInS", "MaximumO2PPM" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.CuboidBuildVolumeParams), global::ModularEmulator.Modules.Proto.CuboidBuildVolumeParams.Parser, new[]{ "XMin", "XMax", "YMin", "YMax", "ZMin", "ZMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.ZylinderBuildVolumeParams), global::ModularEmulator.Modules.Proto.ZylinderBuildVolumeParams.Parser, new[]{ "Diameter", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.PreheaterParams), global::ModularEmulator.Modules.Proto.PreheaterParams.Parser, new[]{ "PreheatingTemperature", "MaximumPreheatingTemperature", "HeatingRateInSecPerK", "RoomTemperature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.TimePerStateInMS), global::ModularEmulator.Modules.Proto.TimePerStateInMS.Parser, new[]{ "TimeOff", "TimeIdle", "TimeActive", "TimeMaintenance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ModularEmulator.Modules.Proto.EnergyUsePerStateInkWh), global::ModularEmulator.Modules.Proto.EnergyUsePerStateInkWh.Parser, new[]{ "EnergyOff", "EnergyIdle", "EnergyActive", "EnergyMaintenance" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Services available for the implementation by the module framework.
  /// </summary>
  public enum Service {
    [pbr::OriginalName("LASERDEFLECTOR")] Laserdeflector = 0,
    [pbr::OriginalName("LASERSOURCE")] Lasersource = 1,
    [pbr::OriginalName("COATER")] Coater = 2,
    [pbr::OriginalName("INERT_ATMOSPHERE")] InertAtmosphere = 3,
    [pbr::OriginalName("LOADER")] Loader = 4,
    [pbr::OriginalName("POSTPROCESSING")] Postprocessing = 5,
    [pbr::OriginalName("POWDER_BED_MONITORING")] PowderBedMonitoring = 6,
    [pbr::OriginalName("POWDER_FEED")] PowderFeed = 7,
    [pbr::OriginalName("POWDER_RECYCLING")] PowderRecycling = 8,
    [pbr::OriginalName("POWDER_UNLOAD")] PowderUnload = 9,
    [pbr::OriginalName("PREHEATER")] Preheater = 10,
    [pbr::OriginalName("PULSED_LASER_SOURCE")] PulsedLaserSource = 11,
    [pbr::OriginalName("REMOVE_SUPPORTS")] RemoveSupports = 12,
    [pbr::OriginalName("SUBSTRATE_PLATE_MILLING")] SubstratePlateMilling = 13,
    [pbr::OriginalName("THERMAL_TREATMENT")] ThermalTreatment = 14,
    [pbr::OriginalName("PLATFORM_LIFT")] PlatformLift = 15,
    [pbr::OriginalName("SCANFIELD_ALLOCATION")] ScanfieldAllocation = 16,
    [pbr::OriginalName("FILTER_CLEAN")] FilterClean = 17,
    [pbr::OriginalName("THERMAL_SIMULATION")] ThermalSimulation = 18,
  }

  public enum state {
    [pbr::OriginalName("OFF")] Off = 0,
    [pbr::OriginalName("IDLE")] Idle = 1,
    [pbr::OriginalName("ACTIVE")] Active = 2,
    [pbr::OriginalName("MAINTENANCE")] Maintenance = 3,
  }

  #endregion

  #region Messages
  public sealed partial class OPCUAIdentification : pb::IMessage<OPCUAIdentification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OPCUAIdentification> _parser = new pb::MessageParser<OPCUAIdentification>(() => new OPCUAIdentification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OPCUAIdentification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OPCUAIdentification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OPCUAIdentification(OPCUAIdentification other) : this() {
      nodeId_ = other.nodeId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OPCUAIdentification Clone() {
      return new OPCUAIdentification(this);
    }

    /// <summary>Field number for the "nodeId" field.</summary>
    public const int NodeIdFieldNumber = 1;
    private uint nodeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OPCUAIdentification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OPCUAIdentification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeId != other.NodeId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeId != 0) hash ^= NodeId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NodeId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(NodeId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NodeId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(NodeId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NodeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NodeId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OPCUAIdentification other) {
      if (other == null) {
        return;
      }
      if (other.NodeId != 0) {
        NodeId = other.NodeId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NodeId = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NodeId = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// basic data of every module. Modules are organized in a tree structure (childModules)
  /// </summary>
  public sealed partial class Module : pb::IMessage<Module>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Module> _parser = new pb::MessageParser<Module>(() => new Module());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Module> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Module() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Module(Module other) : this() {
      childModules_ = other.childModules_.Clone();
      currentState_ = other.currentState_;
      timePerStateInMS_ = other.timePerStateInMS_ != null ? other.timePerStateInMS_.Clone() : null;
      energyUsePerStateInkWh_ = other.energyUsePerStateInkWh_ != null ? other.energyUsePerStateInkWh_.Clone() : null;
      id_ = other.id_ != null ? other.id_.Clone() : null;
      description_ = other.description_;
      investmentCosts_ = other.investmentCosts_;
      implementedServices_ = other.implementedServices_.Clone();
      consumedServices_ = other.consumedServices_.Clone();
      parameters_ = other.parameters_ != null ? other.parameters_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Module Clone() {
      return new Module(this);
    }

    /// <summary>Field number for the "childModules" field.</summary>
    public const int ChildModulesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ModularEmulator.Modules.Proto.Module> _repeated_childModules_codec
        = pb::FieldCodec.ForMessage(10, global::ModularEmulator.Modules.Proto.Module.Parser);
    private readonly pbc::RepeatedField<global::ModularEmulator.Modules.Proto.Module> childModules_ = new pbc::RepeatedField<global::ModularEmulator.Modules.Proto.Module>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ModularEmulator.Modules.Proto.Module> ChildModules {
      get { return childModules_; }
    }

    /// <summary>Field number for the "currentState" field.</summary>
    public const int CurrentStateFieldNumber = 2;
    private global::ModularEmulator.Modules.Proto.state currentState_ = global::ModularEmulator.Modules.Proto.state.Off;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.state CurrentState {
      get { return currentState_; }
      set {
        currentState_ = value;
      }
    }

    /// <summary>Field number for the "timePerStateInMS" field.</summary>
    public const int TimePerStateInMSFieldNumber = 3;
    private global::ModularEmulator.Modules.Proto.TimePerStateInMS timePerStateInMS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.TimePerStateInMS TimePerStateInMS {
      get { return timePerStateInMS_; }
      set {
        timePerStateInMS_ = value;
      }
    }

    /// <summary>Field number for the "energyUsePerStateInkWh" field.</summary>
    public const int EnergyUsePerStateInkWhFieldNumber = 4;
    private global::ModularEmulator.Modules.Proto.EnergyUsePerStateInkWh energyUsePerStateInkWh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.EnergyUsePerStateInkWh EnergyUsePerStateInkWh {
      get { return energyUsePerStateInkWh_; }
      set {
        energyUsePerStateInkWh_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private global::ModularEmulator.Modules.Proto.OPCUAIdentification id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.OPCUAIdentification Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "investmentCosts" field.</summary>
    public const int InvestmentCostsFieldNumber = 7;
    private double investmentCosts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InvestmentCosts {
      get { return investmentCosts_; }
      set {
        investmentCosts_ = value;
      }
    }

    /// <summary>Field number for the "implementedServices" field.</summary>
    public const int ImplementedServicesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::ModularEmulator.Modules.Proto.Service> _repeated_implementedServices_codec
        = pb::FieldCodec.ForEnum(66, x => (int) x, x => (global::ModularEmulator.Modules.Proto.Service) x);
    private readonly pbc::RepeatedField<global::ModularEmulator.Modules.Proto.Service> implementedServices_ = new pbc::RepeatedField<global::ModularEmulator.Modules.Proto.Service>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ModularEmulator.Modules.Proto.Service> ImplementedServices {
      get { return implementedServices_; }
    }

    /// <summary>Field number for the "consumedServices" field.</summary>
    public const int ConsumedServicesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::ModularEmulator.Modules.Proto.ServiceInterface> _repeated_consumedServices_codec
        = pb::FieldCodec.ForMessage(74, global::ModularEmulator.Modules.Proto.ServiceInterface.Parser);
    private readonly pbc::RepeatedField<global::ModularEmulator.Modules.Proto.ServiceInterface> consumedServices_ = new pbc::RepeatedField<global::ModularEmulator.Modules.Proto.ServiceInterface>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ModularEmulator.Modules.Proto.ServiceInterface> ConsumedServices {
      get { return consumedServices_; }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 10;
    private global::ModularEmulator.Modules.Proto.ParameterSet parameters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.ParameterSet Parameters {
      get { return parameters_; }
      set {
        parameters_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Module);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Module other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!childModules_.Equals(other.childModules_)) return false;
      if (CurrentState != other.CurrentState) return false;
      if (!object.Equals(TimePerStateInMS, other.TimePerStateInMS)) return false;
      if (!object.Equals(EnergyUsePerStateInkWh, other.EnergyUsePerStateInkWh)) return false;
      if (!object.Equals(Id, other.Id)) return false;
      if (Description != other.Description) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InvestmentCosts, other.InvestmentCosts)) return false;
      if(!implementedServices_.Equals(other.implementedServices_)) return false;
      if(!consumedServices_.Equals(other.consumedServices_)) return false;
      if (!object.Equals(Parameters, other.Parameters)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= childModules_.GetHashCode();
      if (CurrentState != global::ModularEmulator.Modules.Proto.state.Off) hash ^= CurrentState.GetHashCode();
      if (timePerStateInMS_ != null) hash ^= TimePerStateInMS.GetHashCode();
      if (energyUsePerStateInkWh_ != null) hash ^= EnergyUsePerStateInkWh.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (InvestmentCosts != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InvestmentCosts);
      hash ^= implementedServices_.GetHashCode();
      hash ^= consumedServices_.GetHashCode();
      if (parameters_ != null) hash ^= Parameters.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      childModules_.WriteTo(output, _repeated_childModules_codec);
      if (CurrentState != global::ModularEmulator.Modules.Proto.state.Off) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CurrentState);
      }
      if (timePerStateInMS_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TimePerStateInMS);
      }
      if (energyUsePerStateInkWh_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EnergyUsePerStateInkWh);
      }
      if (id_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Id);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (InvestmentCosts != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(InvestmentCosts);
      }
      implementedServices_.WriteTo(output, _repeated_implementedServices_codec);
      consumedServices_.WriteTo(output, _repeated_consumedServices_codec);
      if (parameters_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Parameters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      childModules_.WriteTo(ref output, _repeated_childModules_codec);
      if (CurrentState != global::ModularEmulator.Modules.Proto.state.Off) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CurrentState);
      }
      if (timePerStateInMS_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TimePerStateInMS);
      }
      if (energyUsePerStateInkWh_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EnergyUsePerStateInkWh);
      }
      if (id_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Id);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (InvestmentCosts != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(InvestmentCosts);
      }
      implementedServices_.WriteTo(ref output, _repeated_implementedServices_codec);
      consumedServices_.WriteTo(ref output, _repeated_consumedServices_codec);
      if (parameters_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Parameters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += childModules_.CalculateSize(_repeated_childModules_codec);
      if (CurrentState != global::ModularEmulator.Modules.Proto.state.Off) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CurrentState);
      }
      if (timePerStateInMS_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimePerStateInMS);
      }
      if (energyUsePerStateInkWh_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnergyUsePerStateInkWh);
      }
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (InvestmentCosts != 0D) {
        size += 1 + 8;
      }
      size += implementedServices_.CalculateSize(_repeated_implementedServices_codec);
      size += consumedServices_.CalculateSize(_repeated_consumedServices_codec);
      if (parameters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parameters);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Module other) {
      if (other == null) {
        return;
      }
      childModules_.Add(other.childModules_);
      if (other.CurrentState != global::ModularEmulator.Modules.Proto.state.Off) {
        CurrentState = other.CurrentState;
      }
      if (other.timePerStateInMS_ != null) {
        if (timePerStateInMS_ == null) {
          TimePerStateInMS = new global::ModularEmulator.Modules.Proto.TimePerStateInMS();
        }
        TimePerStateInMS.MergeFrom(other.TimePerStateInMS);
      }
      if (other.energyUsePerStateInkWh_ != null) {
        if (energyUsePerStateInkWh_ == null) {
          EnergyUsePerStateInkWh = new global::ModularEmulator.Modules.Proto.EnergyUsePerStateInkWh();
        }
        EnergyUsePerStateInkWh.MergeFrom(other.EnergyUsePerStateInkWh);
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::ModularEmulator.Modules.Proto.OPCUAIdentification();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.InvestmentCosts != 0D) {
        InvestmentCosts = other.InvestmentCosts;
      }
      implementedServices_.Add(other.implementedServices_);
      consumedServices_.Add(other.consumedServices_);
      if (other.parameters_ != null) {
        if (parameters_ == null) {
          Parameters = new global::ModularEmulator.Modules.Proto.ParameterSet();
        }
        Parameters.MergeFrom(other.Parameters);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            childModules_.AddEntriesFrom(input, _repeated_childModules_codec);
            break;
          }
          case 16: {
            CurrentState = (global::ModularEmulator.Modules.Proto.state) input.ReadEnum();
            break;
          }
          case 26: {
            if (timePerStateInMS_ == null) {
              TimePerStateInMS = new global::ModularEmulator.Modules.Proto.TimePerStateInMS();
            }
            input.ReadMessage(TimePerStateInMS);
            break;
          }
          case 34: {
            if (energyUsePerStateInkWh_ == null) {
              EnergyUsePerStateInkWh = new global::ModularEmulator.Modules.Proto.EnergyUsePerStateInkWh();
            }
            input.ReadMessage(EnergyUsePerStateInkWh);
            break;
          }
          case 42: {
            if (id_ == null) {
              Id = new global::ModularEmulator.Modules.Proto.OPCUAIdentification();
            }
            input.ReadMessage(Id);
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 57: {
            InvestmentCosts = input.ReadDouble();
            break;
          }
          case 66:
          case 64: {
            implementedServices_.AddEntriesFrom(input, _repeated_implementedServices_codec);
            break;
          }
          case 74: {
            consumedServices_.AddEntriesFrom(input, _repeated_consumedServices_codec);
            break;
          }
          case 82: {
            if (parameters_ == null) {
              Parameters = new global::ModularEmulator.Modules.Proto.ParameterSet();
            }
            input.ReadMessage(Parameters);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            childModules_.AddEntriesFrom(ref input, _repeated_childModules_codec);
            break;
          }
          case 16: {
            CurrentState = (global::ModularEmulator.Modules.Proto.state) input.ReadEnum();
            break;
          }
          case 26: {
            if (timePerStateInMS_ == null) {
              TimePerStateInMS = new global::ModularEmulator.Modules.Proto.TimePerStateInMS();
            }
            input.ReadMessage(TimePerStateInMS);
            break;
          }
          case 34: {
            if (energyUsePerStateInkWh_ == null) {
              EnergyUsePerStateInkWh = new global::ModularEmulator.Modules.Proto.EnergyUsePerStateInkWh();
            }
            input.ReadMessage(EnergyUsePerStateInkWh);
            break;
          }
          case 42: {
            if (id_ == null) {
              Id = new global::ModularEmulator.Modules.Proto.OPCUAIdentification();
            }
            input.ReadMessage(Id);
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 57: {
            InvestmentCosts = input.ReadDouble();
            break;
          }
          case 66:
          case 64: {
            implementedServices_.AddEntriesFrom(ref input, _repeated_implementedServices_codec);
            break;
          }
          case 74: {
            consumedServices_.AddEntriesFrom(ref input, _repeated_consumedServices_codec);
            break;
          }
          case 82: {
            if (parameters_ == null) {
              Parameters = new global::ModularEmulator.Modules.Proto.ParameterSet();
            }
            input.ReadMessage(Parameters);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// parameter sets used by modules
  /// </summary>
  public sealed partial class ParameterSet : pb::IMessage<ParameterSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ParameterSet> _parser = new pb::MessageParser<ParameterSet>(() => new ParameterSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ParameterSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ParameterSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ParameterSet(ParameterSet other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      switch (other.TypeAndParametersCase) {
        case TypeAndParametersOneofCase.ScanlabScanner:
          ScanlabScanner = other.ScanlabScanner.Clone();
          break;
        case TypeAndParametersOneofCase.Laser:
          Laser = other.Laser.Clone();
          break;
        case TypeAndParametersOneofCase.StandardCoater:
          StandardCoater = other.StandardCoater.Clone();
          break;
        case TypeAndParametersOneofCase.BuildChamber:
          BuildChamber = other.BuildChamber.Clone();
          break;
        case TypeAndParametersOneofCase.CuboidBuildVolume:
          CuboidBuildVolume = other.CuboidBuildVolume.Clone();
          break;
        case TypeAndParametersOneofCase.ZylinderBuildVolume:
          ZylinderBuildVolume = other.ZylinderBuildVolume.Clone();
          break;
        case TypeAndParametersOneofCase.Preheater:
          Preheater = other.Preheater.Clone();
          break;
        case TypeAndParametersOneofCase.NovantaScanner:
          NovantaScanner = other.NovantaScanner.Clone();
          break;
        case TypeAndParametersOneofCase.BasicLPBFMachine:
          BasicLPBFMachine = other.BasicLPBFMachine.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ParameterSet Clone() {
      return new ParameterSet(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::ModularEmulator.Modules.Proto.OPCUAIdentification id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.OPCUAIdentification Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "scanlabScanner" field.</summary>
    public const int ScanlabScannerFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.ScanlabScannerParams ScanlabScanner {
      get { return typeAndParametersCase_ == TypeAndParametersOneofCase.ScanlabScanner ? (global::ModularEmulator.Modules.Proto.ScanlabScannerParams) typeAndParameters_ : null; }
      set {
        typeAndParameters_ = value;
        typeAndParametersCase_ = value == null ? TypeAndParametersOneofCase.None : TypeAndParametersOneofCase.ScanlabScanner;
      }
    }

    /// <summary>Field number for the "laser" field.</summary>
    public const int LaserFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.LaserParams Laser {
      get { return typeAndParametersCase_ == TypeAndParametersOneofCase.Laser ? (global::ModularEmulator.Modules.Proto.LaserParams) typeAndParameters_ : null; }
      set {
        typeAndParameters_ = value;
        typeAndParametersCase_ = value == null ? TypeAndParametersOneofCase.None : TypeAndParametersOneofCase.Laser;
      }
    }

    /// <summary>Field number for the "standardCoater" field.</summary>
    public const int StandardCoaterFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.StandardCoaterParams StandardCoater {
      get { return typeAndParametersCase_ == TypeAndParametersOneofCase.StandardCoater ? (global::ModularEmulator.Modules.Proto.StandardCoaterParams) typeAndParameters_ : null; }
      set {
        typeAndParameters_ = value;
        typeAndParametersCase_ = value == null ? TypeAndParametersOneofCase.None : TypeAndParametersOneofCase.StandardCoater;
      }
    }

    /// <summary>Field number for the "buildChamber" field.</summary>
    public const int BuildChamberFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.BuildChamberParams BuildChamber {
      get { return typeAndParametersCase_ == TypeAndParametersOneofCase.BuildChamber ? (global::ModularEmulator.Modules.Proto.BuildChamberParams) typeAndParameters_ : null; }
      set {
        typeAndParameters_ = value;
        typeAndParametersCase_ = value == null ? TypeAndParametersOneofCase.None : TypeAndParametersOneofCase.BuildChamber;
      }
    }

    /// <summary>Field number for the "cuboidBuildVolume" field.</summary>
    public const int CuboidBuildVolumeFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.CuboidBuildVolumeParams CuboidBuildVolume {
      get { return typeAndParametersCase_ == TypeAndParametersOneofCase.CuboidBuildVolume ? (global::ModularEmulator.Modules.Proto.CuboidBuildVolumeParams) typeAndParameters_ : null; }
      set {
        typeAndParameters_ = value;
        typeAndParametersCase_ = value == null ? TypeAndParametersOneofCase.None : TypeAndParametersOneofCase.CuboidBuildVolume;
      }
    }

    /// <summary>Field number for the "zylinderBuildVolume" field.</summary>
    public const int ZylinderBuildVolumeFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.ZylinderBuildVolumeParams ZylinderBuildVolume {
      get { return typeAndParametersCase_ == TypeAndParametersOneofCase.ZylinderBuildVolume ? (global::ModularEmulator.Modules.Proto.ZylinderBuildVolumeParams) typeAndParameters_ : null; }
      set {
        typeAndParameters_ = value;
        typeAndParametersCase_ = value == null ? TypeAndParametersOneofCase.None : TypeAndParametersOneofCase.ZylinderBuildVolume;
      }
    }

    /// <summary>Field number for the "preheater" field.</summary>
    public const int PreheaterFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.PreheaterParams Preheater {
      get { return typeAndParametersCase_ == TypeAndParametersOneofCase.Preheater ? (global::ModularEmulator.Modules.Proto.PreheaterParams) typeAndParameters_ : null; }
      set {
        typeAndParameters_ = value;
        typeAndParametersCase_ = value == null ? TypeAndParametersOneofCase.None : TypeAndParametersOneofCase.Preheater;
      }
    }

    /// <summary>Field number for the "novantaScanner" field.</summary>
    public const int NovantaScannerFieldNumber = 31;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.NovantaScannerParams NovantaScanner {
      get { return typeAndParametersCase_ == TypeAndParametersOneofCase.NovantaScanner ? (global::ModularEmulator.Modules.Proto.NovantaScannerParams) typeAndParameters_ : null; }
      set {
        typeAndParameters_ = value;
        typeAndParametersCase_ = value == null ? TypeAndParametersOneofCase.None : TypeAndParametersOneofCase.NovantaScanner;
      }
    }

    /// <summary>Field number for the "basicLPBFMachine" field.</summary>
    public const int BasicLPBFMachineFieldNumber = 100;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.BasicLPBFMachineParams BasicLPBFMachine {
      get { return typeAndParametersCase_ == TypeAndParametersOneofCase.BasicLPBFMachine ? (global::ModularEmulator.Modules.Proto.BasicLPBFMachineParams) typeAndParameters_ : null; }
      set {
        typeAndParameters_ = value;
        typeAndParametersCase_ = value == null ? TypeAndParametersOneofCase.None : TypeAndParametersOneofCase.BasicLPBFMachine;
      }
    }

    private object typeAndParameters_;
    /// <summary>Enum of possible cases for the "TypeAndParameters" oneof.</summary>
    public enum TypeAndParametersOneofCase {
      None = 0,
      ScanlabScanner = 10,
      Laser = 11,
      StandardCoater = 12,
      BuildChamber = 15,
      CuboidBuildVolume = 16,
      ZylinderBuildVolume = 17,
      Preheater = 19,
      NovantaScanner = 31,
      BasicLPBFMachine = 100,
    }
    private TypeAndParametersOneofCase typeAndParametersCase_ = TypeAndParametersOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TypeAndParametersOneofCase TypeAndParametersCase {
      get { return typeAndParametersCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTypeAndParameters() {
      typeAndParametersCase_ = TypeAndParametersOneofCase.None;
      typeAndParameters_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ParameterSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ParameterSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(ScanlabScanner, other.ScanlabScanner)) return false;
      if (!object.Equals(Laser, other.Laser)) return false;
      if (!object.Equals(StandardCoater, other.StandardCoater)) return false;
      if (!object.Equals(BuildChamber, other.BuildChamber)) return false;
      if (!object.Equals(CuboidBuildVolume, other.CuboidBuildVolume)) return false;
      if (!object.Equals(ZylinderBuildVolume, other.ZylinderBuildVolume)) return false;
      if (!object.Equals(Preheater, other.Preheater)) return false;
      if (!object.Equals(NovantaScanner, other.NovantaScanner)) return false;
      if (!object.Equals(BasicLPBFMachine, other.BasicLPBFMachine)) return false;
      if (TypeAndParametersCase != other.TypeAndParametersCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.ScanlabScanner) hash ^= ScanlabScanner.GetHashCode();
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.Laser) hash ^= Laser.GetHashCode();
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.StandardCoater) hash ^= StandardCoater.GetHashCode();
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.BuildChamber) hash ^= BuildChamber.GetHashCode();
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.CuboidBuildVolume) hash ^= CuboidBuildVolume.GetHashCode();
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.ZylinderBuildVolume) hash ^= ZylinderBuildVolume.GetHashCode();
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.Preheater) hash ^= Preheater.GetHashCode();
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.NovantaScanner) hash ^= NovantaScanner.GetHashCode();
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.BasicLPBFMachine) hash ^= BasicLPBFMachine.GetHashCode();
      hash ^= (int) typeAndParametersCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.ScanlabScanner) {
        output.WriteRawTag(82);
        output.WriteMessage(ScanlabScanner);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.Laser) {
        output.WriteRawTag(90);
        output.WriteMessage(Laser);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.StandardCoater) {
        output.WriteRawTag(98);
        output.WriteMessage(StandardCoater);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.BuildChamber) {
        output.WriteRawTag(122);
        output.WriteMessage(BuildChamber);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.CuboidBuildVolume) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CuboidBuildVolume);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.ZylinderBuildVolume) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ZylinderBuildVolume);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.Preheater) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(Preheater);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.NovantaScanner) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(NovantaScanner);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.BasicLPBFMachine) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(BasicLPBFMachine);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.ScanlabScanner) {
        output.WriteRawTag(82);
        output.WriteMessage(ScanlabScanner);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.Laser) {
        output.WriteRawTag(90);
        output.WriteMessage(Laser);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.StandardCoater) {
        output.WriteRawTag(98);
        output.WriteMessage(StandardCoater);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.BuildChamber) {
        output.WriteRawTag(122);
        output.WriteMessage(BuildChamber);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.CuboidBuildVolume) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CuboidBuildVolume);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.ZylinderBuildVolume) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ZylinderBuildVolume);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.Preheater) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(Preheater);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.NovantaScanner) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(NovantaScanner);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.BasicLPBFMachine) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(BasicLPBFMachine);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.ScanlabScanner) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScanlabScanner);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.Laser) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Laser);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.StandardCoater) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StandardCoater);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.BuildChamber) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildChamber);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.CuboidBuildVolume) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CuboidBuildVolume);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.ZylinderBuildVolume) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ZylinderBuildVolume);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.Preheater) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Preheater);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.NovantaScanner) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NovantaScanner);
      }
      if (typeAndParametersCase_ == TypeAndParametersOneofCase.BasicLPBFMachine) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BasicLPBFMachine);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ParameterSet other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::ModularEmulator.Modules.Proto.OPCUAIdentification();
        }
        Id.MergeFrom(other.Id);
      }
      switch (other.TypeAndParametersCase) {
        case TypeAndParametersOneofCase.ScanlabScanner:
          if (ScanlabScanner == null) {
            ScanlabScanner = new global::ModularEmulator.Modules.Proto.ScanlabScannerParams();
          }
          ScanlabScanner.MergeFrom(other.ScanlabScanner);
          break;
        case TypeAndParametersOneofCase.Laser:
          if (Laser == null) {
            Laser = new global::ModularEmulator.Modules.Proto.LaserParams();
          }
          Laser.MergeFrom(other.Laser);
          break;
        case TypeAndParametersOneofCase.StandardCoater:
          if (StandardCoater == null) {
            StandardCoater = new global::ModularEmulator.Modules.Proto.StandardCoaterParams();
          }
          StandardCoater.MergeFrom(other.StandardCoater);
          break;
        case TypeAndParametersOneofCase.BuildChamber:
          if (BuildChamber == null) {
            BuildChamber = new global::ModularEmulator.Modules.Proto.BuildChamberParams();
          }
          BuildChamber.MergeFrom(other.BuildChamber);
          break;
        case TypeAndParametersOneofCase.CuboidBuildVolume:
          if (CuboidBuildVolume == null) {
            CuboidBuildVolume = new global::ModularEmulator.Modules.Proto.CuboidBuildVolumeParams();
          }
          CuboidBuildVolume.MergeFrom(other.CuboidBuildVolume);
          break;
        case TypeAndParametersOneofCase.ZylinderBuildVolume:
          if (ZylinderBuildVolume == null) {
            ZylinderBuildVolume = new global::ModularEmulator.Modules.Proto.ZylinderBuildVolumeParams();
          }
          ZylinderBuildVolume.MergeFrom(other.ZylinderBuildVolume);
          break;
        case TypeAndParametersOneofCase.Preheater:
          if (Preheater == null) {
            Preheater = new global::ModularEmulator.Modules.Proto.PreheaterParams();
          }
          Preheater.MergeFrom(other.Preheater);
          break;
        case TypeAndParametersOneofCase.NovantaScanner:
          if (NovantaScanner == null) {
            NovantaScanner = new global::ModularEmulator.Modules.Proto.NovantaScannerParams();
          }
          NovantaScanner.MergeFrom(other.NovantaScanner);
          break;
        case TypeAndParametersOneofCase.BasicLPBFMachine:
          if (BasicLPBFMachine == null) {
            BasicLPBFMachine = new global::ModularEmulator.Modules.Proto.BasicLPBFMachineParams();
          }
          BasicLPBFMachine.MergeFrom(other.BasicLPBFMachine);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::ModularEmulator.Modules.Proto.OPCUAIdentification();
            }
            input.ReadMessage(Id);
            break;
          }
          case 82: {
            global::ModularEmulator.Modules.Proto.ScanlabScannerParams subBuilder = new global::ModularEmulator.Modules.Proto.ScanlabScannerParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.ScanlabScanner) {
              subBuilder.MergeFrom(ScanlabScanner);
            }
            input.ReadMessage(subBuilder);
            ScanlabScanner = subBuilder;
            break;
          }
          case 90: {
            global::ModularEmulator.Modules.Proto.LaserParams subBuilder = new global::ModularEmulator.Modules.Proto.LaserParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.Laser) {
              subBuilder.MergeFrom(Laser);
            }
            input.ReadMessage(subBuilder);
            Laser = subBuilder;
            break;
          }
          case 98: {
            global::ModularEmulator.Modules.Proto.StandardCoaterParams subBuilder = new global::ModularEmulator.Modules.Proto.StandardCoaterParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.StandardCoater) {
              subBuilder.MergeFrom(StandardCoater);
            }
            input.ReadMessage(subBuilder);
            StandardCoater = subBuilder;
            break;
          }
          case 122: {
            global::ModularEmulator.Modules.Proto.BuildChamberParams subBuilder = new global::ModularEmulator.Modules.Proto.BuildChamberParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.BuildChamber) {
              subBuilder.MergeFrom(BuildChamber);
            }
            input.ReadMessage(subBuilder);
            BuildChamber = subBuilder;
            break;
          }
          case 130: {
            global::ModularEmulator.Modules.Proto.CuboidBuildVolumeParams subBuilder = new global::ModularEmulator.Modules.Proto.CuboidBuildVolumeParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.CuboidBuildVolume) {
              subBuilder.MergeFrom(CuboidBuildVolume);
            }
            input.ReadMessage(subBuilder);
            CuboidBuildVolume = subBuilder;
            break;
          }
          case 138: {
            global::ModularEmulator.Modules.Proto.ZylinderBuildVolumeParams subBuilder = new global::ModularEmulator.Modules.Proto.ZylinderBuildVolumeParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.ZylinderBuildVolume) {
              subBuilder.MergeFrom(ZylinderBuildVolume);
            }
            input.ReadMessage(subBuilder);
            ZylinderBuildVolume = subBuilder;
            break;
          }
          case 154: {
            global::ModularEmulator.Modules.Proto.PreheaterParams subBuilder = new global::ModularEmulator.Modules.Proto.PreheaterParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.Preheater) {
              subBuilder.MergeFrom(Preheater);
            }
            input.ReadMessage(subBuilder);
            Preheater = subBuilder;
            break;
          }
          case 250: {
            global::ModularEmulator.Modules.Proto.NovantaScannerParams subBuilder = new global::ModularEmulator.Modules.Proto.NovantaScannerParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.NovantaScanner) {
              subBuilder.MergeFrom(NovantaScanner);
            }
            input.ReadMessage(subBuilder);
            NovantaScanner = subBuilder;
            break;
          }
          case 802: {
            global::ModularEmulator.Modules.Proto.BasicLPBFMachineParams subBuilder = new global::ModularEmulator.Modules.Proto.BasicLPBFMachineParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.BasicLPBFMachine) {
              subBuilder.MergeFrom(BasicLPBFMachine);
            }
            input.ReadMessage(subBuilder);
            BasicLPBFMachine = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::ModularEmulator.Modules.Proto.OPCUAIdentification();
            }
            input.ReadMessage(Id);
            break;
          }
          case 82: {
            global::ModularEmulator.Modules.Proto.ScanlabScannerParams subBuilder = new global::ModularEmulator.Modules.Proto.ScanlabScannerParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.ScanlabScanner) {
              subBuilder.MergeFrom(ScanlabScanner);
            }
            input.ReadMessage(subBuilder);
            ScanlabScanner = subBuilder;
            break;
          }
          case 90: {
            global::ModularEmulator.Modules.Proto.LaserParams subBuilder = new global::ModularEmulator.Modules.Proto.LaserParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.Laser) {
              subBuilder.MergeFrom(Laser);
            }
            input.ReadMessage(subBuilder);
            Laser = subBuilder;
            break;
          }
          case 98: {
            global::ModularEmulator.Modules.Proto.StandardCoaterParams subBuilder = new global::ModularEmulator.Modules.Proto.StandardCoaterParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.StandardCoater) {
              subBuilder.MergeFrom(StandardCoater);
            }
            input.ReadMessage(subBuilder);
            StandardCoater = subBuilder;
            break;
          }
          case 122: {
            global::ModularEmulator.Modules.Proto.BuildChamberParams subBuilder = new global::ModularEmulator.Modules.Proto.BuildChamberParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.BuildChamber) {
              subBuilder.MergeFrom(BuildChamber);
            }
            input.ReadMessage(subBuilder);
            BuildChamber = subBuilder;
            break;
          }
          case 130: {
            global::ModularEmulator.Modules.Proto.CuboidBuildVolumeParams subBuilder = new global::ModularEmulator.Modules.Proto.CuboidBuildVolumeParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.CuboidBuildVolume) {
              subBuilder.MergeFrom(CuboidBuildVolume);
            }
            input.ReadMessage(subBuilder);
            CuboidBuildVolume = subBuilder;
            break;
          }
          case 138: {
            global::ModularEmulator.Modules.Proto.ZylinderBuildVolumeParams subBuilder = new global::ModularEmulator.Modules.Proto.ZylinderBuildVolumeParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.ZylinderBuildVolume) {
              subBuilder.MergeFrom(ZylinderBuildVolume);
            }
            input.ReadMessage(subBuilder);
            ZylinderBuildVolume = subBuilder;
            break;
          }
          case 154: {
            global::ModularEmulator.Modules.Proto.PreheaterParams subBuilder = new global::ModularEmulator.Modules.Proto.PreheaterParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.Preheater) {
              subBuilder.MergeFrom(Preheater);
            }
            input.ReadMessage(subBuilder);
            Preheater = subBuilder;
            break;
          }
          case 250: {
            global::ModularEmulator.Modules.Proto.NovantaScannerParams subBuilder = new global::ModularEmulator.Modules.Proto.NovantaScannerParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.NovantaScanner) {
              subBuilder.MergeFrom(NovantaScanner);
            }
            input.ReadMessage(subBuilder);
            NovantaScanner = subBuilder;
            break;
          }
          case 802: {
            global::ModularEmulator.Modules.Proto.BasicLPBFMachineParams subBuilder = new global::ModularEmulator.Modules.Proto.BasicLPBFMachineParams();
            if (typeAndParametersCase_ == TypeAndParametersOneofCase.BasicLPBFMachine) {
              subBuilder.MergeFrom(BasicLPBFMachine);
            }
            input.ReadMessage(subBuilder);
            BasicLPBFMachine = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BasicLPBFMachineParams : pb::IMessage<BasicLPBFMachineParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BasicLPBFMachineParams> _parser = new pb::MessageParser<BasicLPBFMachineParams>(() => new BasicLPBFMachineParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BasicLPBFMachineParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BasicLPBFMachineParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BasicLPBFMachineParams(BasicLPBFMachineParams other) : this() {
      numberOfLaserScannerUnits_ = other.numberOfLaserScannerUnits_;
      scanFields_ = other.scanFields_.Clone();
      minLayerHeightUM_ = other.minLayerHeightUM_;
      minZDistMm_ = other.minZDistMm_;
      minimalHatchLength_ = other.minimalHatchLength_;
      forcedMinimumExposureTimeInS_ = other.forcedMinimumExposureTimeInS_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BasicLPBFMachineParams Clone() {
      return new BasicLPBFMachineParams(this);
    }

    /// <summary>Field number for the "numberOfLaserScannerUnits" field.</summary>
    public const int NumberOfLaserScannerUnitsFieldNumber = 1;
    private int numberOfLaserScannerUnits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumberOfLaserScannerUnits {
      get { return numberOfLaserScannerUnits_; }
      set {
        numberOfLaserScannerUnits_ = value;
      }
    }

    /// <summary>Field number for the "scanFields" field.</summary>
    public const int ScanFieldsFieldNumber = 20;
    private static readonly pb::FieldCodec<global::ModularEmulator.Modules.Proto.ScanField> _repeated_scanFields_codec
        = pb::FieldCodec.ForMessage(162, global::ModularEmulator.Modules.Proto.ScanField.Parser);
    private readonly pbc::RepeatedField<global::ModularEmulator.Modules.Proto.ScanField> scanFields_ = new pbc::RepeatedField<global::ModularEmulator.Modules.Proto.ScanField>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ModularEmulator.Modules.Proto.ScanField> ScanFields {
      get { return scanFields_; }
    }

    /// <summary>Field number for the "MinLayerHeightUM" field.</summary>
    public const int MinLayerHeightUMFieldNumber = 10;
    private double minLayerHeightUM_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinLayerHeightUM {
      get { return minLayerHeightUM_; }
      set {
        minLayerHeightUM_ = value;
      }
    }

    /// <summary>Field number for the "MinZDistMm" field.</summary>
    public const int MinZDistMmFieldNumber = 11;
    private double minZDistMm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinZDistMm {
      get { return minZDistMm_; }
      set {
        minZDistMm_ = value;
      }
    }

    /// <summary>Field number for the "MinimalHatchLength" field.</summary>
    public const int MinimalHatchLengthFieldNumber = 12;
    private double minimalHatchLength_;
    /// <summary>
    ///minimum hatch length used in the scan field allocation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinimalHatchLength {
      get { return minimalHatchLength_; }
      set {
        minimalHatchLength_ = value;
      }
    }

    /// <summary>Field number for the "ForcedMinimumExposureTimeInS" field.</summary>
    public const int ForcedMinimumExposureTimeInSFieldNumber = 13;
    private double forcedMinimumExposureTimeInS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ForcedMinimumExposureTimeInS {
      get { return forcedMinimumExposureTimeInS_; }
      set {
        forcedMinimumExposureTimeInS_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BasicLPBFMachineParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BasicLPBFMachineParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NumberOfLaserScannerUnits != other.NumberOfLaserScannerUnits) return false;
      if(!scanFields_.Equals(other.scanFields_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinLayerHeightUM, other.MinLayerHeightUM)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinZDistMm, other.MinZDistMm)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinimalHatchLength, other.MinimalHatchLength)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ForcedMinimumExposureTimeInS, other.ForcedMinimumExposureTimeInS)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NumberOfLaserScannerUnits != 0) hash ^= NumberOfLaserScannerUnits.GetHashCode();
      hash ^= scanFields_.GetHashCode();
      if (MinLayerHeightUM != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinLayerHeightUM);
      if (MinZDistMm != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinZDistMm);
      if (MinimalHatchLength != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinimalHatchLength);
      if (ForcedMinimumExposureTimeInS != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ForcedMinimumExposureTimeInS);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NumberOfLaserScannerUnits != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NumberOfLaserScannerUnits);
      }
      if (MinLayerHeightUM != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(MinLayerHeightUM);
      }
      if (MinZDistMm != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(MinZDistMm);
      }
      if (MinimalHatchLength != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(MinimalHatchLength);
      }
      if (ForcedMinimumExposureTimeInS != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(ForcedMinimumExposureTimeInS);
      }
      scanFields_.WriteTo(output, _repeated_scanFields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NumberOfLaserScannerUnits != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NumberOfLaserScannerUnits);
      }
      if (MinLayerHeightUM != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(MinLayerHeightUM);
      }
      if (MinZDistMm != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(MinZDistMm);
      }
      if (MinimalHatchLength != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(MinimalHatchLength);
      }
      if (ForcedMinimumExposureTimeInS != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(ForcedMinimumExposureTimeInS);
      }
      scanFields_.WriteTo(ref output, _repeated_scanFields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NumberOfLaserScannerUnits != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfLaserScannerUnits);
      }
      size += scanFields_.CalculateSize(_repeated_scanFields_codec);
      if (MinLayerHeightUM != 0D) {
        size += 1 + 8;
      }
      if (MinZDistMm != 0D) {
        size += 1 + 8;
      }
      if (MinimalHatchLength != 0D) {
        size += 1 + 8;
      }
      if (ForcedMinimumExposureTimeInS != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BasicLPBFMachineParams other) {
      if (other == null) {
        return;
      }
      if (other.NumberOfLaserScannerUnits != 0) {
        NumberOfLaserScannerUnits = other.NumberOfLaserScannerUnits;
      }
      scanFields_.Add(other.scanFields_);
      if (other.MinLayerHeightUM != 0D) {
        MinLayerHeightUM = other.MinLayerHeightUM;
      }
      if (other.MinZDistMm != 0D) {
        MinZDistMm = other.MinZDistMm;
      }
      if (other.MinimalHatchLength != 0D) {
        MinimalHatchLength = other.MinimalHatchLength;
      }
      if (other.ForcedMinimumExposureTimeInS != 0D) {
        ForcedMinimumExposureTimeInS = other.ForcedMinimumExposureTimeInS;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NumberOfLaserScannerUnits = input.ReadInt32();
            break;
          }
          case 81: {
            MinLayerHeightUM = input.ReadDouble();
            break;
          }
          case 89: {
            MinZDistMm = input.ReadDouble();
            break;
          }
          case 97: {
            MinimalHatchLength = input.ReadDouble();
            break;
          }
          case 105: {
            ForcedMinimumExposureTimeInS = input.ReadDouble();
            break;
          }
          case 162: {
            scanFields_.AddEntriesFrom(input, _repeated_scanFields_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NumberOfLaserScannerUnits = input.ReadInt32();
            break;
          }
          case 81: {
            MinLayerHeightUM = input.ReadDouble();
            break;
          }
          case 89: {
            MinZDistMm = input.ReadDouble();
            break;
          }
          case 97: {
            MinimalHatchLength = input.ReadDouble();
            break;
          }
          case 105: {
            ForcedMinimumExposureTimeInS = input.ReadDouble();
            break;
          }
          case 162: {
            scanFields_.AddEntriesFrom(ref input, _repeated_scanFields_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ServiceInterface : pb::IMessage<ServiceInterface>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServiceInterface> _parser = new pb::MessageParser<ServiceInterface>(() => new ServiceInterface());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServiceInterface> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceInterface() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceInterface(ServiceInterface other) : this() {
      consumedService_ = other.consumedService_;
      implementingModule_ = other.implementingModule_ != null ? other.implementingModule_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceInterface Clone() {
      return new ServiceInterface(this);
    }

    /// <summary>Field number for the "consumedService" field.</summary>
    public const int ConsumedServiceFieldNumber = 1;
    private global::ModularEmulator.Modules.Proto.Service consumedService_ = global::ModularEmulator.Modules.Proto.Service.Laserdeflector;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.Service ConsumedService {
      get { return consumedService_; }
      set {
        consumedService_ = value;
      }
    }

    /// <summary>Field number for the "implementingModule" field.</summary>
    public const int ImplementingModuleFieldNumber = 2;
    private global::ModularEmulator.Modules.Proto.OPCUAIdentification implementingModule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.OPCUAIdentification ImplementingModule {
      get { return implementingModule_; }
      set {
        implementingModule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServiceInterface);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServiceInterface other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsumedService != other.ConsumedService) return false;
      if (!object.Equals(ImplementingModule, other.ImplementingModule)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsumedService != global::ModularEmulator.Modules.Proto.Service.Laserdeflector) hash ^= ConsumedService.GetHashCode();
      if (implementingModule_ != null) hash ^= ImplementingModule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ConsumedService != global::ModularEmulator.Modules.Proto.Service.Laserdeflector) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ConsumedService);
      }
      if (implementingModule_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ImplementingModule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ConsumedService != global::ModularEmulator.Modules.Proto.Service.Laserdeflector) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ConsumedService);
      }
      if (implementingModule_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ImplementingModule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ConsumedService != global::ModularEmulator.Modules.Proto.Service.Laserdeflector) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ConsumedService);
      }
      if (implementingModule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImplementingModule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServiceInterface other) {
      if (other == null) {
        return;
      }
      if (other.ConsumedService != global::ModularEmulator.Modules.Proto.Service.Laserdeflector) {
        ConsumedService = other.ConsumedService;
      }
      if (other.implementingModule_ != null) {
        if (implementingModule_ == null) {
          ImplementingModule = new global::ModularEmulator.Modules.Proto.OPCUAIdentification();
        }
        ImplementingModule.MergeFrom(other.ImplementingModule);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConsumedService = (global::ModularEmulator.Modules.Proto.Service) input.ReadEnum();
            break;
          }
          case 18: {
            if (implementingModule_ == null) {
              ImplementingModule = new global::ModularEmulator.Modules.Proto.OPCUAIdentification();
            }
            input.ReadMessage(ImplementingModule);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ConsumedService = (global::ModularEmulator.Modules.Proto.Service) input.ReadEnum();
            break;
          }
          case 18: {
            if (implementingModule_ == null) {
              ImplementingModule = new global::ModularEmulator.Modules.Proto.OPCUAIdentification();
            }
            input.ReadMessage(ImplementingModule);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BasicScannerParams : pb::IMessage<BasicScannerParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BasicScannerParams> _parser = new pb::MessageParser<BasicScannerParams>(() => new BasicScannerParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BasicScannerParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BasicScannerParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BasicScannerParams(BasicScannerParams other) : this() {
      jumpSpeedInMmS_ = other.jumpSpeedInMmS_;
      markSpeedInMmS_ = other.markSpeedInMmS_;
      laserFocusShiftInMm_ = other.laserFocusShiftInMm_;
      maxAccelerationInMmPerSS_ = other.maxAccelerationInMmPerSS_;
      staticDelayInS_ = other.staticDelayInS_;
      jumpDelayInUs_ = other.jumpDelayInUs_;
      markDelayInUs_ = other.markDelayInUs_;
      laserOffDelayInUs_ = other.laserOffDelayInUs_;
      laserOnDelayInUs_ = other.laserOnDelayInUs_;
      polygonDelayInUs_ = other.polygonDelayInUs_;
      vectorBlockDelay_ = other.vectorBlockDelay_;
      paramChangeDelay_ = other.paramChangeDelay_;
      warpJumpLengthLimit_ = other.warpJumpLengthLimit_;
      jumpMode_ = other.jumpMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BasicScannerParams Clone() {
      return new BasicScannerParams(this);
    }

    /// <summary>Field number for the "jumpSpeedInMmS" field.</summary>
    public const int JumpSpeedInMmSFieldNumber = 1;
    private double jumpSpeedInMmS_;
    /// <summary>
    ///the setpoint speed for jump movements
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double JumpSpeedInMmS {
      get { return jumpSpeedInMmS_; }
      set {
        jumpSpeedInMmS_ = value;
      }
    }

    /// <summary>Field number for the "markSpeedInMmS" field.</summary>
    public const int MarkSpeedInMmSFieldNumber = 2;
    private double markSpeedInMmS_;
    /// <summary>
    ///the setpoint speed for mark movements
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MarkSpeedInMmS {
      get { return markSpeedInMmS_; }
      set {
        markSpeedInMmS_ = value;
      }
    }

    /// <summary>Field number for the "laserFocusShiftInMm" field.</summary>
    public const int LaserFocusShiftInMmFieldNumber = 3;
    private double laserFocusShiftInMm_;
    /// <summary>
    ///the setpoint focus shift of the laser beam
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LaserFocusShiftInMm {
      get { return laserFocusShiftInMm_; }
      set {
        laserFocusShiftInMm_ = value;
      }
    }

    /// <summary>Field number for the "maxAccelerationInMmPerSS" field.</summary>
    public const int MaxAccelerationInMmPerSSFieldNumber = 4;
    private double maxAccelerationInMmPerSS_;
    /// <summary>
    ///the maximum acceleration of the laser spot in scan filed coordinates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxAccelerationInMmPerSS {
      get { return maxAccelerationInMmPerSS_; }
      set {
        maxAccelerationInMmPerSS_ = value;
      }
    }

    /// <summary>Field number for the "staticDelayInS" field.</summary>
    public const int StaticDelayInSFieldNumber = 5;
    private double staticDelayInS_;
    /// <summary>
    ///static delay for hardware initialize etc. before mark start
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double StaticDelayInS {
      get { return staticDelayInS_; }
      set {
        staticDelayInS_ = value;
      }
    }

    /// <summary>Field number for the "jumpDelayInUs" field.</summary>
    public const int JumpDelayInUsFieldNumber = 6;
    private double jumpDelayInUs_;
    /// <summary>
    ///delay applied after a jump movement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double JumpDelayInUs {
      get { return jumpDelayInUs_; }
      set {
        jumpDelayInUs_ = value;
      }
    }

    /// <summary>Field number for the "markDelayInUs" field.</summary>
    public const int MarkDelayInUsFieldNumber = 7;
    private double markDelayInUs_;
    /// <summary>
    ///delay applied after a mark movement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MarkDelayInUs {
      get { return markDelayInUs_; }
      set {
        markDelayInUs_ = value;
      }
    }

    /// <summary>Field number for the "laserOffDelayInUs" field.</summary>
    public const int LaserOffDelayInUsFieldNumber = 8;
    private double laserOffDelayInUs_;
    /// <summary>
    ///delay relative to movement setpoint applied to laser turn off edge
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LaserOffDelayInUs {
      get { return laserOffDelayInUs_; }
      set {
        laserOffDelayInUs_ = value;
      }
    }

    /// <summary>Field number for the "laserOnDelayInUs" field.</summary>
    public const int LaserOnDelayInUsFieldNumber = 9;
    private double laserOnDelayInUs_;
    /// <summary>
    ///delay relative to movement setpoint applied to laser turn on edge
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LaserOnDelayInUs {
      get { return laserOnDelayInUs_; }
      set {
        laserOnDelayInUs_ = value;
      }
    }

    /// <summary>Field number for the "polygonDelayInUs" field.</summary>
    public const int PolygonDelayInUsFieldNumber = 10;
    private double polygonDelayInUs_;
    /// <summary>
    ///delay applied at a polygon vertex. Might be scaled based on angle between vectors and delay modes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PolygonDelayInUs {
      get { return polygonDelayInUs_; }
      set {
        polygonDelayInUs_ = value;
      }
    }

    /// <summary>Field number for the "VectorBlockDelay" field.</summary>
    public const int VectorBlockDelayFieldNumber = 11;
    private double vectorBlockDelay_;
    /// <summary>
    ///static delay applied before a vector block is executed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double VectorBlockDelay {
      get { return vectorBlockDelay_; }
      set {
        vectorBlockDelay_ = value;
      }
    }

    /// <summary>Field number for the "ParamChangeDelay" field.</summary>
    public const int ParamChangeDelayFieldNumber = 12;
    private double paramChangeDelay_;
    /// <summary>
    ///static delay applied when switching to a vector block with a different parameter set
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ParamChangeDelay {
      get { return paramChangeDelay_; }
      set {
        paramChangeDelay_ = value;
      }
    }

    /// <summary>Field number for the "WarpJumpLengthLimit" field.</summary>
    public const int WarpJumpLengthLimitFieldNumber = 13;
    private double warpJumpLengthLimit_;
    /// <summary>
    ///jump vector length limit for "instantaneous" jump execution e.g. by DOE actuator
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double WarpJumpLengthLimit {
      get { return warpJumpLengthLimit_; }
      set {
        warpJumpLengthLimit_ = value;
      }
    }

    /// <summary>Field number for the "jumpMode" field.</summary>
    public const int JumpModeFieldNumber = 14;
    private global::ModularEmulator.Modules.Proto.BasicScannerParams.Types.JumpMode jumpMode_ = global::ModularEmulator.Modules.Proto.BasicScannerParams.Types.JumpMode.Static;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.BasicScannerParams.Types.JumpMode JumpMode {
      get { return jumpMode_; }
      set {
        jumpMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BasicScannerParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BasicScannerParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(JumpSpeedInMmS, other.JumpSpeedInMmS)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MarkSpeedInMmS, other.MarkSpeedInMmS)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LaserFocusShiftInMm, other.LaserFocusShiftInMm)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxAccelerationInMmPerSS, other.MaxAccelerationInMmPerSS)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StaticDelayInS, other.StaticDelayInS)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(JumpDelayInUs, other.JumpDelayInUs)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MarkDelayInUs, other.MarkDelayInUs)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LaserOffDelayInUs, other.LaserOffDelayInUs)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LaserOnDelayInUs, other.LaserOnDelayInUs)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PolygonDelayInUs, other.PolygonDelayInUs)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(VectorBlockDelay, other.VectorBlockDelay)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ParamChangeDelay, other.ParamChangeDelay)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WarpJumpLengthLimit, other.WarpJumpLengthLimit)) return false;
      if (JumpMode != other.JumpMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (JumpSpeedInMmS != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(JumpSpeedInMmS);
      if (MarkSpeedInMmS != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MarkSpeedInMmS);
      if (LaserFocusShiftInMm != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LaserFocusShiftInMm);
      if (MaxAccelerationInMmPerSS != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxAccelerationInMmPerSS);
      if (StaticDelayInS != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StaticDelayInS);
      if (JumpDelayInUs != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(JumpDelayInUs);
      if (MarkDelayInUs != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MarkDelayInUs);
      if (LaserOffDelayInUs != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LaserOffDelayInUs);
      if (LaserOnDelayInUs != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LaserOnDelayInUs);
      if (PolygonDelayInUs != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PolygonDelayInUs);
      if (VectorBlockDelay != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(VectorBlockDelay);
      if (ParamChangeDelay != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ParamChangeDelay);
      if (WarpJumpLengthLimit != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WarpJumpLengthLimit);
      if (JumpMode != global::ModularEmulator.Modules.Proto.BasicScannerParams.Types.JumpMode.Static) hash ^= JumpMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (JumpSpeedInMmS != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(JumpSpeedInMmS);
      }
      if (MarkSpeedInMmS != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(MarkSpeedInMmS);
      }
      if (LaserFocusShiftInMm != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(LaserFocusShiftInMm);
      }
      if (MaxAccelerationInMmPerSS != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MaxAccelerationInMmPerSS);
      }
      if (StaticDelayInS != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(StaticDelayInS);
      }
      if (JumpDelayInUs != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(JumpDelayInUs);
      }
      if (MarkDelayInUs != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(MarkDelayInUs);
      }
      if (LaserOffDelayInUs != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(LaserOffDelayInUs);
      }
      if (LaserOnDelayInUs != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(LaserOnDelayInUs);
      }
      if (PolygonDelayInUs != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(PolygonDelayInUs);
      }
      if (VectorBlockDelay != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(VectorBlockDelay);
      }
      if (ParamChangeDelay != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(ParamChangeDelay);
      }
      if (WarpJumpLengthLimit != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(WarpJumpLengthLimit);
      }
      if (JumpMode != global::ModularEmulator.Modules.Proto.BasicScannerParams.Types.JumpMode.Static) {
        output.WriteRawTag(112);
        output.WriteEnum((int) JumpMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (JumpSpeedInMmS != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(JumpSpeedInMmS);
      }
      if (MarkSpeedInMmS != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(MarkSpeedInMmS);
      }
      if (LaserFocusShiftInMm != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(LaserFocusShiftInMm);
      }
      if (MaxAccelerationInMmPerSS != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MaxAccelerationInMmPerSS);
      }
      if (StaticDelayInS != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(StaticDelayInS);
      }
      if (JumpDelayInUs != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(JumpDelayInUs);
      }
      if (MarkDelayInUs != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(MarkDelayInUs);
      }
      if (LaserOffDelayInUs != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(LaserOffDelayInUs);
      }
      if (LaserOnDelayInUs != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(LaserOnDelayInUs);
      }
      if (PolygonDelayInUs != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(PolygonDelayInUs);
      }
      if (VectorBlockDelay != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(VectorBlockDelay);
      }
      if (ParamChangeDelay != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(ParamChangeDelay);
      }
      if (WarpJumpLengthLimit != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(WarpJumpLengthLimit);
      }
      if (JumpMode != global::ModularEmulator.Modules.Proto.BasicScannerParams.Types.JumpMode.Static) {
        output.WriteRawTag(112);
        output.WriteEnum((int) JumpMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (JumpSpeedInMmS != 0D) {
        size += 1 + 8;
      }
      if (MarkSpeedInMmS != 0D) {
        size += 1 + 8;
      }
      if (LaserFocusShiftInMm != 0D) {
        size += 1 + 8;
      }
      if (MaxAccelerationInMmPerSS != 0D) {
        size += 1 + 8;
      }
      if (StaticDelayInS != 0D) {
        size += 1 + 8;
      }
      if (JumpDelayInUs != 0D) {
        size += 1 + 8;
      }
      if (MarkDelayInUs != 0D) {
        size += 1 + 8;
      }
      if (LaserOffDelayInUs != 0D) {
        size += 1 + 8;
      }
      if (LaserOnDelayInUs != 0D) {
        size += 1 + 8;
      }
      if (PolygonDelayInUs != 0D) {
        size += 1 + 8;
      }
      if (VectorBlockDelay != 0D) {
        size += 1 + 8;
      }
      if (ParamChangeDelay != 0D) {
        size += 1 + 8;
      }
      if (WarpJumpLengthLimit != 0D) {
        size += 1 + 8;
      }
      if (JumpMode != global::ModularEmulator.Modules.Proto.BasicScannerParams.Types.JumpMode.Static) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JumpMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BasicScannerParams other) {
      if (other == null) {
        return;
      }
      if (other.JumpSpeedInMmS != 0D) {
        JumpSpeedInMmS = other.JumpSpeedInMmS;
      }
      if (other.MarkSpeedInMmS != 0D) {
        MarkSpeedInMmS = other.MarkSpeedInMmS;
      }
      if (other.LaserFocusShiftInMm != 0D) {
        LaserFocusShiftInMm = other.LaserFocusShiftInMm;
      }
      if (other.MaxAccelerationInMmPerSS != 0D) {
        MaxAccelerationInMmPerSS = other.MaxAccelerationInMmPerSS;
      }
      if (other.StaticDelayInS != 0D) {
        StaticDelayInS = other.StaticDelayInS;
      }
      if (other.JumpDelayInUs != 0D) {
        JumpDelayInUs = other.JumpDelayInUs;
      }
      if (other.MarkDelayInUs != 0D) {
        MarkDelayInUs = other.MarkDelayInUs;
      }
      if (other.LaserOffDelayInUs != 0D) {
        LaserOffDelayInUs = other.LaserOffDelayInUs;
      }
      if (other.LaserOnDelayInUs != 0D) {
        LaserOnDelayInUs = other.LaserOnDelayInUs;
      }
      if (other.PolygonDelayInUs != 0D) {
        PolygonDelayInUs = other.PolygonDelayInUs;
      }
      if (other.VectorBlockDelay != 0D) {
        VectorBlockDelay = other.VectorBlockDelay;
      }
      if (other.ParamChangeDelay != 0D) {
        ParamChangeDelay = other.ParamChangeDelay;
      }
      if (other.WarpJumpLengthLimit != 0D) {
        WarpJumpLengthLimit = other.WarpJumpLengthLimit;
      }
      if (other.JumpMode != global::ModularEmulator.Modules.Proto.BasicScannerParams.Types.JumpMode.Static) {
        JumpMode = other.JumpMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            JumpSpeedInMmS = input.ReadDouble();
            break;
          }
          case 17: {
            MarkSpeedInMmS = input.ReadDouble();
            break;
          }
          case 25: {
            LaserFocusShiftInMm = input.ReadDouble();
            break;
          }
          case 33: {
            MaxAccelerationInMmPerSS = input.ReadDouble();
            break;
          }
          case 41: {
            StaticDelayInS = input.ReadDouble();
            break;
          }
          case 49: {
            JumpDelayInUs = input.ReadDouble();
            break;
          }
          case 57: {
            MarkDelayInUs = input.ReadDouble();
            break;
          }
          case 65: {
            LaserOffDelayInUs = input.ReadDouble();
            break;
          }
          case 73: {
            LaserOnDelayInUs = input.ReadDouble();
            break;
          }
          case 81: {
            PolygonDelayInUs = input.ReadDouble();
            break;
          }
          case 89: {
            VectorBlockDelay = input.ReadDouble();
            break;
          }
          case 97: {
            ParamChangeDelay = input.ReadDouble();
            break;
          }
          case 105: {
            WarpJumpLengthLimit = input.ReadDouble();
            break;
          }
          case 112: {
            JumpMode = (global::ModularEmulator.Modules.Proto.BasicScannerParams.Types.JumpMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            JumpSpeedInMmS = input.ReadDouble();
            break;
          }
          case 17: {
            MarkSpeedInMmS = input.ReadDouble();
            break;
          }
          case 25: {
            LaserFocusShiftInMm = input.ReadDouble();
            break;
          }
          case 33: {
            MaxAccelerationInMmPerSS = input.ReadDouble();
            break;
          }
          case 41: {
            StaticDelayInS = input.ReadDouble();
            break;
          }
          case 49: {
            JumpDelayInUs = input.ReadDouble();
            break;
          }
          case 57: {
            MarkDelayInUs = input.ReadDouble();
            break;
          }
          case 65: {
            LaserOffDelayInUs = input.ReadDouble();
            break;
          }
          case 73: {
            LaserOnDelayInUs = input.ReadDouble();
            break;
          }
          case 81: {
            PolygonDelayInUs = input.ReadDouble();
            break;
          }
          case 89: {
            VectorBlockDelay = input.ReadDouble();
            break;
          }
          case 97: {
            ParamChangeDelay = input.ReadDouble();
            break;
          }
          case 105: {
            WarpJumpLengthLimit = input.ReadDouble();
            break;
          }
          case 112: {
            JumpMode = (global::ModularEmulator.Modules.Proto.BasicScannerParams.Types.JumpMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BasicScannerParams message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum JumpMode {
        /// <summary>
        ///change to jump speed is instantanious (no control loop)
        /// </summary>
        [pbr::OriginalName("STATIC")] Static = 0,
        /// <summary>
        ///change to jump speed is an accelerated movement based on maxAccelerationInMmPerSS
        /// </summary>
        [pbr::OriginalName("ACCELERATED")] Accelerated = 1,
      }

    }
    #endregion

  }

  public sealed partial class CommonSkyWritingParams : pb::IMessage<CommonSkyWritingParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommonSkyWritingParams> _parser = new pb::MessageParser<CommonSkyWritingParams>(() => new CommonSkyWritingParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CommonSkyWritingParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommonSkyWritingParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommonSkyWritingParams(CommonSkyWritingParams other) : this() {
      nPrevInTenUsTicks_ = other.nPrevInTenUsTicks_;
      nPostInTenUsTicks_ = other.nPostInTenUsTicks_;
      limitAngle_ = other.limitAngle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommonSkyWritingParams Clone() {
      return new CommonSkyWritingParams(this);
    }

    /// <summary>Field number for the "NPrevInTenUsTicks" field.</summary>
    public const int NPrevInTenUsTicksFieldNumber = 1;
    private double nPrevInTenUsTicks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double NPrevInTenUsTicks {
      get { return nPrevInTenUsTicks_; }
      set {
        nPrevInTenUsTicks_ = value;
      }
    }

    /// <summary>Field number for the "NPostInTenUsTicks" field.</summary>
    public const int NPostInTenUsTicksFieldNumber = 2;
    private double nPostInTenUsTicks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double NPostInTenUsTicks {
      get { return nPostInTenUsTicks_; }
      set {
        nPostInTenUsTicks_ = value;
      }
    }

    /// <summary>Field number for the "limitAngle" field.</summary>
    public const int LimitAngleFieldNumber = 3;
    private double limitAngle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LimitAngle {
      get { return limitAngle_; }
      set {
        limitAngle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CommonSkyWritingParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CommonSkyWritingParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NPrevInTenUsTicks, other.NPrevInTenUsTicks)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(NPostInTenUsTicks, other.NPostInTenUsTicks)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LimitAngle, other.LimitAngle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NPrevInTenUsTicks != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NPrevInTenUsTicks);
      if (NPostInTenUsTicks != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(NPostInTenUsTicks);
      if (LimitAngle != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LimitAngle);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NPrevInTenUsTicks != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(NPrevInTenUsTicks);
      }
      if (NPostInTenUsTicks != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(NPostInTenUsTicks);
      }
      if (LimitAngle != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(LimitAngle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NPrevInTenUsTicks != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(NPrevInTenUsTicks);
      }
      if (NPostInTenUsTicks != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(NPostInTenUsTicks);
      }
      if (LimitAngle != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(LimitAngle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NPrevInTenUsTicks != 0D) {
        size += 1 + 8;
      }
      if (NPostInTenUsTicks != 0D) {
        size += 1 + 8;
      }
      if (LimitAngle != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CommonSkyWritingParams other) {
      if (other == null) {
        return;
      }
      if (other.NPrevInTenUsTicks != 0D) {
        NPrevInTenUsTicks = other.NPrevInTenUsTicks;
      }
      if (other.NPostInTenUsTicks != 0D) {
        NPostInTenUsTicks = other.NPostInTenUsTicks;
      }
      if (other.LimitAngle != 0D) {
        LimitAngle = other.LimitAngle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            NPrevInTenUsTicks = input.ReadDouble();
            break;
          }
          case 17: {
            NPostInTenUsTicks = input.ReadDouble();
            break;
          }
          case 25: {
            LimitAngle = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            NPrevInTenUsTicks = input.ReadDouble();
            break;
          }
          case 17: {
            NPostInTenUsTicks = input.ReadDouble();
            break;
          }
          case 25: {
            LimitAngle = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CoordinateTransformParams : pb::IMessage<CoordinateTransformParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CoordinateTransformParams> _parser = new pb::MessageParser<CoordinateTransformParams>(() => new CoordinateTransformParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CoordinateTransformParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoordinateTransformParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoordinateTransformParams(CoordinateTransformParams other) : this() {
      deleteZeroLengthJumps_ = other.deleteZeroLengthJumps_;
      minimalJumpLength_ = other.minimalJumpLength_;
      minimalMarkLength_ = other.minimalMarkLength_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoordinateTransformParams Clone() {
      return new CoordinateTransformParams(this);
    }

    /// <summary>Field number for the "DeleteZeroLengthJumps" field.</summary>
    public const int DeleteZeroLengthJumpsFieldNumber = 1;
    private bool deleteZeroLengthJumps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DeleteZeroLengthJumps {
      get { return deleteZeroLengthJumps_; }
      set {
        deleteZeroLengthJumps_ = value;
      }
    }

    /// <summary>Field number for the "MinimalJumpLength" field.</summary>
    public const int MinimalJumpLengthFieldNumber = 2;
    private double minimalJumpLength_;
    /// <summary>
    ///minimum jump vector length to be executed by the emulator
    ///jump vectors shorter than MinimalVectorLength get removed if DeleteZeroLengthJumps is true
    ///the number of jumps caused by vectors shorter is counted in zeroLengthJumps
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinimalJumpLength {
      get { return minimalJumpLength_; }
      set {
        minimalJumpLength_ = value;
      }
    }

    /// <summary>Field number for the "MinimalMarkLength" field.</summary>
    public const int MinimalMarkLengthFieldNumber = 3;
    private double minimalMarkLength_;
    /// <summary>
    ///minimum mark vector length to be executed by the emulator
    ///mark vectors shorter than MinimalVectorLength get removed
    ///the internal settable minimum is 10^-5 and short marks always get removed to avoid NAN mark directions
    ///the number of marks caused by vectors shorter is counted in zeroLengthMarks
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinimalMarkLength {
      get { return minimalMarkLength_; }
      set {
        minimalMarkLength_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CoordinateTransformParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CoordinateTransformParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeleteZeroLengthJumps != other.DeleteZeroLengthJumps) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinimalJumpLength, other.MinimalJumpLength)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinimalMarkLength, other.MinimalMarkLength)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DeleteZeroLengthJumps != false) hash ^= DeleteZeroLengthJumps.GetHashCode();
      if (MinimalJumpLength != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinimalJumpLength);
      if (MinimalMarkLength != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinimalMarkLength);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeleteZeroLengthJumps != false) {
        output.WriteRawTag(8);
        output.WriteBool(DeleteZeroLengthJumps);
      }
      if (MinimalJumpLength != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(MinimalJumpLength);
      }
      if (MinimalMarkLength != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(MinimalMarkLength);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeleteZeroLengthJumps != false) {
        output.WriteRawTag(8);
        output.WriteBool(DeleteZeroLengthJumps);
      }
      if (MinimalJumpLength != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(MinimalJumpLength);
      }
      if (MinimalMarkLength != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(MinimalMarkLength);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DeleteZeroLengthJumps != false) {
        size += 1 + 1;
      }
      if (MinimalJumpLength != 0D) {
        size += 1 + 8;
      }
      if (MinimalMarkLength != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CoordinateTransformParams other) {
      if (other == null) {
        return;
      }
      if (other.DeleteZeroLengthJumps != false) {
        DeleteZeroLengthJumps = other.DeleteZeroLengthJumps;
      }
      if (other.MinimalJumpLength != 0D) {
        MinimalJumpLength = other.MinimalJumpLength;
      }
      if (other.MinimalMarkLength != 0D) {
        MinimalMarkLength = other.MinimalMarkLength;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeleteZeroLengthJumps = input.ReadBool();
            break;
          }
          case 17: {
            MinimalJumpLength = input.ReadDouble();
            break;
          }
          case 25: {
            MinimalMarkLength = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DeleteZeroLengthJumps = input.ReadBool();
            break;
          }
          case 17: {
            MinimalJumpLength = input.ReadDouble();
            break;
          }
          case 25: {
            MinimalMarkLength = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NovantaScannerParams : pb::IMessage<NovantaScannerParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NovantaScannerParams> _parser = new pb::MessageParser<NovantaScannerParams>(() => new NovantaScannerParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NovantaScannerParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NovantaScannerParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NovantaScannerParams(NovantaScannerParams other) : this() {
      basicScannerParams_ = other.basicScannerParams_ != null ? other.basicScannerParams_.Clone() : null;
      skyWritingParams_ = other.skyWritingParams_ != null ? other.skyWritingParams_.Clone() : null;
      coordTransformParams_ = other.coordTransformParams_ != null ? other.coordTransformParams_.Clone() : null;
      skyWritingMode_ = other.skyWritingMode_;
      delayMode_ = other.delayMode_;
      radialErrorInUm_ = other.radialErrorInUm_;
      safetyFactorFlyByLow_ = other.safetyFactorFlyByLow_;
      safetyFactorFlyByHigh_ = other.safetyFactorFlyByHigh_;
      safetyFactorRadialErrorLimit_ = other.safetyFactorRadialErrorLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NovantaScannerParams Clone() {
      return new NovantaScannerParams(this);
    }

    /// <summary>Field number for the "basicScannerParams" field.</summary>
    public const int BasicScannerParamsFieldNumber = 1;
    private global::ModularEmulator.Modules.Proto.BasicScannerParams basicScannerParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.BasicScannerParams BasicScannerParams {
      get { return basicScannerParams_; }
      set {
        basicScannerParams_ = value;
      }
    }

    /// <summary>Field number for the "skyWritingParams" field.</summary>
    public const int SkyWritingParamsFieldNumber = 2;
    private global::ModularEmulator.Modules.Proto.CommonSkyWritingParams skyWritingParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.CommonSkyWritingParams SkyWritingParams {
      get { return skyWritingParams_; }
      set {
        skyWritingParams_ = value;
      }
    }

    /// <summary>Field number for the "coordTransformParams" field.</summary>
    public const int CoordTransformParamsFieldNumber = 3;
    private global::ModularEmulator.Modules.Proto.CoordinateTransformParams coordTransformParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.CoordinateTransformParams CoordTransformParams {
      get { return coordTransformParams_; }
      set {
        coordTransformParams_ = value;
      }
    }

    /// <summary>Field number for the "skyWritingMode" field.</summary>
    public const int SkyWritingModeFieldNumber = 4;
    private global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.SkyWritingMode skyWritingMode_ = global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.SkyWritingMode.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.SkyWritingMode SkyWritingMode {
      get { return skyWritingMode_; }
      set {
        skyWritingMode_ = value;
      }
    }

    /// <summary>Field number for the "delayMode" field.</summary>
    public const int DelayModeFieldNumber = 5;
    private global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.DelayMode delayMode_ = global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.DelayMode.ManualDelays;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.DelayMode DelayMode {
      get { return delayMode_; }
      set {
        delayMode_ = value;
      }
    }

    /// <summary>Field number for the "radialErrorInUm" field.</summary>
    public const int RadialErrorInUmFieldNumber = 6;
    private double radialErrorInUm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RadialErrorInUm {
      get { return radialErrorInUm_; }
      set {
        radialErrorInUm_ = value;
      }
    }

    /// <summary>Field number for the "SafetyFactorFlyByLow" field.</summary>
    public const int SafetyFactorFlyByLowFieldNumber = 7;
    private double safetyFactorFlyByLow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SafetyFactorFlyByLow {
      get { return safetyFactorFlyByLow_; }
      set {
        safetyFactorFlyByLow_ = value;
      }
    }

    /// <summary>Field number for the "SafetyFactorFlyByHigh" field.</summary>
    public const int SafetyFactorFlyByHighFieldNumber = 8;
    private double safetyFactorFlyByHigh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SafetyFactorFlyByHigh {
      get { return safetyFactorFlyByHigh_; }
      set {
        safetyFactorFlyByHigh_ = value;
      }
    }

    /// <summary>Field number for the "SafetyFactorRadialErrorLimit" field.</summary>
    public const int SafetyFactorRadialErrorLimitFieldNumber = 9;
    private double safetyFactorRadialErrorLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SafetyFactorRadialErrorLimit {
      get { return safetyFactorRadialErrorLimit_; }
      set {
        safetyFactorRadialErrorLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NovantaScannerParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NovantaScannerParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BasicScannerParams, other.BasicScannerParams)) return false;
      if (!object.Equals(SkyWritingParams, other.SkyWritingParams)) return false;
      if (!object.Equals(CoordTransformParams, other.CoordTransformParams)) return false;
      if (SkyWritingMode != other.SkyWritingMode) return false;
      if (DelayMode != other.DelayMode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RadialErrorInUm, other.RadialErrorInUm)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SafetyFactorFlyByLow, other.SafetyFactorFlyByLow)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SafetyFactorFlyByHigh, other.SafetyFactorFlyByHigh)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SafetyFactorRadialErrorLimit, other.SafetyFactorRadialErrorLimit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (basicScannerParams_ != null) hash ^= BasicScannerParams.GetHashCode();
      if (skyWritingParams_ != null) hash ^= SkyWritingParams.GetHashCode();
      if (coordTransformParams_ != null) hash ^= CoordTransformParams.GetHashCode();
      if (SkyWritingMode != global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.SkyWritingMode.None) hash ^= SkyWritingMode.GetHashCode();
      if (DelayMode != global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.DelayMode.ManualDelays) hash ^= DelayMode.GetHashCode();
      if (RadialErrorInUm != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RadialErrorInUm);
      if (SafetyFactorFlyByLow != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SafetyFactorFlyByLow);
      if (SafetyFactorFlyByHigh != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SafetyFactorFlyByHigh);
      if (SafetyFactorRadialErrorLimit != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SafetyFactorRadialErrorLimit);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (basicScannerParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicScannerParams);
      }
      if (skyWritingParams_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SkyWritingParams);
      }
      if (coordTransformParams_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CoordTransformParams);
      }
      if (SkyWritingMode != global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.SkyWritingMode.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) SkyWritingMode);
      }
      if (DelayMode != global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.DelayMode.ManualDelays) {
        output.WriteRawTag(40);
        output.WriteEnum((int) DelayMode);
      }
      if (RadialErrorInUm != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(RadialErrorInUm);
      }
      if (SafetyFactorFlyByLow != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(SafetyFactorFlyByLow);
      }
      if (SafetyFactorFlyByHigh != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(SafetyFactorFlyByHigh);
      }
      if (SafetyFactorRadialErrorLimit != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(SafetyFactorRadialErrorLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (basicScannerParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicScannerParams);
      }
      if (skyWritingParams_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SkyWritingParams);
      }
      if (coordTransformParams_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CoordTransformParams);
      }
      if (SkyWritingMode != global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.SkyWritingMode.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) SkyWritingMode);
      }
      if (DelayMode != global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.DelayMode.ManualDelays) {
        output.WriteRawTag(40);
        output.WriteEnum((int) DelayMode);
      }
      if (RadialErrorInUm != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(RadialErrorInUm);
      }
      if (SafetyFactorFlyByLow != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(SafetyFactorFlyByLow);
      }
      if (SafetyFactorFlyByHigh != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(SafetyFactorFlyByHigh);
      }
      if (SafetyFactorRadialErrorLimit != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(SafetyFactorRadialErrorLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (basicScannerParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicScannerParams);
      }
      if (skyWritingParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SkyWritingParams);
      }
      if (coordTransformParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CoordTransformParams);
      }
      if (SkyWritingMode != global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.SkyWritingMode.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SkyWritingMode);
      }
      if (DelayMode != global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.DelayMode.ManualDelays) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DelayMode);
      }
      if (RadialErrorInUm != 0D) {
        size += 1 + 8;
      }
      if (SafetyFactorFlyByLow != 0D) {
        size += 1 + 8;
      }
      if (SafetyFactorFlyByHigh != 0D) {
        size += 1 + 8;
      }
      if (SafetyFactorRadialErrorLimit != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NovantaScannerParams other) {
      if (other == null) {
        return;
      }
      if (other.basicScannerParams_ != null) {
        if (basicScannerParams_ == null) {
          BasicScannerParams = new global::ModularEmulator.Modules.Proto.BasicScannerParams();
        }
        BasicScannerParams.MergeFrom(other.BasicScannerParams);
      }
      if (other.skyWritingParams_ != null) {
        if (skyWritingParams_ == null) {
          SkyWritingParams = new global::ModularEmulator.Modules.Proto.CommonSkyWritingParams();
        }
        SkyWritingParams.MergeFrom(other.SkyWritingParams);
      }
      if (other.coordTransformParams_ != null) {
        if (coordTransformParams_ == null) {
          CoordTransformParams = new global::ModularEmulator.Modules.Proto.CoordinateTransformParams();
        }
        CoordTransformParams.MergeFrom(other.CoordTransformParams);
      }
      if (other.SkyWritingMode != global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.SkyWritingMode.None) {
        SkyWritingMode = other.SkyWritingMode;
      }
      if (other.DelayMode != global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.DelayMode.ManualDelays) {
        DelayMode = other.DelayMode;
      }
      if (other.RadialErrorInUm != 0D) {
        RadialErrorInUm = other.RadialErrorInUm;
      }
      if (other.SafetyFactorFlyByLow != 0D) {
        SafetyFactorFlyByLow = other.SafetyFactorFlyByLow;
      }
      if (other.SafetyFactorFlyByHigh != 0D) {
        SafetyFactorFlyByHigh = other.SafetyFactorFlyByHigh;
      }
      if (other.SafetyFactorRadialErrorLimit != 0D) {
        SafetyFactorRadialErrorLimit = other.SafetyFactorRadialErrorLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (basicScannerParams_ == null) {
              BasicScannerParams = new global::ModularEmulator.Modules.Proto.BasicScannerParams();
            }
            input.ReadMessage(BasicScannerParams);
            break;
          }
          case 18: {
            if (skyWritingParams_ == null) {
              SkyWritingParams = new global::ModularEmulator.Modules.Proto.CommonSkyWritingParams();
            }
            input.ReadMessage(SkyWritingParams);
            break;
          }
          case 26: {
            if (coordTransformParams_ == null) {
              CoordTransformParams = new global::ModularEmulator.Modules.Proto.CoordinateTransformParams();
            }
            input.ReadMessage(CoordTransformParams);
            break;
          }
          case 32: {
            SkyWritingMode = (global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.SkyWritingMode) input.ReadEnum();
            break;
          }
          case 40: {
            DelayMode = (global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.DelayMode) input.ReadEnum();
            break;
          }
          case 49: {
            RadialErrorInUm = input.ReadDouble();
            break;
          }
          case 57: {
            SafetyFactorFlyByLow = input.ReadDouble();
            break;
          }
          case 65: {
            SafetyFactorFlyByHigh = input.ReadDouble();
            break;
          }
          case 73: {
            SafetyFactorRadialErrorLimit = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (basicScannerParams_ == null) {
              BasicScannerParams = new global::ModularEmulator.Modules.Proto.BasicScannerParams();
            }
            input.ReadMessage(BasicScannerParams);
            break;
          }
          case 18: {
            if (skyWritingParams_ == null) {
              SkyWritingParams = new global::ModularEmulator.Modules.Proto.CommonSkyWritingParams();
            }
            input.ReadMessage(SkyWritingParams);
            break;
          }
          case 26: {
            if (coordTransformParams_ == null) {
              CoordTransformParams = new global::ModularEmulator.Modules.Proto.CoordinateTransformParams();
            }
            input.ReadMessage(CoordTransformParams);
            break;
          }
          case 32: {
            SkyWritingMode = (global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.SkyWritingMode) input.ReadEnum();
            break;
          }
          case 40: {
            DelayMode = (global::ModularEmulator.Modules.Proto.NovantaScannerParams.Types.DelayMode) input.ReadEnum();
            break;
          }
          case 49: {
            RadialErrorInUm = input.ReadDouble();
            break;
          }
          case 57: {
            SafetyFactorFlyByLow = input.ReadDouble();
            break;
          }
          case 65: {
            SafetyFactorFlyByHigh = input.ReadDouble();
            break;
          }
          case 73: {
            SafetyFactorRadialErrorLimit = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the NovantaScannerParams message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum SkyWritingMode {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("MODE3")] Mode3 = 1,
        [pbr::OriginalName("SCAN_PACK")] ScanPack = 2,
      }

      public enum DelayMode {
        /// <summary>
        ///polygon delay is static
        /// </summary>
        [pbr::OriginalName("MANUAL_DELAYS")] ManualDelays = 0,
        /// <summary>
        ///variable polygon delay depending on the angle between polygon segments
        /// </summary>
        [pbr::OriginalName("VARIABLE_POLY_DELAY")] VariablePolyDelay = 1,
      }

    }
    #endregion

  }

  public sealed partial class ScanlabScannerParams : pb::IMessage<ScanlabScannerParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScanlabScannerParams> _parser = new pb::MessageParser<ScanlabScannerParams>(() => new ScanlabScannerParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScanlabScannerParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanlabScannerParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanlabScannerParams(ScanlabScannerParams other) : this() {
      basicScannerParams_ = other.basicScannerParams_ != null ? other.basicScannerParams_.Clone() : null;
      skyWritingParams_ = other.skyWritingParams_ != null ? other.skyWritingParams_.Clone() : null;
      coordTransformParams_ = other.coordTransformParams_ != null ? other.coordTransformParams_.Clone() : null;
      skyWritingMode_ = other.skyWritingMode_;
      timeLagInUs_ = other.timeLagInUs_;
      skyWritingParametringMode_ = other.skyWritingParametringMode_;
      delayMode_ = other.delayMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanlabScannerParams Clone() {
      return new ScanlabScannerParams(this);
    }

    /// <summary>Field number for the "basicScannerParams" field.</summary>
    public const int BasicScannerParamsFieldNumber = 1;
    private global::ModularEmulator.Modules.Proto.BasicScannerParams basicScannerParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.BasicScannerParams BasicScannerParams {
      get { return basicScannerParams_; }
      set {
        basicScannerParams_ = value;
      }
    }

    /// <summary>Field number for the "skyWritingParams" field.</summary>
    public const int SkyWritingParamsFieldNumber = 2;
    private global::ModularEmulator.Modules.Proto.CommonSkyWritingParams skyWritingParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.CommonSkyWritingParams SkyWritingParams {
      get { return skyWritingParams_; }
      set {
        skyWritingParams_ = value;
      }
    }

    /// <summary>Field number for the "coordTransformParams" field.</summary>
    public const int CoordTransformParamsFieldNumber = 3;
    private global::ModularEmulator.Modules.Proto.CoordinateTransformParams coordTransformParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.CoordinateTransformParams CoordTransformParams {
      get { return coordTransformParams_; }
      set {
        coordTransformParams_ = value;
      }
    }

    /// <summary>Field number for the "skyWritingMode" field.</summary>
    public const int SkyWritingModeFieldNumber = 4;
    private global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingMode skyWritingMode_ = global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingMode.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingMode SkyWritingMode {
      get { return skyWritingMode_; }
      set {
        skyWritingMode_ = value;
      }
    }

    /// <summary>Field number for the "timeLagInUs" field.</summary>
    public const int TimeLagInUsFieldNumber = 5;
    private double timeLagInUs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TimeLagInUs {
      get { return timeLagInUs_; }
      set {
        timeLagInUs_ = value;
      }
    }

    /// <summary>Field number for the "skyWritingParametringMode" field.</summary>
    public const int SkyWritingParametringModeFieldNumber = 6;
    private global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingParametringMode skyWritingParametringMode_ = global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingParametringMode.ManualNprevNpost;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingParametringMode SkyWritingParametringMode {
      get { return skyWritingParametringMode_; }
      set {
        skyWritingParametringMode_ = value;
      }
    }

    /// <summary>Field number for the "delayMode" field.</summary>
    public const int DelayModeFieldNumber = 7;
    private global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.DelayMode delayMode_ = global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.DelayMode.ManualDelays;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.DelayMode DelayMode {
      get { return delayMode_; }
      set {
        delayMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScanlabScannerParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScanlabScannerParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BasicScannerParams, other.BasicScannerParams)) return false;
      if (!object.Equals(SkyWritingParams, other.SkyWritingParams)) return false;
      if (!object.Equals(CoordTransformParams, other.CoordTransformParams)) return false;
      if (SkyWritingMode != other.SkyWritingMode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimeLagInUs, other.TimeLagInUs)) return false;
      if (SkyWritingParametringMode != other.SkyWritingParametringMode) return false;
      if (DelayMode != other.DelayMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (basicScannerParams_ != null) hash ^= BasicScannerParams.GetHashCode();
      if (skyWritingParams_ != null) hash ^= SkyWritingParams.GetHashCode();
      if (coordTransformParams_ != null) hash ^= CoordTransformParams.GetHashCode();
      if (SkyWritingMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingMode.None) hash ^= SkyWritingMode.GetHashCode();
      if (TimeLagInUs != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimeLagInUs);
      if (SkyWritingParametringMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingParametringMode.ManualNprevNpost) hash ^= SkyWritingParametringMode.GetHashCode();
      if (DelayMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.DelayMode.ManualDelays) hash ^= DelayMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (basicScannerParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicScannerParams);
      }
      if (skyWritingParams_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SkyWritingParams);
      }
      if (coordTransformParams_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CoordTransformParams);
      }
      if (SkyWritingMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingMode.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) SkyWritingMode);
      }
      if (TimeLagInUs != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(TimeLagInUs);
      }
      if (SkyWritingParametringMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingParametringMode.ManualNprevNpost) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SkyWritingParametringMode);
      }
      if (DelayMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.DelayMode.ManualDelays) {
        output.WriteRawTag(56);
        output.WriteEnum((int) DelayMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (basicScannerParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicScannerParams);
      }
      if (skyWritingParams_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SkyWritingParams);
      }
      if (coordTransformParams_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CoordTransformParams);
      }
      if (SkyWritingMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingMode.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) SkyWritingMode);
      }
      if (TimeLagInUs != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(TimeLagInUs);
      }
      if (SkyWritingParametringMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingParametringMode.ManualNprevNpost) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SkyWritingParametringMode);
      }
      if (DelayMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.DelayMode.ManualDelays) {
        output.WriteRawTag(56);
        output.WriteEnum((int) DelayMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (basicScannerParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicScannerParams);
      }
      if (skyWritingParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SkyWritingParams);
      }
      if (coordTransformParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CoordTransformParams);
      }
      if (SkyWritingMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingMode.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SkyWritingMode);
      }
      if (TimeLagInUs != 0D) {
        size += 1 + 8;
      }
      if (SkyWritingParametringMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingParametringMode.ManualNprevNpost) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SkyWritingParametringMode);
      }
      if (DelayMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.DelayMode.ManualDelays) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DelayMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScanlabScannerParams other) {
      if (other == null) {
        return;
      }
      if (other.basicScannerParams_ != null) {
        if (basicScannerParams_ == null) {
          BasicScannerParams = new global::ModularEmulator.Modules.Proto.BasicScannerParams();
        }
        BasicScannerParams.MergeFrom(other.BasicScannerParams);
      }
      if (other.skyWritingParams_ != null) {
        if (skyWritingParams_ == null) {
          SkyWritingParams = new global::ModularEmulator.Modules.Proto.CommonSkyWritingParams();
        }
        SkyWritingParams.MergeFrom(other.SkyWritingParams);
      }
      if (other.coordTransformParams_ != null) {
        if (coordTransformParams_ == null) {
          CoordTransformParams = new global::ModularEmulator.Modules.Proto.CoordinateTransformParams();
        }
        CoordTransformParams.MergeFrom(other.CoordTransformParams);
      }
      if (other.SkyWritingMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingMode.None) {
        SkyWritingMode = other.SkyWritingMode;
      }
      if (other.TimeLagInUs != 0D) {
        TimeLagInUs = other.TimeLagInUs;
      }
      if (other.SkyWritingParametringMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingParametringMode.ManualNprevNpost) {
        SkyWritingParametringMode = other.SkyWritingParametringMode;
      }
      if (other.DelayMode != global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.DelayMode.ManualDelays) {
        DelayMode = other.DelayMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (basicScannerParams_ == null) {
              BasicScannerParams = new global::ModularEmulator.Modules.Proto.BasicScannerParams();
            }
            input.ReadMessage(BasicScannerParams);
            break;
          }
          case 18: {
            if (skyWritingParams_ == null) {
              SkyWritingParams = new global::ModularEmulator.Modules.Proto.CommonSkyWritingParams();
            }
            input.ReadMessage(SkyWritingParams);
            break;
          }
          case 26: {
            if (coordTransformParams_ == null) {
              CoordTransformParams = new global::ModularEmulator.Modules.Proto.CoordinateTransformParams();
            }
            input.ReadMessage(CoordTransformParams);
            break;
          }
          case 32: {
            SkyWritingMode = (global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingMode) input.ReadEnum();
            break;
          }
          case 41: {
            TimeLagInUs = input.ReadDouble();
            break;
          }
          case 48: {
            SkyWritingParametringMode = (global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingParametringMode) input.ReadEnum();
            break;
          }
          case 56: {
            DelayMode = (global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.DelayMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (basicScannerParams_ == null) {
              BasicScannerParams = new global::ModularEmulator.Modules.Proto.BasicScannerParams();
            }
            input.ReadMessage(BasicScannerParams);
            break;
          }
          case 18: {
            if (skyWritingParams_ == null) {
              SkyWritingParams = new global::ModularEmulator.Modules.Proto.CommonSkyWritingParams();
            }
            input.ReadMessage(SkyWritingParams);
            break;
          }
          case 26: {
            if (coordTransformParams_ == null) {
              CoordTransformParams = new global::ModularEmulator.Modules.Proto.CoordinateTransformParams();
            }
            input.ReadMessage(CoordTransformParams);
            break;
          }
          case 32: {
            SkyWritingMode = (global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingMode) input.ReadEnum();
            break;
          }
          case 41: {
            TimeLagInUs = input.ReadDouble();
            break;
          }
          case 48: {
            SkyWritingParametringMode = (global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.SkyWritingParametringMode) input.ReadEnum();
            break;
          }
          case 56: {
            DelayMode = (global::ModularEmulator.Modules.Proto.ScanlabScannerParams.Types.DelayMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ScanlabScannerParams message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum SkyWritingMode {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("MODE1")] Mode1 = 1,
        [pbr::OriginalName("MODE2")] Mode2 = 2,
        [pbr::OriginalName("MODE3")] Mode3 = 3,
      }

      public enum SkyWritingParametringMode {
        [pbr::OriginalName("MANUAL_NPREV_NPOST")] ManualNprevNpost = 0,
        [pbr::OriginalName("AUTOMATIC_NPREV_NPOST_BASED_ON_TIMELAG")] AutomaticNprevNpostBasedOnTimelag = 1,
        /// <summary>
        /// automatic (shortest possible) delay calculation based on the scanners maximum acceleration and current speed
        /// used by excelliSCAN cards RTC6 ("scanAHEAD") 
        /// </summary>
        [pbr::OriginalName("MINIMUM_NPREV_NPOST_ACCELERATION")] MinimumNprevNpostAcceleration = 2,
      }

      public enum DelayMode {
        /// <summary>
        ///polygon delay is static
        /// </summary>
        [pbr::OriginalName("MANUAL_DELAYS")] ManualDelays = 0,
        /// <summary>
        ///variable polygon delay depending on the angle between polygon segments
        /// </summary>
        [pbr::OriginalName("VARIABLE_POLY_DELAY")] VariablePolyDelay = 1,
        /// <summary>
        /// automatic (shortest possible) skywriting calculation based on the scanners maximum acceleration and current speed
        /// used by excelliSCAN cards RTC6 ("scanAHEAD") 
        /// </summary>
        [pbr::OriginalName("MINIMUM_DELAY_ACCELERATION")] MinimumDelayAcceleration = 2,
      }

    }
    #endregion

  }

  /// <summary>
  ///min/max coordiantes defining a rectangular scan field in the build volume
  /// </summary>
  public sealed partial class ScanField : pb::IMessage<ScanField>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScanField> _parser = new pb::MessageParser<ScanField>(() => new ScanField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScanField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanField(ScanField other) : this() {
      xMin_ = other.xMin_;
      xMax_ = other.xMax_;
      yMin_ = other.yMin_;
      yMax_ = other.yMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanField Clone() {
      return new ScanField(this);
    }

    /// <summary>Field number for the "XMin" field.</summary>
    public const int XMinFieldNumber = 1;
    private double xMin_;
    /// <summary>
    /// The x coordiante of the lower left corner of scan field in the build volume [mm]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double XMin {
      get { return xMin_; }
      set {
        xMin_ = value;
      }
    }

    /// <summary>Field number for the "XMax" field.</summary>
    public const int XMaxFieldNumber = 2;
    private double xMax_;
    /// <summary>
    /// The x coordiante of the upper right corner of scan field in the build volume [mm]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double XMax {
      get { return xMax_; }
      set {
        xMax_ = value;
      }
    }

    /// <summary>Field number for the "YMin" field.</summary>
    public const int YMinFieldNumber = 3;
    private double yMin_;
    /// <summary>
    /// The y coordiante of the lower left corner of scan field in the build volume [mm]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double YMin {
      get { return yMin_; }
      set {
        yMin_ = value;
      }
    }

    /// <summary>Field number for the "YMax" field.</summary>
    public const int YMaxFieldNumber = 4;
    private double yMax_;
    /// <summary>
    /// The y coordiante of the upper right corner of scan field in the build volume [mm]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double YMax {
      get { return yMax_; }
      set {
        yMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScanField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScanField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(XMin, other.XMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(XMax, other.XMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(YMin, other.YMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(YMax, other.YMax)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (XMin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(XMin);
      if (XMax != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(XMax);
      if (YMin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(YMin);
      if (YMax != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(YMax);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (XMin != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(XMin);
      }
      if (XMax != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(XMax);
      }
      if (YMin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(YMin);
      }
      if (YMax != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(YMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (XMin != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(XMin);
      }
      if (XMax != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(XMax);
      }
      if (YMin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(YMin);
      }
      if (YMax != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(YMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (XMin != 0D) {
        size += 1 + 8;
      }
      if (XMax != 0D) {
        size += 1 + 8;
      }
      if (YMin != 0D) {
        size += 1 + 8;
      }
      if (YMax != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScanField other) {
      if (other == null) {
        return;
      }
      if (other.XMin != 0D) {
        XMin = other.XMin;
      }
      if (other.XMax != 0D) {
        XMax = other.XMax;
      }
      if (other.YMin != 0D) {
        YMin = other.YMin;
      }
      if (other.YMax != 0D) {
        YMax = other.YMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            XMin = input.ReadDouble();
            break;
          }
          case 17: {
            XMax = input.ReadDouble();
            break;
          }
          case 25: {
            YMin = input.ReadDouble();
            break;
          }
          case 33: {
            YMax = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            XMin = input.ReadDouble();
            break;
          }
          case 17: {
            XMax = input.ReadDouble();
            break;
          }
          case 25: {
            YMin = input.ReadDouble();
            break;
          }
          case 33: {
            YMax = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LaserParams : pb::IMessage<LaserParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LaserParams> _parser = new pb::MessageParser<LaserParams>(() => new LaserParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LaserParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LaserParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LaserParams(LaserParams other) : this() {
      laserPowerInW_ = other.laserPowerInW_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LaserParams Clone() {
      return new LaserParams(this);
    }

    /// <summary>Field number for the "LaserPowerInW" field.</summary>
    public const int LaserPowerInWFieldNumber = 2;
    private double laserPowerInW_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LaserPowerInW {
      get { return laserPowerInW_; }
      set {
        laserPowerInW_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LaserParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LaserParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LaserPowerInW, other.LaserPowerInW)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LaserPowerInW != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LaserPowerInW);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LaserPowerInW != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(LaserPowerInW);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LaserPowerInW != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(LaserPowerInW);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LaserPowerInW != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LaserParams other) {
      if (other == null) {
        return;
      }
      if (other.LaserPowerInW != 0D) {
        LaserPowerInW = other.LaserPowerInW;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 17: {
            LaserPowerInW = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 17: {
            LaserPowerInW = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StandardCoaterParams : pb::IMessage<StandardCoaterParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StandardCoaterParams> _parser = new pb::MessageParser<StandardCoaterParams>(() => new StandardCoaterParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StandardCoaterParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StandardCoaterParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StandardCoaterParams(StandardCoaterParams other) : this() {
      coatingSpeedForwardInMmPerSec_ = other.coatingSpeedForwardInMmPerSec_;
      coatingSpeedBackwardInMmPerSec_ = other.coatingSpeedBackwardInMmPerSec_;
      distanceInMm_ = other.distanceInMm_;
      forwardDelayInSec_ = other.forwardDelayInSec_;
      backwardDelayInSec_ = other.backwardDelayInSec_;
      acceleration_ = other.acceleration_;
      isBidirectional_ = other.isBidirectional_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StandardCoaterParams Clone() {
      return new StandardCoaterParams(this);
    }

    /// <summary>Field number for the "coatingSpeedForwardInMmPerSec" field.</summary>
    public const int CoatingSpeedForwardInMmPerSecFieldNumber = 1;
    private double coatingSpeedForwardInMmPerSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CoatingSpeedForwardInMmPerSec {
      get { return coatingSpeedForwardInMmPerSec_; }
      set {
        coatingSpeedForwardInMmPerSec_ = value;
      }
    }

    /// <summary>Field number for the "coatingSpeedBackwardInMmPerSec" field.</summary>
    public const int CoatingSpeedBackwardInMmPerSecFieldNumber = 2;
    private double coatingSpeedBackwardInMmPerSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CoatingSpeedBackwardInMmPerSec {
      get { return coatingSpeedBackwardInMmPerSec_; }
      set {
        coatingSpeedBackwardInMmPerSec_ = value;
      }
    }

    /// <summary>Field number for the "distanceInMm" field.</summary>
    public const int DistanceInMmFieldNumber = 3;
    private double distanceInMm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DistanceInMm {
      get { return distanceInMm_; }
      set {
        distanceInMm_ = value;
      }
    }

    /// <summary>Field number for the "forwardDelayInSec" field.</summary>
    public const int ForwardDelayInSecFieldNumber = 4;
    private double forwardDelayInSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ForwardDelayInSec {
      get { return forwardDelayInSec_; }
      set {
        forwardDelayInSec_ = value;
      }
    }

    /// <summary>Field number for the "backwardDelayInSec" field.</summary>
    public const int BackwardDelayInSecFieldNumber = 5;
    private double backwardDelayInSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BackwardDelayInSec {
      get { return backwardDelayInSec_; }
      set {
        backwardDelayInSec_ = value;
      }
    }

    /// <summary>Field number for the "acceleration" field.</summary>
    public const int AccelerationFieldNumber = 6;
    private double acceleration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Acceleration {
      get { return acceleration_; }
      set {
        acceleration_ = value;
      }
    }

    /// <summary>Field number for the "isBidirectional" field.</summary>
    public const int IsBidirectionalFieldNumber = 7;
    private bool isBidirectional_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBidirectional {
      get { return isBidirectional_; }
      set {
        isBidirectional_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StandardCoaterParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StandardCoaterParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CoatingSpeedForwardInMmPerSec, other.CoatingSpeedForwardInMmPerSec)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CoatingSpeedBackwardInMmPerSec, other.CoatingSpeedBackwardInMmPerSec)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DistanceInMm, other.DistanceInMm)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ForwardDelayInSec, other.ForwardDelayInSec)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BackwardDelayInSec, other.BackwardDelayInSec)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Acceleration, other.Acceleration)) return false;
      if (IsBidirectional != other.IsBidirectional) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CoatingSpeedForwardInMmPerSec != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CoatingSpeedForwardInMmPerSec);
      if (CoatingSpeedBackwardInMmPerSec != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CoatingSpeedBackwardInMmPerSec);
      if (DistanceInMm != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DistanceInMm);
      if (ForwardDelayInSec != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ForwardDelayInSec);
      if (BackwardDelayInSec != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BackwardDelayInSec);
      if (Acceleration != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Acceleration);
      if (IsBidirectional != false) hash ^= IsBidirectional.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CoatingSpeedForwardInMmPerSec != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(CoatingSpeedForwardInMmPerSec);
      }
      if (CoatingSpeedBackwardInMmPerSec != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(CoatingSpeedBackwardInMmPerSec);
      }
      if (DistanceInMm != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(DistanceInMm);
      }
      if (ForwardDelayInSec != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(ForwardDelayInSec);
      }
      if (BackwardDelayInSec != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(BackwardDelayInSec);
      }
      if (Acceleration != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Acceleration);
      }
      if (IsBidirectional != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsBidirectional);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CoatingSpeedForwardInMmPerSec != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(CoatingSpeedForwardInMmPerSec);
      }
      if (CoatingSpeedBackwardInMmPerSec != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(CoatingSpeedBackwardInMmPerSec);
      }
      if (DistanceInMm != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(DistanceInMm);
      }
      if (ForwardDelayInSec != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(ForwardDelayInSec);
      }
      if (BackwardDelayInSec != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(BackwardDelayInSec);
      }
      if (Acceleration != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Acceleration);
      }
      if (IsBidirectional != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsBidirectional);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CoatingSpeedForwardInMmPerSec != 0D) {
        size += 1 + 8;
      }
      if (CoatingSpeedBackwardInMmPerSec != 0D) {
        size += 1 + 8;
      }
      if (DistanceInMm != 0D) {
        size += 1 + 8;
      }
      if (ForwardDelayInSec != 0D) {
        size += 1 + 8;
      }
      if (BackwardDelayInSec != 0D) {
        size += 1 + 8;
      }
      if (Acceleration != 0D) {
        size += 1 + 8;
      }
      if (IsBidirectional != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StandardCoaterParams other) {
      if (other == null) {
        return;
      }
      if (other.CoatingSpeedForwardInMmPerSec != 0D) {
        CoatingSpeedForwardInMmPerSec = other.CoatingSpeedForwardInMmPerSec;
      }
      if (other.CoatingSpeedBackwardInMmPerSec != 0D) {
        CoatingSpeedBackwardInMmPerSec = other.CoatingSpeedBackwardInMmPerSec;
      }
      if (other.DistanceInMm != 0D) {
        DistanceInMm = other.DistanceInMm;
      }
      if (other.ForwardDelayInSec != 0D) {
        ForwardDelayInSec = other.ForwardDelayInSec;
      }
      if (other.BackwardDelayInSec != 0D) {
        BackwardDelayInSec = other.BackwardDelayInSec;
      }
      if (other.Acceleration != 0D) {
        Acceleration = other.Acceleration;
      }
      if (other.IsBidirectional != false) {
        IsBidirectional = other.IsBidirectional;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            CoatingSpeedForwardInMmPerSec = input.ReadDouble();
            break;
          }
          case 17: {
            CoatingSpeedBackwardInMmPerSec = input.ReadDouble();
            break;
          }
          case 25: {
            DistanceInMm = input.ReadDouble();
            break;
          }
          case 33: {
            ForwardDelayInSec = input.ReadDouble();
            break;
          }
          case 41: {
            BackwardDelayInSec = input.ReadDouble();
            break;
          }
          case 49: {
            Acceleration = input.ReadDouble();
            break;
          }
          case 56: {
            IsBidirectional = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            CoatingSpeedForwardInMmPerSec = input.ReadDouble();
            break;
          }
          case 17: {
            CoatingSpeedBackwardInMmPerSec = input.ReadDouble();
            break;
          }
          case 25: {
            DistanceInMm = input.ReadDouble();
            break;
          }
          case 33: {
            ForwardDelayInSec = input.ReadDouble();
            break;
          }
          case 41: {
            BackwardDelayInSec = input.ReadDouble();
            break;
          }
          case 49: {
            Acceleration = input.ReadDouble();
            break;
          }
          case 56: {
            IsBidirectional = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildChamberParams : pb::IMessage<BuildChamberParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildChamberParams> _parser = new pb::MessageParser<BuildChamberParams>(() => new BuildChamberParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BuildChamberParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildChamberParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildChamberParams(BuildChamberParams other) : this() {
      platformLiftRateInMmPerSec_ = other.platformLiftRateInMmPerSec_;
      platformLiftAccelerationInMmPerSec2_ = other.platformLiftAccelerationInMmPerSec2_;
      platformLiftDelayInS_ = other.platformLiftDelayInS_;
      inertAtmosphereTimeInS_ = other.inertAtmosphereTimeInS_;
      releaseAtmosphereTimeInS_ = other.releaseAtmosphereTimeInS_;
      maximumO2PPM_ = other.maximumO2PPM_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuildChamberParams Clone() {
      return new BuildChamberParams(this);
    }

    /// <summary>Field number for the "platformLiftRateInMmPerSec" field.</summary>
    public const int PlatformLiftRateInMmPerSecFieldNumber = 1;
    private double platformLiftRateInMmPerSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PlatformLiftRateInMmPerSec {
      get { return platformLiftRateInMmPerSec_; }
      set {
        platformLiftRateInMmPerSec_ = value;
      }
    }

    /// <summary>Field number for the "platformLiftAccelerationInMmPerSec2" field.</summary>
    public const int PlatformLiftAccelerationInMmPerSec2FieldNumber = 5;
    private double platformLiftAccelerationInMmPerSec2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PlatformLiftAccelerationInMmPerSec2 {
      get { return platformLiftAccelerationInMmPerSec2_; }
      set {
        platformLiftAccelerationInMmPerSec2_ = value;
      }
    }

    /// <summary>Field number for the "platformLiftDelayInS" field.</summary>
    public const int PlatformLiftDelayInSFieldNumber = 6;
    private double platformLiftDelayInS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PlatformLiftDelayInS {
      get { return platformLiftDelayInS_; }
      set {
        platformLiftDelayInS_ = value;
      }
    }

    /// <summary>Field number for the "inertAtmosphereTimeInS" field.</summary>
    public const int InertAtmosphereTimeInSFieldNumber = 2;
    private double inertAtmosphereTimeInS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InertAtmosphereTimeInS {
      get { return inertAtmosphereTimeInS_; }
      set {
        inertAtmosphereTimeInS_ = value;
      }
    }

    /// <summary>Field number for the "releaseAtmosphereTimeInS" field.</summary>
    public const int ReleaseAtmosphereTimeInSFieldNumber = 3;
    private double releaseAtmosphereTimeInS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ReleaseAtmosphereTimeInS {
      get { return releaseAtmosphereTimeInS_; }
      set {
        releaseAtmosphereTimeInS_ = value;
      }
    }

    /// <summary>Field number for the "maximumO2PPM" field.</summary>
    public const int MaximumO2PPMFieldNumber = 4;
    private double maximumO2PPM_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaximumO2PPM {
      get { return maximumO2PPM_; }
      set {
        maximumO2PPM_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BuildChamberParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BuildChamberParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PlatformLiftRateInMmPerSec, other.PlatformLiftRateInMmPerSec)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PlatformLiftAccelerationInMmPerSec2, other.PlatformLiftAccelerationInMmPerSec2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PlatformLiftDelayInS, other.PlatformLiftDelayInS)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InertAtmosphereTimeInS, other.InertAtmosphereTimeInS)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ReleaseAtmosphereTimeInS, other.ReleaseAtmosphereTimeInS)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaximumO2PPM, other.MaximumO2PPM)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlatformLiftRateInMmPerSec != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PlatformLiftRateInMmPerSec);
      if (PlatformLiftAccelerationInMmPerSec2 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PlatformLiftAccelerationInMmPerSec2);
      if (PlatformLiftDelayInS != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PlatformLiftDelayInS);
      if (InertAtmosphereTimeInS != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InertAtmosphereTimeInS);
      if (ReleaseAtmosphereTimeInS != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ReleaseAtmosphereTimeInS);
      if (MaximumO2PPM != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaximumO2PPM);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlatformLiftRateInMmPerSec != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(PlatformLiftRateInMmPerSec);
      }
      if (InertAtmosphereTimeInS != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(InertAtmosphereTimeInS);
      }
      if (ReleaseAtmosphereTimeInS != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(ReleaseAtmosphereTimeInS);
      }
      if (MaximumO2PPM != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MaximumO2PPM);
      }
      if (PlatformLiftAccelerationInMmPerSec2 != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(PlatformLiftAccelerationInMmPerSec2);
      }
      if (PlatformLiftDelayInS != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(PlatformLiftDelayInS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlatformLiftRateInMmPerSec != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(PlatformLiftRateInMmPerSec);
      }
      if (InertAtmosphereTimeInS != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(InertAtmosphereTimeInS);
      }
      if (ReleaseAtmosphereTimeInS != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(ReleaseAtmosphereTimeInS);
      }
      if (MaximumO2PPM != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MaximumO2PPM);
      }
      if (PlatformLiftAccelerationInMmPerSec2 != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(PlatformLiftAccelerationInMmPerSec2);
      }
      if (PlatformLiftDelayInS != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(PlatformLiftDelayInS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlatformLiftRateInMmPerSec != 0D) {
        size += 1 + 8;
      }
      if (PlatformLiftAccelerationInMmPerSec2 != 0D) {
        size += 1 + 8;
      }
      if (PlatformLiftDelayInS != 0D) {
        size += 1 + 8;
      }
      if (InertAtmosphereTimeInS != 0D) {
        size += 1 + 8;
      }
      if (ReleaseAtmosphereTimeInS != 0D) {
        size += 1 + 8;
      }
      if (MaximumO2PPM != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BuildChamberParams other) {
      if (other == null) {
        return;
      }
      if (other.PlatformLiftRateInMmPerSec != 0D) {
        PlatformLiftRateInMmPerSec = other.PlatformLiftRateInMmPerSec;
      }
      if (other.PlatformLiftAccelerationInMmPerSec2 != 0D) {
        PlatformLiftAccelerationInMmPerSec2 = other.PlatformLiftAccelerationInMmPerSec2;
      }
      if (other.PlatformLiftDelayInS != 0D) {
        PlatformLiftDelayInS = other.PlatformLiftDelayInS;
      }
      if (other.InertAtmosphereTimeInS != 0D) {
        InertAtmosphereTimeInS = other.InertAtmosphereTimeInS;
      }
      if (other.ReleaseAtmosphereTimeInS != 0D) {
        ReleaseAtmosphereTimeInS = other.ReleaseAtmosphereTimeInS;
      }
      if (other.MaximumO2PPM != 0D) {
        MaximumO2PPM = other.MaximumO2PPM;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            PlatformLiftRateInMmPerSec = input.ReadDouble();
            break;
          }
          case 17: {
            InertAtmosphereTimeInS = input.ReadDouble();
            break;
          }
          case 25: {
            ReleaseAtmosphereTimeInS = input.ReadDouble();
            break;
          }
          case 33: {
            MaximumO2PPM = input.ReadDouble();
            break;
          }
          case 41: {
            PlatformLiftAccelerationInMmPerSec2 = input.ReadDouble();
            break;
          }
          case 49: {
            PlatformLiftDelayInS = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            PlatformLiftRateInMmPerSec = input.ReadDouble();
            break;
          }
          case 17: {
            InertAtmosphereTimeInS = input.ReadDouble();
            break;
          }
          case 25: {
            ReleaseAtmosphereTimeInS = input.ReadDouble();
            break;
          }
          case 33: {
            MaximumO2PPM = input.ReadDouble();
            break;
          }
          case 41: {
            PlatformLiftAccelerationInMmPerSec2 = input.ReadDouble();
            break;
          }
          case 49: {
            PlatformLiftDelayInS = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CuboidBuildVolumeParams : pb::IMessage<CuboidBuildVolumeParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CuboidBuildVolumeParams> _parser = new pb::MessageParser<CuboidBuildVolumeParams>(() => new CuboidBuildVolumeParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CuboidBuildVolumeParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CuboidBuildVolumeParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CuboidBuildVolumeParams(CuboidBuildVolumeParams other) : this() {
      xMin_ = other.xMin_;
      xMax_ = other.xMax_;
      yMin_ = other.yMin_;
      yMax_ = other.yMax_;
      zMin_ = other.zMin_;
      zMax_ = other.zMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CuboidBuildVolumeParams Clone() {
      return new CuboidBuildVolumeParams(this);
    }

    /// <summary>Field number for the "XMin" field.</summary>
    public const int XMinFieldNumber = 1;
    private double xMin_;
    /// <summary>
    /// The x coordiante of the lower left corner of the build volume [mm]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double XMin {
      get { return xMin_; }
      set {
        xMin_ = value;
      }
    }

    /// <summary>Field number for the "XMax" field.</summary>
    public const int XMaxFieldNumber = 2;
    private double xMax_;
    /// <summary>
    /// The x coordiante of the upper right corner of the build volume [mm]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double XMax {
      get { return xMax_; }
      set {
        xMax_ = value;
      }
    }

    /// <summary>Field number for the "YMin" field.</summary>
    public const int YMinFieldNumber = 3;
    private double yMin_;
    /// <summary>
    /// The y coordiante of the lower left corner of sthe build volume [mm]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double YMin {
      get { return yMin_; }
      set {
        yMin_ = value;
      }
    }

    /// <summary>Field number for the "YMax" field.</summary>
    public const int YMaxFieldNumber = 4;
    private double yMax_;
    /// <summary>
    /// The y coordiante of the upper right corner of the build volume [mm]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double YMax {
      get { return yMax_; }
      set {
        yMax_ = value;
      }
    }

    /// <summary>Field number for the "ZMin" field.</summary>
    public const int ZMinFieldNumber = 5;
    private double zMin_;
    /// <summary>
    /// The z coordiante of the lower left corner of the build volume [mm]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ZMin {
      get { return zMin_; }
      set {
        zMin_ = value;
      }
    }

    /// <summary>Field number for the "ZMax" field.</summary>
    public const int ZMaxFieldNumber = 6;
    private double zMax_;
    /// <summary>
    /// The z coordiante of the upper right corner of the build volume [mm]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ZMax {
      get { return zMax_; }
      set {
        zMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CuboidBuildVolumeParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CuboidBuildVolumeParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(XMin, other.XMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(XMax, other.XMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(YMin, other.YMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(YMax, other.YMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ZMin, other.ZMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ZMax, other.ZMax)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (XMin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(XMin);
      if (XMax != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(XMax);
      if (YMin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(YMin);
      if (YMax != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(YMax);
      if (ZMin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ZMin);
      if (ZMax != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ZMax);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (XMin != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(XMin);
      }
      if (XMax != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(XMax);
      }
      if (YMin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(YMin);
      }
      if (YMax != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(YMax);
      }
      if (ZMin != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(ZMin);
      }
      if (ZMax != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(ZMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (XMin != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(XMin);
      }
      if (XMax != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(XMax);
      }
      if (YMin != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(YMin);
      }
      if (YMax != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(YMax);
      }
      if (ZMin != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(ZMin);
      }
      if (ZMax != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(ZMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (XMin != 0D) {
        size += 1 + 8;
      }
      if (XMax != 0D) {
        size += 1 + 8;
      }
      if (YMin != 0D) {
        size += 1 + 8;
      }
      if (YMax != 0D) {
        size += 1 + 8;
      }
      if (ZMin != 0D) {
        size += 1 + 8;
      }
      if (ZMax != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CuboidBuildVolumeParams other) {
      if (other == null) {
        return;
      }
      if (other.XMin != 0D) {
        XMin = other.XMin;
      }
      if (other.XMax != 0D) {
        XMax = other.XMax;
      }
      if (other.YMin != 0D) {
        YMin = other.YMin;
      }
      if (other.YMax != 0D) {
        YMax = other.YMax;
      }
      if (other.ZMin != 0D) {
        ZMin = other.ZMin;
      }
      if (other.ZMax != 0D) {
        ZMax = other.ZMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            XMin = input.ReadDouble();
            break;
          }
          case 17: {
            XMax = input.ReadDouble();
            break;
          }
          case 25: {
            YMin = input.ReadDouble();
            break;
          }
          case 33: {
            YMax = input.ReadDouble();
            break;
          }
          case 41: {
            ZMin = input.ReadDouble();
            break;
          }
          case 49: {
            ZMax = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            XMin = input.ReadDouble();
            break;
          }
          case 17: {
            XMax = input.ReadDouble();
            break;
          }
          case 25: {
            YMin = input.ReadDouble();
            break;
          }
          case 33: {
            YMax = input.ReadDouble();
            break;
          }
          case 41: {
            ZMin = input.ReadDouble();
            break;
          }
          case 49: {
            ZMax = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ZylinderBuildVolumeParams : pb::IMessage<ZylinderBuildVolumeParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZylinderBuildVolumeParams> _parser = new pb::MessageParser<ZylinderBuildVolumeParams>(() => new ZylinderBuildVolumeParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ZylinderBuildVolumeParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZylinderBuildVolumeParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZylinderBuildVolumeParams(ZylinderBuildVolumeParams other) : this() {
      diameter_ = other.diameter_;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZylinderBuildVolumeParams Clone() {
      return new ZylinderBuildVolumeParams(this);
    }

    /// <summary>Field number for the "diameter" field.</summary>
    public const int DiameterFieldNumber = 2;
    private double diameter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Diameter {
      get { return diameter_; }
      set {
        diameter_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 3;
    private double height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ZylinderBuildVolumeParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ZylinderBuildVolumeParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Diameter, other.Diameter)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Height, other.Height)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Diameter != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Diameter);
      if (Height != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Height);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Diameter != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Diameter);
      }
      if (Height != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Diameter != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Diameter);
      }
      if (Height != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Diameter != 0D) {
        size += 1 + 8;
      }
      if (Height != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ZylinderBuildVolumeParams other) {
      if (other == null) {
        return;
      }
      if (other.Diameter != 0D) {
        Diameter = other.Diameter;
      }
      if (other.Height != 0D) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 17: {
            Diameter = input.ReadDouble();
            break;
          }
          case 25: {
            Height = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 17: {
            Diameter = input.ReadDouble();
            break;
          }
          case 25: {
            Height = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PreheaterParams : pb::IMessage<PreheaterParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PreheaterParams> _parser = new pb::MessageParser<PreheaterParams>(() => new PreheaterParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PreheaterParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreheaterParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreheaterParams(PreheaterParams other) : this() {
      preheatingTemperature_ = other.preheatingTemperature_;
      maximumPreheatingTemperature_ = other.maximumPreheatingTemperature_;
      heatingRateInSecPerK_ = other.heatingRateInSecPerK_;
      roomTemperature_ = other.roomTemperature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreheaterParams Clone() {
      return new PreheaterParams(this);
    }

    /// <summary>Field number for the "preheatingTemperature" field.</summary>
    public const int PreheatingTemperatureFieldNumber = 2;
    private double preheatingTemperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PreheatingTemperature {
      get { return preheatingTemperature_; }
      set {
        preheatingTemperature_ = value;
      }
    }

    /// <summary>Field number for the "maximumPreheatingTemperature" field.</summary>
    public const int MaximumPreheatingTemperatureFieldNumber = 3;
    private double maximumPreheatingTemperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaximumPreheatingTemperature {
      get { return maximumPreheatingTemperature_; }
      set {
        maximumPreheatingTemperature_ = value;
      }
    }

    /// <summary>Field number for the "heatingRateInSecPerK" field.</summary>
    public const int HeatingRateInSecPerKFieldNumber = 4;
    private double heatingRateInSecPerK_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double HeatingRateInSecPerK {
      get { return heatingRateInSecPerK_; }
      set {
        heatingRateInSecPerK_ = value;
      }
    }

    /// <summary>Field number for the "roomTemperature" field.</summary>
    public const int RoomTemperatureFieldNumber = 5;
    private double roomTemperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RoomTemperature {
      get { return roomTemperature_; }
      set {
        roomTemperature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PreheaterParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PreheaterParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PreheatingTemperature, other.PreheatingTemperature)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaximumPreheatingTemperature, other.MaximumPreheatingTemperature)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HeatingRateInSecPerK, other.HeatingRateInSecPerK)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RoomTemperature, other.RoomTemperature)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PreheatingTemperature != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PreheatingTemperature);
      if (MaximumPreheatingTemperature != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaximumPreheatingTemperature);
      if (HeatingRateInSecPerK != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HeatingRateInSecPerK);
      if (RoomTemperature != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RoomTemperature);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PreheatingTemperature != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(PreheatingTemperature);
      }
      if (MaximumPreheatingTemperature != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(MaximumPreheatingTemperature);
      }
      if (HeatingRateInSecPerK != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(HeatingRateInSecPerK);
      }
      if (RoomTemperature != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(RoomTemperature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PreheatingTemperature != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(PreheatingTemperature);
      }
      if (MaximumPreheatingTemperature != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(MaximumPreheatingTemperature);
      }
      if (HeatingRateInSecPerK != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(HeatingRateInSecPerK);
      }
      if (RoomTemperature != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(RoomTemperature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PreheatingTemperature != 0D) {
        size += 1 + 8;
      }
      if (MaximumPreheatingTemperature != 0D) {
        size += 1 + 8;
      }
      if (HeatingRateInSecPerK != 0D) {
        size += 1 + 8;
      }
      if (RoomTemperature != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PreheaterParams other) {
      if (other == null) {
        return;
      }
      if (other.PreheatingTemperature != 0D) {
        PreheatingTemperature = other.PreheatingTemperature;
      }
      if (other.MaximumPreheatingTemperature != 0D) {
        MaximumPreheatingTemperature = other.MaximumPreheatingTemperature;
      }
      if (other.HeatingRateInSecPerK != 0D) {
        HeatingRateInSecPerK = other.HeatingRateInSecPerK;
      }
      if (other.RoomTemperature != 0D) {
        RoomTemperature = other.RoomTemperature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 17: {
            PreheatingTemperature = input.ReadDouble();
            break;
          }
          case 25: {
            MaximumPreheatingTemperature = input.ReadDouble();
            break;
          }
          case 33: {
            HeatingRateInSecPerK = input.ReadDouble();
            break;
          }
          case 41: {
            RoomTemperature = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 17: {
            PreheatingTemperature = input.ReadDouble();
            break;
          }
          case 25: {
            MaximumPreheatingTemperature = input.ReadDouble();
            break;
          }
          case 33: {
            HeatingRateInSecPerK = input.ReadDouble();
            break;
          }
          case 41: {
            RoomTemperature = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TimePerStateInMS : pb::IMessage<TimePerStateInMS>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimePerStateInMS> _parser = new pb::MessageParser<TimePerStateInMS>(() => new TimePerStateInMS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TimePerStateInMS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimePerStateInMS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimePerStateInMS(TimePerStateInMS other) : this() {
      timeOff_ = other.timeOff_;
      timeIdle_ = other.timeIdle_;
      timeActive_ = other.timeActive_;
      timeMaintenance_ = other.timeMaintenance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimePerStateInMS Clone() {
      return new TimePerStateInMS(this);
    }

    /// <summary>Field number for the "timeOff" field.</summary>
    public const int TimeOffFieldNumber = 1;
    private double timeOff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TimeOff {
      get { return timeOff_; }
      set {
        timeOff_ = value;
      }
    }

    /// <summary>Field number for the "timeIdle" field.</summary>
    public const int TimeIdleFieldNumber = 2;
    private double timeIdle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TimeIdle {
      get { return timeIdle_; }
      set {
        timeIdle_ = value;
      }
    }

    /// <summary>Field number for the "timeActive" field.</summary>
    public const int TimeActiveFieldNumber = 3;
    private double timeActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TimeActive {
      get { return timeActive_; }
      set {
        timeActive_ = value;
      }
    }

    /// <summary>Field number for the "timeMaintenance" field.</summary>
    public const int TimeMaintenanceFieldNumber = 4;
    private double timeMaintenance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TimeMaintenance {
      get { return timeMaintenance_; }
      set {
        timeMaintenance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TimePerStateInMS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TimePerStateInMS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimeOff, other.TimeOff)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimeIdle, other.TimeIdle)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimeActive, other.TimeActive)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimeMaintenance, other.TimeMaintenance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeOff != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimeOff);
      if (TimeIdle != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimeIdle);
      if (TimeActive != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimeActive);
      if (TimeMaintenance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimeMaintenance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimeOff != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(TimeOff);
      }
      if (TimeIdle != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(TimeIdle);
      }
      if (TimeActive != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TimeActive);
      }
      if (TimeMaintenance != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(TimeMaintenance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimeOff != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(TimeOff);
      }
      if (TimeIdle != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(TimeIdle);
      }
      if (TimeActive != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TimeActive);
      }
      if (TimeMaintenance != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(TimeMaintenance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TimeOff != 0D) {
        size += 1 + 8;
      }
      if (TimeIdle != 0D) {
        size += 1 + 8;
      }
      if (TimeActive != 0D) {
        size += 1 + 8;
      }
      if (TimeMaintenance != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TimePerStateInMS other) {
      if (other == null) {
        return;
      }
      if (other.TimeOff != 0D) {
        TimeOff = other.TimeOff;
      }
      if (other.TimeIdle != 0D) {
        TimeIdle = other.TimeIdle;
      }
      if (other.TimeActive != 0D) {
        TimeActive = other.TimeActive;
      }
      if (other.TimeMaintenance != 0D) {
        TimeMaintenance = other.TimeMaintenance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            TimeOff = input.ReadDouble();
            break;
          }
          case 17: {
            TimeIdle = input.ReadDouble();
            break;
          }
          case 25: {
            TimeActive = input.ReadDouble();
            break;
          }
          case 33: {
            TimeMaintenance = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            TimeOff = input.ReadDouble();
            break;
          }
          case 17: {
            TimeIdle = input.ReadDouble();
            break;
          }
          case 25: {
            TimeActive = input.ReadDouble();
            break;
          }
          case 33: {
            TimeMaintenance = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnergyUsePerStateInkWh : pb::IMessage<EnergyUsePerStateInkWh>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnergyUsePerStateInkWh> _parser = new pb::MessageParser<EnergyUsePerStateInkWh>(() => new EnergyUsePerStateInkWh());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EnergyUsePerStateInkWh> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ModularEmulator.Modules.Proto.ModuleDefinitionReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnergyUsePerStateInkWh() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnergyUsePerStateInkWh(EnergyUsePerStateInkWh other) : this() {
      energyOff_ = other.energyOff_;
      energyIdle_ = other.energyIdle_;
      energyActive_ = other.energyActive_;
      energyMaintenance_ = other.energyMaintenance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnergyUsePerStateInkWh Clone() {
      return new EnergyUsePerStateInkWh(this);
    }

    /// <summary>Field number for the "energyOff" field.</summary>
    public const int EnergyOffFieldNumber = 1;
    private double energyOff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double EnergyOff {
      get { return energyOff_; }
      set {
        energyOff_ = value;
      }
    }

    /// <summary>Field number for the "energyIdle" field.</summary>
    public const int EnergyIdleFieldNumber = 2;
    private double energyIdle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double EnergyIdle {
      get { return energyIdle_; }
      set {
        energyIdle_ = value;
      }
    }

    /// <summary>Field number for the "energyActive" field.</summary>
    public const int EnergyActiveFieldNumber = 3;
    private double energyActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double EnergyActive {
      get { return energyActive_; }
      set {
        energyActive_ = value;
      }
    }

    /// <summary>Field number for the "energyMaintenance" field.</summary>
    public const int EnergyMaintenanceFieldNumber = 4;
    private double energyMaintenance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double EnergyMaintenance {
      get { return energyMaintenance_; }
      set {
        energyMaintenance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EnergyUsePerStateInkWh);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EnergyUsePerStateInkWh other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EnergyOff, other.EnergyOff)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EnergyIdle, other.EnergyIdle)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EnergyActive, other.EnergyActive)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EnergyMaintenance, other.EnergyMaintenance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EnergyOff != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EnergyOff);
      if (EnergyIdle != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EnergyIdle);
      if (EnergyActive != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EnergyActive);
      if (EnergyMaintenance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EnergyMaintenance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EnergyOff != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(EnergyOff);
      }
      if (EnergyIdle != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(EnergyIdle);
      }
      if (EnergyActive != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(EnergyActive);
      }
      if (EnergyMaintenance != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(EnergyMaintenance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EnergyOff != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(EnergyOff);
      }
      if (EnergyIdle != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(EnergyIdle);
      }
      if (EnergyActive != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(EnergyActive);
      }
      if (EnergyMaintenance != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(EnergyMaintenance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EnergyOff != 0D) {
        size += 1 + 8;
      }
      if (EnergyIdle != 0D) {
        size += 1 + 8;
      }
      if (EnergyActive != 0D) {
        size += 1 + 8;
      }
      if (EnergyMaintenance != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EnergyUsePerStateInkWh other) {
      if (other == null) {
        return;
      }
      if (other.EnergyOff != 0D) {
        EnergyOff = other.EnergyOff;
      }
      if (other.EnergyIdle != 0D) {
        EnergyIdle = other.EnergyIdle;
      }
      if (other.EnergyActive != 0D) {
        EnergyActive = other.EnergyActive;
      }
      if (other.EnergyMaintenance != 0D) {
        EnergyMaintenance = other.EnergyMaintenance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            EnergyOff = input.ReadDouble();
            break;
          }
          case 17: {
            EnergyIdle = input.ReadDouble();
            break;
          }
          case 25: {
            EnergyActive = input.ReadDouble();
            break;
          }
          case 33: {
            EnergyMaintenance = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            EnergyOff = input.ReadDouble();
            break;
          }
          case 17: {
            EnergyIdle = input.ReadDouble();
            break;
          }
          case 25: {
            EnergyActive = input.ReadDouble();
            break;
          }
          case 33: {
            EnergyMaintenance = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
