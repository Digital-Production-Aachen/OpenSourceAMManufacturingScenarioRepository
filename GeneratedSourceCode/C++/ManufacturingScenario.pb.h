// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ManufacturingScenario.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ManufacturingScenario_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ManufacturingScenario_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "build_processor_strategy.pb.h"
#include "ModuleDefinition.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ManufacturingScenario_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ManufacturingScenario_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ManufacturingScenario_2eproto;
namespace ManufacturingScenarioRepository {
class ManufacturingScenario;
struct ManufacturingScenarioDefaultTypeInternal;
extern ManufacturingScenarioDefaultTypeInternal _ManufacturingScenario_default_instance_;
class ManufacturingScenarioDataSet;
struct ManufacturingScenarioDataSetDefaultTypeInternal;
extern ManufacturingScenarioDataSetDefaultTypeInternal _ManufacturingScenarioDataSet_default_instance_;
class MovementConstrains;
struct MovementConstrainsDefaultTypeInternal;
extern MovementConstrainsDefaultTypeInternal _MovementConstrains_default_instance_;
class PartManufacturingOrder;
struct PartManufacturingOrderDefaultTypeInternal;
extern PartManufacturingOrderDefaultTypeInternal _PartManufacturingOrder_default_instance_;
class PartManufacturingOrder_ManufacturingPriority;
struct PartManufacturingOrder_ManufacturingPriorityDefaultTypeInternal;
extern PartManufacturingOrder_ManufacturingPriorityDefaultTypeInternal _PartManufacturingOrder_ManufacturingPriority_default_instance_;
}  // namespace ManufacturingScenarioRepository
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ManufacturingScenarioRepository {

// ===================================================================


// -------------------------------------------------------------------

class ManufacturingScenarioDataSet final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.ManufacturingScenarioDataSet) */ {
 public:
  inline ManufacturingScenarioDataSet() : ManufacturingScenarioDataSet(nullptr) {}
  ~ManufacturingScenarioDataSet() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ManufacturingScenarioDataSet(::google::protobuf::internal::ConstantInitialized);

  ManufacturingScenarioDataSet(const ManufacturingScenarioDataSet& from);
  ManufacturingScenarioDataSet(ManufacturingScenarioDataSet&& from) noexcept
    : ManufacturingScenarioDataSet() {
    *this = ::std::move(from);
  }

  inline ManufacturingScenarioDataSet& operator=(const ManufacturingScenarioDataSet& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManufacturingScenarioDataSet& operator=(ManufacturingScenarioDataSet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ManufacturingScenarioDataSet& default_instance() {
    return *internal_default_instance();
  }
  static inline const ManufacturingScenarioDataSet* internal_default_instance() {
    return reinterpret_cast<const ManufacturingScenarioDataSet*>(
               &_ManufacturingScenarioDataSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ManufacturingScenarioDataSet& a, ManufacturingScenarioDataSet& b) {
    a.Swap(&b);
  }
  inline void Swap(ManufacturingScenarioDataSet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManufacturingScenarioDataSet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ManufacturingScenarioDataSet* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ManufacturingScenarioDataSet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ManufacturingScenarioDataSet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ManufacturingScenarioDataSet& from) {
    ManufacturingScenarioDataSet::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ManufacturingScenarioDataSet* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.ManufacturingScenarioDataSet";
  }
  protected:
  explicit ManufacturingScenarioDataSet(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScenariosFieldNumber = 2,
    kNameFieldNumber = 1,
    kConstrainsFieldNumber = 3,
    kGeneratingBuildProcessorStrategyFieldNumber = 4,
    kUsedMachineModelFieldNumber = 5,
  };
  // repeated .ManufacturingScenarioRepository.ManufacturingScenario scenarios = 2;
  int scenarios_size() const;
  private:
  int _internal_scenarios_size() const;

  public:
  void clear_scenarios() ;
  ::ManufacturingScenarioRepository::ManufacturingScenario* mutable_scenarios(int index);
  ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ManufacturingScenario >*
      mutable_scenarios();
  private:
  const ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::ManufacturingScenario>& _internal_scenarios() const;
  ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::ManufacturingScenario>* _internal_mutable_scenarios();
  public:
  const ::ManufacturingScenarioRepository::ManufacturingScenario& scenarios(int index) const;
  ::ManufacturingScenarioRepository::ManufacturingScenario* add_scenarios();
  const ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ManufacturingScenario >&
      scenarios() const;
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .ManufacturingScenarioRepository.MovementConstrains constrains = 3;
  bool has_constrains() const;
  void clear_constrains() ;
  const ::ManufacturingScenarioRepository::MovementConstrains& constrains() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::MovementConstrains* release_constrains();
  ::ManufacturingScenarioRepository::MovementConstrains* mutable_constrains();
  void set_allocated_constrains(::ManufacturingScenarioRepository::MovementConstrains* value);
  void unsafe_arena_set_allocated_constrains(::ManufacturingScenarioRepository::MovementConstrains* value);
  ::ManufacturingScenarioRepository::MovementConstrains* unsafe_arena_release_constrains();

  private:
  const ::ManufacturingScenarioRepository::MovementConstrains& _internal_constrains() const;
  ::ManufacturingScenarioRepository::MovementConstrains* _internal_mutable_constrains();

  public:
  // .open_vector_format.BuildProcessorStrategy generating_build_processor_strategy = 4;
  bool has_generating_build_processor_strategy() const;
  void clear_generating_build_processor_strategy() ;
  const ::open_vector_format::BuildProcessorStrategy& generating_build_processor_strategy() const;
  PROTOBUF_NODISCARD ::open_vector_format::BuildProcessorStrategy* release_generating_build_processor_strategy();
  ::open_vector_format::BuildProcessorStrategy* mutable_generating_build_processor_strategy();
  void set_allocated_generating_build_processor_strategy(::open_vector_format::BuildProcessorStrategy* value);
  void unsafe_arena_set_allocated_generating_build_processor_strategy(::open_vector_format::BuildProcessorStrategy* value);
  ::open_vector_format::BuildProcessorStrategy* unsafe_arena_release_generating_build_processor_strategy();

  private:
  const ::open_vector_format::BuildProcessorStrategy& _internal_generating_build_processor_strategy() const;
  ::open_vector_format::BuildProcessorStrategy* _internal_mutable_generating_build_processor_strategy();

  public:
  // .ManufacturingScenarioRepository.Module used_machine_model = 5;
  bool has_used_machine_model() const;
  void clear_used_machine_model() ;
  const ::ManufacturingScenarioRepository::Module& used_machine_model() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::Module* release_used_machine_model();
  ::ManufacturingScenarioRepository::Module* mutable_used_machine_model();
  void set_allocated_used_machine_model(::ManufacturingScenarioRepository::Module* value);
  void unsafe_arena_set_allocated_used_machine_model(::ManufacturingScenarioRepository::Module* value);
  ::ManufacturingScenarioRepository::Module* unsafe_arena_release_used_machine_model();

  private:
  const ::ManufacturingScenarioRepository::Module& _internal_used_machine_model() const;
  ::ManufacturingScenarioRepository::Module* _internal_mutable_used_machine_model();

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.ManufacturingScenarioDataSet)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 4, 73, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ManufacturingScenario > scenarios_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::ManufacturingScenarioRepository::MovementConstrains* constrains_;
    ::open_vector_format::BuildProcessorStrategy* generating_build_processor_strategy_;
    ::ManufacturingScenarioRepository::Module* used_machine_model_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ManufacturingScenario_2eproto;
};// -------------------------------------------------------------------

class ManufacturingScenario final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.ManufacturingScenario) */ {
 public:
  inline ManufacturingScenario() : ManufacturingScenario(nullptr) {}
  ~ManufacturingScenario() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ManufacturingScenario(::google::protobuf::internal::ConstantInitialized);

  ManufacturingScenario(const ManufacturingScenario& from);
  ManufacturingScenario(ManufacturingScenario&& from) noexcept
    : ManufacturingScenario() {
    *this = ::std::move(from);
  }

  inline ManufacturingScenario& operator=(const ManufacturingScenario& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManufacturingScenario& operator=(ManufacturingScenario&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ManufacturingScenario& default_instance() {
    return *internal_default_instance();
  }
  enum MachineModelCase {
    kSpecificMachineModel = 5,
    kOverrideCuboidBuildVolume = 6,
    MACHINE_MODEL_NOT_SET = 0,
  };

  static inline const ManufacturingScenario* internal_default_instance() {
    return reinterpret_cast<const ManufacturingScenario*>(
               &_ManufacturingScenario_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ManufacturingScenario& a, ManufacturingScenario& b) {
    a.Swap(&b);
  }
  inline void Swap(ManufacturingScenario* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManufacturingScenario* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ManufacturingScenario* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ManufacturingScenario>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ManufacturingScenario& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ManufacturingScenario& from) {
    ManufacturingScenario::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ManufacturingScenario* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.ManufacturingScenario";
  }
  protected:
  explicit ManufacturingScenario(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPartManufacturingOrdersFieldNumber = 2,
    kNameFieldNumber = 1,
    kConstrainsFieldNumber = 3,
    kGeneratingBuildProcessorStrategyFieldNumber = 4,
    kSpecificMachineModelFieldNumber = 5,
    kOverrideCuboidBuildVolumeFieldNumber = 6,
  };
  // repeated .ManufacturingScenarioRepository.PartManufacturingOrder partManufacturingOrders = 2;
  int partmanufacturingorders_size() const;
  private:
  int _internal_partmanufacturingorders_size() const;

  public:
  void clear_partmanufacturingorders() ;
  ::ManufacturingScenarioRepository::PartManufacturingOrder* mutable_partmanufacturingorders(int index);
  ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::PartManufacturingOrder >*
      mutable_partmanufacturingorders();
  private:
  const ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::PartManufacturingOrder>& _internal_partmanufacturingorders() const;
  ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::PartManufacturingOrder>* _internal_mutable_partmanufacturingorders();
  public:
  const ::ManufacturingScenarioRepository::PartManufacturingOrder& partmanufacturingorders(int index) const;
  ::ManufacturingScenarioRepository::PartManufacturingOrder* add_partmanufacturingorders();
  const ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::PartManufacturingOrder >&
      partmanufacturingorders() const;
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .ManufacturingScenarioRepository.MovementConstrains constrains = 3;
  bool has_constrains() const;
  void clear_constrains() ;
  const ::ManufacturingScenarioRepository::MovementConstrains& constrains() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::MovementConstrains* release_constrains();
  ::ManufacturingScenarioRepository::MovementConstrains* mutable_constrains();
  void set_allocated_constrains(::ManufacturingScenarioRepository::MovementConstrains* value);
  void unsafe_arena_set_allocated_constrains(::ManufacturingScenarioRepository::MovementConstrains* value);
  ::ManufacturingScenarioRepository::MovementConstrains* unsafe_arena_release_constrains();

  private:
  const ::ManufacturingScenarioRepository::MovementConstrains& _internal_constrains() const;
  ::ManufacturingScenarioRepository::MovementConstrains* _internal_mutable_constrains();

  public:
  // .open_vector_format.BuildProcessorStrategy generating_build_processor_strategy = 4;
  bool has_generating_build_processor_strategy() const;
  void clear_generating_build_processor_strategy() ;
  const ::open_vector_format::BuildProcessorStrategy& generating_build_processor_strategy() const;
  PROTOBUF_NODISCARD ::open_vector_format::BuildProcessorStrategy* release_generating_build_processor_strategy();
  ::open_vector_format::BuildProcessorStrategy* mutable_generating_build_processor_strategy();
  void set_allocated_generating_build_processor_strategy(::open_vector_format::BuildProcessorStrategy* value);
  void unsafe_arena_set_allocated_generating_build_processor_strategy(::open_vector_format::BuildProcessorStrategy* value);
  ::open_vector_format::BuildProcessorStrategy* unsafe_arena_release_generating_build_processor_strategy();

  private:
  const ::open_vector_format::BuildProcessorStrategy& _internal_generating_build_processor_strategy() const;
  ::open_vector_format::BuildProcessorStrategy* _internal_mutable_generating_build_processor_strategy();

  public:
  // .ManufacturingScenarioRepository.Module specific_machine_model = 5;
  bool has_specific_machine_model() const;
  private:
  bool _internal_has_specific_machine_model() const;

  public:
  void clear_specific_machine_model() ;
  const ::ManufacturingScenarioRepository::Module& specific_machine_model() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::Module* release_specific_machine_model();
  ::ManufacturingScenarioRepository::Module* mutable_specific_machine_model();
  void set_allocated_specific_machine_model(::ManufacturingScenarioRepository::Module* value);
  void unsafe_arena_set_allocated_specific_machine_model(::ManufacturingScenarioRepository::Module* value);
  ::ManufacturingScenarioRepository::Module* unsafe_arena_release_specific_machine_model();

  private:
  const ::ManufacturingScenarioRepository::Module& _internal_specific_machine_model() const;
  ::ManufacturingScenarioRepository::Module* _internal_mutable_specific_machine_model();

  public:
  // .ManufacturingScenarioRepository.CuboidBuildVolumeParams override_cuboid_build_volume = 6;
  bool has_override_cuboid_build_volume() const;
  private:
  bool _internal_has_override_cuboid_build_volume() const;

  public:
  void clear_override_cuboid_build_volume() ;
  const ::ManufacturingScenarioRepository::CuboidBuildVolumeParams& override_cuboid_build_volume() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* release_override_cuboid_build_volume();
  ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* mutable_override_cuboid_build_volume();
  void set_allocated_override_cuboid_build_volume(::ManufacturingScenarioRepository::CuboidBuildVolumeParams* value);
  void unsafe_arena_set_allocated_override_cuboid_build_volume(::ManufacturingScenarioRepository::CuboidBuildVolumeParams* value);
  ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* unsafe_arena_release_override_cuboid_build_volume();

  private:
  const ::ManufacturingScenarioRepository::CuboidBuildVolumeParams& _internal_override_cuboid_build_volume() const;
  ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* _internal_mutable_override_cuboid_build_volume();

  public:
  void clear_machine_model();
  MachineModelCase machine_model_case() const;
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.ManufacturingScenario)
 private:
  class _Internal;
  void set_has_specific_machine_model();
  void set_has_override_cuboid_build_volume();

  inline bool has_machine_model() const;
  inline void clear_has_machine_model();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 6, 5, 66, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::PartManufacturingOrder > partmanufacturingorders_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::ManufacturingScenarioRepository::MovementConstrains* constrains_;
    ::open_vector_format::BuildProcessorStrategy* generating_build_processor_strategy_;
    union MachineModelUnion {
      constexpr MachineModelUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ManufacturingScenarioRepository::Module* specific_machine_model_;
      ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* override_cuboid_build_volume_;
    } machine_model_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ManufacturingScenario_2eproto;
};// -------------------------------------------------------------------

class MovementConstrains final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.MovementConstrains) */ {
 public:
  inline MovementConstrains() : MovementConstrains(nullptr) {}
  ~MovementConstrains() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MovementConstrains(::google::protobuf::internal::ConstantInitialized);

  MovementConstrains(const MovementConstrains& from);
  MovementConstrains(MovementConstrains&& from) noexcept
    : MovementConstrains() {
    *this = ::std::move(from);
  }

  inline MovementConstrains& operator=(const MovementConstrains& from) {
    CopyFrom(from);
    return *this;
  }
  inline MovementConstrains& operator=(MovementConstrains&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MovementConstrains& default_instance() {
    return *internal_default_instance();
  }
  static inline const MovementConstrains* internal_default_instance() {
    return reinterpret_cast<const MovementConstrains*>(
               &_MovementConstrains_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MovementConstrains& a, MovementConstrains& b) {
    a.Swap(&b);
  }
  inline void Swap(MovementConstrains* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MovementConstrains* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MovementConstrains* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MovementConstrains>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MovementConstrains& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MovementConstrains& from) {
    MovementConstrains::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MovementConstrains* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.MovementConstrains";
  }
  protected:
  explicit MovementConstrains(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinimumDistanceInMmFieldNumber = 1,
    kDistanceToContainerInMmFieldNumber = 2,
    kMaxRotZAngleDegFieldNumber = 4,
    kMinRotZAngleDegFieldNumber = 5,
    kAllowedFullCircleRotationStepsZFieldNumber = 3,
  };
  // double minimum_distance_in_mm = 1;
  void clear_minimum_distance_in_mm() ;
  double minimum_distance_in_mm() const;
  void set_minimum_distance_in_mm(double value);

  private:
  double _internal_minimum_distance_in_mm() const;
  void _internal_set_minimum_distance_in_mm(double value);

  public:
  // double distance_to_container_in_mm = 2;
  void clear_distance_to_container_in_mm() ;
  double distance_to_container_in_mm() const;
  void set_distance_to_container_in_mm(double value);

  private:
  double _internal_distance_to_container_in_mm() const;
  void _internal_set_distance_to_container_in_mm(double value);

  public:
  // double max_rot_z_angle_deg = 4;
  void clear_max_rot_z_angle_deg() ;
  double max_rot_z_angle_deg() const;
  void set_max_rot_z_angle_deg(double value);

  private:
  double _internal_max_rot_z_angle_deg() const;
  void _internal_set_max_rot_z_angle_deg(double value);

  public:
  // double min_rot_z_angle_deg = 5;
  void clear_min_rot_z_angle_deg() ;
  double min_rot_z_angle_deg() const;
  void set_min_rot_z_angle_deg(double value);

  private:
  double _internal_min_rot_z_angle_deg() const;
  void _internal_set_min_rot_z_angle_deg(double value);

  public:
  // int32 allowed_full_circle_rotation_steps_z = 3;
  void clear_allowed_full_circle_rotation_steps_z() ;
  ::int32_t allowed_full_circle_rotation_steps_z() const;
  void set_allowed_full_circle_rotation_steps_z(::int32_t value);

  private:
  ::int32_t _internal_allowed_full_circle_rotation_steps_z() const;
  void _internal_set_allowed_full_circle_rotation_steps_z(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.MovementConstrains)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double minimum_distance_in_mm_;
    double distance_to_container_in_mm_;
    double max_rot_z_angle_deg_;
    double min_rot_z_angle_deg_;
    ::int32_t allowed_full_circle_rotation_steps_z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ManufacturingScenario_2eproto;
};// -------------------------------------------------------------------

class PartManufacturingOrder_ManufacturingPriority final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority) */ {
 public:
  inline PartManufacturingOrder_ManufacturingPriority() : PartManufacturingOrder_ManufacturingPriority(nullptr) {}
  ~PartManufacturingOrder_ManufacturingPriority() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PartManufacturingOrder_ManufacturingPriority(::google::protobuf::internal::ConstantInitialized);

  PartManufacturingOrder_ManufacturingPriority(const PartManufacturingOrder_ManufacturingPriority& from);
  PartManufacturingOrder_ManufacturingPriority(PartManufacturingOrder_ManufacturingPriority&& from) noexcept
    : PartManufacturingOrder_ManufacturingPriority() {
    *this = ::std::move(from);
  }

  inline PartManufacturingOrder_ManufacturingPriority& operator=(const PartManufacturingOrder_ManufacturingPriority& from) {
    CopyFrom(from);
    return *this;
  }
  inline PartManufacturingOrder_ManufacturingPriority& operator=(PartManufacturingOrder_ManufacturingPriority&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PartManufacturingOrder_ManufacturingPriority& default_instance() {
    return *internal_default_instance();
  }
  static inline const PartManufacturingOrder_ManufacturingPriority* internal_default_instance() {
    return reinterpret_cast<const PartManufacturingOrder_ManufacturingPriority*>(
               &_PartManufacturingOrder_ManufacturingPriority_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PartManufacturingOrder_ManufacturingPriority& a, PartManufacturingOrder_ManufacturingPriority& b) {
    a.Swap(&b);
  }
  inline void Swap(PartManufacturingOrder_ManufacturingPriority* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PartManufacturingOrder_ManufacturingPriority* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PartManufacturingOrder_ManufacturingPriority* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PartManufacturingOrder_ManufacturingPriority>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PartManufacturingOrder_ManufacturingPriority& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PartManufacturingOrder_ManufacturingPriority& from) {
    PartManufacturingOrder_ManufacturingPriority::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PartManufacturingOrder_ManufacturingPriority* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority";
  }
  protected:
  explicit PartManufacturingOrder_ManufacturingPriority(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPricePriorityFieldNumber = 1,
    kDueDatePriorityFieldNumber = 2,
    kQualityPriorityFieldNumber = 3,
  };
  // double price_priority = 1;
  void clear_price_priority() ;
  double price_priority() const;
  void set_price_priority(double value);

  private:
  double _internal_price_priority() const;
  void _internal_set_price_priority(double value);

  public:
  // double due_date_priority = 2;
  void clear_due_date_priority() ;
  double due_date_priority() const;
  void set_due_date_priority(double value);

  private:
  double _internal_due_date_priority() const;
  void _internal_set_due_date_priority(double value);

  public:
  // double quality_priority = 3;
  void clear_quality_priority() ;
  double quality_priority() const;
  void set_quality_priority(double value);

  private:
  double _internal_quality_priority() const;
  void _internal_set_quality_priority(double value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double price_priority_;
    double due_date_priority_;
    double quality_priority_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ManufacturingScenario_2eproto;
};// -------------------------------------------------------------------

class PartManufacturingOrder final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.PartManufacturingOrder) */ {
 public:
  inline PartManufacturingOrder() : PartManufacturingOrder(nullptr) {}
  ~PartManufacturingOrder() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PartManufacturingOrder(::google::protobuf::internal::ConstantInitialized);

  PartManufacturingOrder(const PartManufacturingOrder& from);
  PartManufacturingOrder(PartManufacturingOrder&& from) noexcept
    : PartManufacturingOrder() {
    *this = ::std::move(from);
  }

  inline PartManufacturingOrder& operator=(const PartManufacturingOrder& from) {
    CopyFrom(from);
    return *this;
  }
  inline PartManufacturingOrder& operator=(PartManufacturingOrder&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PartManufacturingOrder& default_instance() {
    return *internal_default_instance();
  }
  static inline const PartManufacturingOrder* internal_default_instance() {
    return reinterpret_cast<const PartManufacturingOrder*>(
               &_PartManufacturingOrder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PartManufacturingOrder& a, PartManufacturingOrder& b) {
    a.Swap(&b);
  }
  inline void Swap(PartManufacturingOrder* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PartManufacturingOrder* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PartManufacturingOrder* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PartManufacturingOrder>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PartManufacturingOrder& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PartManufacturingOrder& from) {
    PartManufacturingOrder::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PartManufacturingOrder* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.PartManufacturingOrder";
  }
  protected:
  explicit PartManufacturingOrder(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PartManufacturingOrder_ManufacturingPriority ManufacturingPriority;

  // accessors -------------------------------------------------------

  enum : int {
    kPmoIdFieldNumber = 1,
    kPartIdFieldNumber = 2,
    kMaterialFieldNumber = 7,
    kPrioritiesFieldNumber = 8,
    kPartNumTrianglesFieldNumber = 3,
    kQuantityToManufactureFieldNumber = 4,
    kDueTimeInSecondsFieldNumber = 5,
    kOrderCreationTimeDelayInSecondsFieldNumber = 6,
  };
  // string pmo_id = 1;
  void clear_pmo_id() ;
  const std::string& pmo_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pmo_id(Arg_&& arg, Args_... args);
  std::string* mutable_pmo_id();
  PROTOBUF_NODISCARD std::string* release_pmo_id();
  void set_allocated_pmo_id(std::string* ptr);

  private:
  const std::string& _internal_pmo_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pmo_id(
      const std::string& value);
  std::string* _internal_mutable_pmo_id();

  public:
  // string part_id = 2;
  void clear_part_id() ;
  const std::string& part_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_part_id(Arg_&& arg, Args_... args);
  std::string* mutable_part_id();
  PROTOBUF_NODISCARD std::string* release_part_id();
  void set_allocated_part_id(std::string* ptr);

  private:
  const std::string& _internal_part_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_part_id(
      const std::string& value);
  std::string* _internal_mutable_part_id();

  public:
  // string material = 7;
  void clear_material() ;
  const std::string& material() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_material(Arg_&& arg, Args_... args);
  std::string* mutable_material();
  PROTOBUF_NODISCARD std::string* release_material();
  void set_allocated_material(std::string* ptr);

  private:
  const std::string& _internal_material() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_material(
      const std::string& value);
  std::string* _internal_mutable_material();

  public:
  // .ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority priorities = 8;
  bool has_priorities() const;
  void clear_priorities() ;
  const ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority& priorities() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* release_priorities();
  ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* mutable_priorities();
  void set_allocated_priorities(::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* value);
  void unsafe_arena_set_allocated_priorities(::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* value);
  ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* unsafe_arena_release_priorities();

  private:
  const ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority& _internal_priorities() const;
  ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* _internal_mutable_priorities();

  public:
  // int32 part_num_triangles = 3;
  void clear_part_num_triangles() ;
  ::int32_t part_num_triangles() const;
  void set_part_num_triangles(::int32_t value);

  private:
  ::int32_t _internal_part_num_triangles() const;
  void _internal_set_part_num_triangles(::int32_t value);

  public:
  // int32 quantity_to_manufacture = 4;
  void clear_quantity_to_manufacture() ;
  ::int32_t quantity_to_manufacture() const;
  void set_quantity_to_manufacture(::int32_t value);

  private:
  ::int32_t _internal_quantity_to_manufacture() const;
  void _internal_set_quantity_to_manufacture(::int32_t value);

  public:
  // int64 due_time_in_seconds = 5;
  void clear_due_time_in_seconds() ;
  ::int64_t due_time_in_seconds() const;
  void set_due_time_in_seconds(::int64_t value);

  private:
  ::int64_t _internal_due_time_in_seconds() const;
  void _internal_set_due_time_in_seconds(::int64_t value);

  public:
  // int64 order_creation_time_delay_in_seconds = 6;
  void clear_order_creation_time_delay_in_seconds() ;
  ::int64_t order_creation_time_delay_in_seconds() const;
  void set_order_creation_time_delay_in_seconds(::int64_t value);

  private:
  ::int64_t _internal_order_creation_time_delay_in_seconds() const;
  void _internal_set_order_creation_time_delay_in_seconds(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.PartManufacturingOrder)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8, 1, 92, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr pmo_id_;
    ::google::protobuf::internal::ArenaStringPtr part_id_;
    ::google::protobuf::internal::ArenaStringPtr material_;
    ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* priorities_;
    ::int32_t part_num_triangles_;
    ::int32_t quantity_to_manufacture_;
    ::int64_t due_time_in_seconds_;
    ::int64_t order_creation_time_delay_in_seconds_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ManufacturingScenario_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ManufacturingScenarioDataSet

// string name = 1;
inline void ManufacturingScenarioDataSet::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ManufacturingScenarioDataSet::name() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ManufacturingScenarioDataSet::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.name)
}
inline std::string* ManufacturingScenarioDataSet::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.name)
  return _s;
}
inline const std::string& ManufacturingScenarioDataSet::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void ManufacturingScenarioDataSet::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ManufacturingScenarioDataSet::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* ManufacturingScenarioDataSet::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.name)
  return _impl_.name_.Release();
}
inline void ManufacturingScenarioDataSet::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.name)
}

// repeated .ManufacturingScenarioRepository.ManufacturingScenario scenarios = 2;
inline int ManufacturingScenarioDataSet::_internal_scenarios_size() const {
  return _internal_scenarios().size();
}
inline int ManufacturingScenarioDataSet::scenarios_size() const {
  return _internal_scenarios_size();
}
inline void ManufacturingScenarioDataSet::clear_scenarios() {
  _internal_mutable_scenarios()->Clear();
}
inline ::ManufacturingScenarioRepository::ManufacturingScenario* ManufacturingScenarioDataSet::mutable_scenarios(int index) {
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.scenarios)
  return _internal_mutable_scenarios()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ManufacturingScenario >*
ManufacturingScenarioDataSet::mutable_scenarios() {
  // @@protoc_insertion_point(field_mutable_list:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.scenarios)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_scenarios();
}
inline const ::ManufacturingScenarioRepository::ManufacturingScenario& ManufacturingScenarioDataSet::scenarios(int index) const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.scenarios)
    return _internal_scenarios().Get(index);
}
inline ::ManufacturingScenarioRepository::ManufacturingScenario* ManufacturingScenarioDataSet::add_scenarios() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::ManufacturingScenarioRepository::ManufacturingScenario* _add = _internal_mutable_scenarios()->Add();
  // @@protoc_insertion_point(field_add:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.scenarios)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ManufacturingScenario >&
ManufacturingScenarioDataSet::scenarios() const {
  // @@protoc_insertion_point(field_list:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.scenarios)
  return _internal_scenarios();
}
inline const ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::ManufacturingScenario>&
ManufacturingScenarioDataSet::_internal_scenarios() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.scenarios_;
}
inline ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::ManufacturingScenario>*
ManufacturingScenarioDataSet::_internal_mutable_scenarios() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.scenarios_;
}

// .ManufacturingScenarioRepository.MovementConstrains constrains = 3;
inline bool ManufacturingScenarioDataSet::has_constrains() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.constrains_ != nullptr);
  return value;
}
inline void ManufacturingScenarioDataSet::clear_constrains() {
  if (_impl_.constrains_ != nullptr) _impl_.constrains_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ManufacturingScenarioRepository::MovementConstrains& ManufacturingScenarioDataSet::_internal_constrains() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::MovementConstrains* p = _impl_.constrains_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::MovementConstrains&>(::ManufacturingScenarioRepository::_MovementConstrains_default_instance_);
}
inline const ::ManufacturingScenarioRepository::MovementConstrains& ManufacturingScenarioDataSet::constrains() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.constrains)
  return _internal_constrains();
}
inline void ManufacturingScenarioDataSet::unsafe_arena_set_allocated_constrains(::ManufacturingScenarioRepository::MovementConstrains* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.constrains_);
  }
  _impl_.constrains_ = reinterpret_cast<::ManufacturingScenarioRepository::MovementConstrains*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.constrains)
}
inline ::ManufacturingScenarioRepository::MovementConstrains* ManufacturingScenarioDataSet::release_constrains() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::MovementConstrains* released = _impl_.constrains_;
  _impl_.constrains_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::MovementConstrains* ManufacturingScenarioDataSet::unsafe_arena_release_constrains() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.constrains)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::MovementConstrains* temp = _impl_.constrains_;
  _impl_.constrains_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::MovementConstrains* ManufacturingScenarioDataSet::_internal_mutable_constrains() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.constrains_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::MovementConstrains>(GetArenaForAllocation());
    _impl_.constrains_ = reinterpret_cast<::ManufacturingScenarioRepository::MovementConstrains*>(p);
  }
  return _impl_.constrains_;
}
inline ::ManufacturingScenarioRepository::MovementConstrains* ManufacturingScenarioDataSet::mutable_constrains() {
  ::ManufacturingScenarioRepository::MovementConstrains* _msg = _internal_mutable_constrains();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.constrains)
  return _msg;
}
inline void ManufacturingScenarioDataSet::set_allocated_constrains(::ManufacturingScenarioRepository::MovementConstrains* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::MovementConstrains*>(_impl_.constrains_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::MovementConstrains*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.constrains_ = reinterpret_cast<::ManufacturingScenarioRepository::MovementConstrains*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.constrains)
}

// .open_vector_format.BuildProcessorStrategy generating_build_processor_strategy = 4;
inline bool ManufacturingScenarioDataSet::has_generating_build_processor_strategy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.generating_build_processor_strategy_ != nullptr);
  return value;
}
inline const ::open_vector_format::BuildProcessorStrategy& ManufacturingScenarioDataSet::_internal_generating_build_processor_strategy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::open_vector_format::BuildProcessorStrategy* p = _impl_.generating_build_processor_strategy_;
  return p != nullptr ? *p : reinterpret_cast<const ::open_vector_format::BuildProcessorStrategy&>(::open_vector_format::_BuildProcessorStrategy_default_instance_);
}
inline const ::open_vector_format::BuildProcessorStrategy& ManufacturingScenarioDataSet::generating_build_processor_strategy() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.generating_build_processor_strategy)
  return _internal_generating_build_processor_strategy();
}
inline void ManufacturingScenarioDataSet::unsafe_arena_set_allocated_generating_build_processor_strategy(::open_vector_format::BuildProcessorStrategy* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.generating_build_processor_strategy_);
  }
  _impl_.generating_build_processor_strategy_ = reinterpret_cast<::open_vector_format::BuildProcessorStrategy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.generating_build_processor_strategy)
}
inline ::open_vector_format::BuildProcessorStrategy* ManufacturingScenarioDataSet::release_generating_build_processor_strategy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::open_vector_format::BuildProcessorStrategy* released = _impl_.generating_build_processor_strategy_;
  _impl_.generating_build_processor_strategy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::open_vector_format::BuildProcessorStrategy* ManufacturingScenarioDataSet::unsafe_arena_release_generating_build_processor_strategy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.generating_build_processor_strategy)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::open_vector_format::BuildProcessorStrategy* temp = _impl_.generating_build_processor_strategy_;
  _impl_.generating_build_processor_strategy_ = nullptr;
  return temp;
}
inline ::open_vector_format::BuildProcessorStrategy* ManufacturingScenarioDataSet::_internal_mutable_generating_build_processor_strategy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.generating_build_processor_strategy_ == nullptr) {
    auto* p = CreateMaybeMessage<::open_vector_format::BuildProcessorStrategy>(GetArenaForAllocation());
    _impl_.generating_build_processor_strategy_ = reinterpret_cast<::open_vector_format::BuildProcessorStrategy*>(p);
  }
  return _impl_.generating_build_processor_strategy_;
}
inline ::open_vector_format::BuildProcessorStrategy* ManufacturingScenarioDataSet::mutable_generating_build_processor_strategy() {
  ::open_vector_format::BuildProcessorStrategy* _msg = _internal_mutable_generating_build_processor_strategy();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.generating_build_processor_strategy)
  return _msg;
}
inline void ManufacturingScenarioDataSet::set_allocated_generating_build_processor_strategy(::open_vector_format::BuildProcessorStrategy* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.generating_build_processor_strategy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.generating_build_processor_strategy_ = reinterpret_cast<::open_vector_format::BuildProcessorStrategy*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.generating_build_processor_strategy)
}

// .ManufacturingScenarioRepository.Module used_machine_model = 5;
inline bool ManufacturingScenarioDataSet::has_used_machine_model() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.used_machine_model_ != nullptr);
  return value;
}
inline const ::ManufacturingScenarioRepository::Module& ManufacturingScenarioDataSet::_internal_used_machine_model() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::Module* p = _impl_.used_machine_model_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::Module&>(::ManufacturingScenarioRepository::_Module_default_instance_);
}
inline const ::ManufacturingScenarioRepository::Module& ManufacturingScenarioDataSet::used_machine_model() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.used_machine_model)
  return _internal_used_machine_model();
}
inline void ManufacturingScenarioDataSet::unsafe_arena_set_allocated_used_machine_model(::ManufacturingScenarioRepository::Module* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.used_machine_model_);
  }
  _impl_.used_machine_model_ = reinterpret_cast<::ManufacturingScenarioRepository::Module*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.used_machine_model)
}
inline ::ManufacturingScenarioRepository::Module* ManufacturingScenarioDataSet::release_used_machine_model() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ManufacturingScenarioRepository::Module* released = _impl_.used_machine_model_;
  _impl_.used_machine_model_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::Module* ManufacturingScenarioDataSet::unsafe_arena_release_used_machine_model() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.used_machine_model)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ManufacturingScenarioRepository::Module* temp = _impl_.used_machine_model_;
  _impl_.used_machine_model_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::Module* ManufacturingScenarioDataSet::_internal_mutable_used_machine_model() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.used_machine_model_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::Module>(GetArenaForAllocation());
    _impl_.used_machine_model_ = reinterpret_cast<::ManufacturingScenarioRepository::Module*>(p);
  }
  return _impl_.used_machine_model_;
}
inline ::ManufacturingScenarioRepository::Module* ManufacturingScenarioDataSet::mutable_used_machine_model() {
  ::ManufacturingScenarioRepository::Module* _msg = _internal_mutable_used_machine_model();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.used_machine_model)
  return _msg;
}
inline void ManufacturingScenarioDataSet::set_allocated_used_machine_model(::ManufacturingScenarioRepository::Module* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.used_machine_model_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.used_machine_model_ = reinterpret_cast<::ManufacturingScenarioRepository::Module*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.ManufacturingScenarioDataSet.used_machine_model)
}

// -------------------------------------------------------------------

// ManufacturingScenario

// string name = 1;
inline void ManufacturingScenario::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ManufacturingScenario::name() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ManufacturingScenario.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ManufacturingScenario::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.ManufacturingScenario.name)
}
inline std::string* ManufacturingScenario::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ManufacturingScenario.name)
  return _s;
}
inline const std::string& ManufacturingScenario::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void ManufacturingScenario::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ManufacturingScenario::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* ManufacturingScenario::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ManufacturingScenario.name)
  return _impl_.name_.Release();
}
inline void ManufacturingScenario::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.ManufacturingScenario.name)
}

// repeated .ManufacturingScenarioRepository.PartManufacturingOrder partManufacturingOrders = 2;
inline int ManufacturingScenario::_internal_partmanufacturingorders_size() const {
  return _internal_partmanufacturingorders().size();
}
inline int ManufacturingScenario::partmanufacturingorders_size() const {
  return _internal_partmanufacturingorders_size();
}
inline void ManufacturingScenario::clear_partmanufacturingorders() {
  _internal_mutable_partmanufacturingorders()->Clear();
}
inline ::ManufacturingScenarioRepository::PartManufacturingOrder* ManufacturingScenario::mutable_partmanufacturingorders(int index) {
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ManufacturingScenario.partManufacturingOrders)
  return _internal_mutable_partmanufacturingorders()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::PartManufacturingOrder >*
ManufacturingScenario::mutable_partmanufacturingorders() {
  // @@protoc_insertion_point(field_mutable_list:ManufacturingScenarioRepository.ManufacturingScenario.partManufacturingOrders)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_partmanufacturingorders();
}
inline const ::ManufacturingScenarioRepository::PartManufacturingOrder& ManufacturingScenario::partmanufacturingorders(int index) const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ManufacturingScenario.partManufacturingOrders)
    return _internal_partmanufacturingorders().Get(index);
}
inline ::ManufacturingScenarioRepository::PartManufacturingOrder* ManufacturingScenario::add_partmanufacturingorders() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::ManufacturingScenarioRepository::PartManufacturingOrder* _add = _internal_mutable_partmanufacturingorders()->Add();
  // @@protoc_insertion_point(field_add:ManufacturingScenarioRepository.ManufacturingScenario.partManufacturingOrders)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::PartManufacturingOrder >&
ManufacturingScenario::partmanufacturingorders() const {
  // @@protoc_insertion_point(field_list:ManufacturingScenarioRepository.ManufacturingScenario.partManufacturingOrders)
  return _internal_partmanufacturingorders();
}
inline const ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::PartManufacturingOrder>&
ManufacturingScenario::_internal_partmanufacturingorders() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.partmanufacturingorders_;
}
inline ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::PartManufacturingOrder>*
ManufacturingScenario::_internal_mutable_partmanufacturingorders() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.partmanufacturingorders_;
}

// .ManufacturingScenarioRepository.MovementConstrains constrains = 3;
inline bool ManufacturingScenario::has_constrains() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.constrains_ != nullptr);
  return value;
}
inline void ManufacturingScenario::clear_constrains() {
  if (_impl_.constrains_ != nullptr) _impl_.constrains_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ManufacturingScenarioRepository::MovementConstrains& ManufacturingScenario::_internal_constrains() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::MovementConstrains* p = _impl_.constrains_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::MovementConstrains&>(::ManufacturingScenarioRepository::_MovementConstrains_default_instance_);
}
inline const ::ManufacturingScenarioRepository::MovementConstrains& ManufacturingScenario::constrains() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ManufacturingScenario.constrains)
  return _internal_constrains();
}
inline void ManufacturingScenario::unsafe_arena_set_allocated_constrains(::ManufacturingScenarioRepository::MovementConstrains* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.constrains_);
  }
  _impl_.constrains_ = reinterpret_cast<::ManufacturingScenarioRepository::MovementConstrains*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ManufacturingScenario.constrains)
}
inline ::ManufacturingScenarioRepository::MovementConstrains* ManufacturingScenario::release_constrains() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::MovementConstrains* released = _impl_.constrains_;
  _impl_.constrains_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::MovementConstrains* ManufacturingScenario::unsafe_arena_release_constrains() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ManufacturingScenario.constrains)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::MovementConstrains* temp = _impl_.constrains_;
  _impl_.constrains_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::MovementConstrains* ManufacturingScenario::_internal_mutable_constrains() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.constrains_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::MovementConstrains>(GetArenaForAllocation());
    _impl_.constrains_ = reinterpret_cast<::ManufacturingScenarioRepository::MovementConstrains*>(p);
  }
  return _impl_.constrains_;
}
inline ::ManufacturingScenarioRepository::MovementConstrains* ManufacturingScenario::mutable_constrains() {
  ::ManufacturingScenarioRepository::MovementConstrains* _msg = _internal_mutable_constrains();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ManufacturingScenario.constrains)
  return _msg;
}
inline void ManufacturingScenario::set_allocated_constrains(::ManufacturingScenarioRepository::MovementConstrains* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::MovementConstrains*>(_impl_.constrains_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::MovementConstrains*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.constrains_ = reinterpret_cast<::ManufacturingScenarioRepository::MovementConstrains*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.ManufacturingScenario.constrains)
}

// .open_vector_format.BuildProcessorStrategy generating_build_processor_strategy = 4;
inline bool ManufacturingScenario::has_generating_build_processor_strategy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.generating_build_processor_strategy_ != nullptr);
  return value;
}
inline const ::open_vector_format::BuildProcessorStrategy& ManufacturingScenario::_internal_generating_build_processor_strategy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::open_vector_format::BuildProcessorStrategy* p = _impl_.generating_build_processor_strategy_;
  return p != nullptr ? *p : reinterpret_cast<const ::open_vector_format::BuildProcessorStrategy&>(::open_vector_format::_BuildProcessorStrategy_default_instance_);
}
inline const ::open_vector_format::BuildProcessorStrategy& ManufacturingScenario::generating_build_processor_strategy() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ManufacturingScenario.generating_build_processor_strategy)
  return _internal_generating_build_processor_strategy();
}
inline void ManufacturingScenario::unsafe_arena_set_allocated_generating_build_processor_strategy(::open_vector_format::BuildProcessorStrategy* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.generating_build_processor_strategy_);
  }
  _impl_.generating_build_processor_strategy_ = reinterpret_cast<::open_vector_format::BuildProcessorStrategy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ManufacturingScenario.generating_build_processor_strategy)
}
inline ::open_vector_format::BuildProcessorStrategy* ManufacturingScenario::release_generating_build_processor_strategy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::open_vector_format::BuildProcessorStrategy* released = _impl_.generating_build_processor_strategy_;
  _impl_.generating_build_processor_strategy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::open_vector_format::BuildProcessorStrategy* ManufacturingScenario::unsafe_arena_release_generating_build_processor_strategy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ManufacturingScenario.generating_build_processor_strategy)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::open_vector_format::BuildProcessorStrategy* temp = _impl_.generating_build_processor_strategy_;
  _impl_.generating_build_processor_strategy_ = nullptr;
  return temp;
}
inline ::open_vector_format::BuildProcessorStrategy* ManufacturingScenario::_internal_mutable_generating_build_processor_strategy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.generating_build_processor_strategy_ == nullptr) {
    auto* p = CreateMaybeMessage<::open_vector_format::BuildProcessorStrategy>(GetArenaForAllocation());
    _impl_.generating_build_processor_strategy_ = reinterpret_cast<::open_vector_format::BuildProcessorStrategy*>(p);
  }
  return _impl_.generating_build_processor_strategy_;
}
inline ::open_vector_format::BuildProcessorStrategy* ManufacturingScenario::mutable_generating_build_processor_strategy() {
  ::open_vector_format::BuildProcessorStrategy* _msg = _internal_mutable_generating_build_processor_strategy();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ManufacturingScenario.generating_build_processor_strategy)
  return _msg;
}
inline void ManufacturingScenario::set_allocated_generating_build_processor_strategy(::open_vector_format::BuildProcessorStrategy* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.generating_build_processor_strategy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.generating_build_processor_strategy_ = reinterpret_cast<::open_vector_format::BuildProcessorStrategy*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.ManufacturingScenario.generating_build_processor_strategy)
}

// .ManufacturingScenarioRepository.Module specific_machine_model = 5;
inline bool ManufacturingScenario::has_specific_machine_model() const {
  return machine_model_case() == kSpecificMachineModel;
}
inline bool ManufacturingScenario::_internal_has_specific_machine_model() const {
  return machine_model_case() == kSpecificMachineModel;
}
inline void ManufacturingScenario::set_has_specific_machine_model() {
  _impl_._oneof_case_[0] = kSpecificMachineModel;
}
inline ::ManufacturingScenarioRepository::Module* ManufacturingScenario::release_specific_machine_model() {
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ManufacturingScenario.specific_machine_model)
  if (machine_model_case() == kSpecificMachineModel) {
    clear_has_machine_model();
    ::ManufacturingScenarioRepository::Module* temp = _impl_.machine_model_.specific_machine_model_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.machine_model_.specific_machine_model_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ManufacturingScenarioRepository::Module& ManufacturingScenario::_internal_specific_machine_model() const {
  return machine_model_case() == kSpecificMachineModel
      ? *_impl_.machine_model_.specific_machine_model_
      : reinterpret_cast<::ManufacturingScenarioRepository::Module&>(::ManufacturingScenarioRepository::_Module_default_instance_);
}
inline const ::ManufacturingScenarioRepository::Module& ManufacturingScenario::specific_machine_model() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ManufacturingScenario.specific_machine_model)
  return _internal_specific_machine_model();
}
inline ::ManufacturingScenarioRepository::Module* ManufacturingScenario::unsafe_arena_release_specific_machine_model() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ManufacturingScenarioRepository.ManufacturingScenario.specific_machine_model)
  if (machine_model_case() == kSpecificMachineModel) {
    clear_has_machine_model();
    ::ManufacturingScenarioRepository::Module* temp = _impl_.machine_model_.specific_machine_model_;
    _impl_.machine_model_.specific_machine_model_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ManufacturingScenario::unsafe_arena_set_allocated_specific_machine_model(::ManufacturingScenarioRepository::Module* specific_machine_model) {
  clear_machine_model();
  if (specific_machine_model) {
    set_has_specific_machine_model();
    _impl_.machine_model_.specific_machine_model_ = specific_machine_model;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ManufacturingScenario.specific_machine_model)
}
inline ::ManufacturingScenarioRepository::Module* ManufacturingScenario::_internal_mutable_specific_machine_model() {
  if (machine_model_case() != kSpecificMachineModel) {
    clear_machine_model();
    set_has_specific_machine_model();
    _impl_.machine_model_.specific_machine_model_ = CreateMaybeMessage< ::ManufacturingScenarioRepository::Module >(GetArenaForAllocation());
  }
  return _impl_.machine_model_.specific_machine_model_;
}
inline ::ManufacturingScenarioRepository::Module* ManufacturingScenario::mutable_specific_machine_model() {
  ::ManufacturingScenarioRepository::Module* _msg = _internal_mutable_specific_machine_model();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ManufacturingScenario.specific_machine_model)
  return _msg;
}

// .ManufacturingScenarioRepository.CuboidBuildVolumeParams override_cuboid_build_volume = 6;
inline bool ManufacturingScenario::has_override_cuboid_build_volume() const {
  return machine_model_case() == kOverrideCuboidBuildVolume;
}
inline bool ManufacturingScenario::_internal_has_override_cuboid_build_volume() const {
  return machine_model_case() == kOverrideCuboidBuildVolume;
}
inline void ManufacturingScenario::set_has_override_cuboid_build_volume() {
  _impl_._oneof_case_[0] = kOverrideCuboidBuildVolume;
}
inline ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* ManufacturingScenario::release_override_cuboid_build_volume() {
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ManufacturingScenario.override_cuboid_build_volume)
  if (machine_model_case() == kOverrideCuboidBuildVolume) {
    clear_has_machine_model();
    ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* temp = _impl_.machine_model_.override_cuboid_build_volume_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.machine_model_.override_cuboid_build_volume_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ManufacturingScenarioRepository::CuboidBuildVolumeParams& ManufacturingScenario::_internal_override_cuboid_build_volume() const {
  return machine_model_case() == kOverrideCuboidBuildVolume
      ? *_impl_.machine_model_.override_cuboid_build_volume_
      : reinterpret_cast<::ManufacturingScenarioRepository::CuboidBuildVolumeParams&>(::ManufacturingScenarioRepository::_CuboidBuildVolumeParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::CuboidBuildVolumeParams& ManufacturingScenario::override_cuboid_build_volume() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ManufacturingScenario.override_cuboid_build_volume)
  return _internal_override_cuboid_build_volume();
}
inline ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* ManufacturingScenario::unsafe_arena_release_override_cuboid_build_volume() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ManufacturingScenarioRepository.ManufacturingScenario.override_cuboid_build_volume)
  if (machine_model_case() == kOverrideCuboidBuildVolume) {
    clear_has_machine_model();
    ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* temp = _impl_.machine_model_.override_cuboid_build_volume_;
    _impl_.machine_model_.override_cuboid_build_volume_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ManufacturingScenario::unsafe_arena_set_allocated_override_cuboid_build_volume(::ManufacturingScenarioRepository::CuboidBuildVolumeParams* override_cuboid_build_volume) {
  clear_machine_model();
  if (override_cuboid_build_volume) {
    set_has_override_cuboid_build_volume();
    _impl_.machine_model_.override_cuboid_build_volume_ = override_cuboid_build_volume;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ManufacturingScenario.override_cuboid_build_volume)
}
inline ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* ManufacturingScenario::_internal_mutable_override_cuboid_build_volume() {
  if (machine_model_case() != kOverrideCuboidBuildVolume) {
    clear_machine_model();
    set_has_override_cuboid_build_volume();
    _impl_.machine_model_.override_cuboid_build_volume_ = CreateMaybeMessage< ::ManufacturingScenarioRepository::CuboidBuildVolumeParams >(GetArenaForAllocation());
  }
  return _impl_.machine_model_.override_cuboid_build_volume_;
}
inline ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* ManufacturingScenario::mutable_override_cuboid_build_volume() {
  ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* _msg = _internal_mutable_override_cuboid_build_volume();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ManufacturingScenario.override_cuboid_build_volume)
  return _msg;
}

inline bool ManufacturingScenario::has_machine_model() const {
  return machine_model_case() != MACHINE_MODEL_NOT_SET;
}
inline void ManufacturingScenario::clear_has_machine_model() {
  _impl_._oneof_case_[0] = MACHINE_MODEL_NOT_SET;
}
inline ManufacturingScenario::MachineModelCase ManufacturingScenario::machine_model_case() const {
  return ManufacturingScenario::MachineModelCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// MovementConstrains

// double minimum_distance_in_mm = 1;
inline void MovementConstrains::clear_minimum_distance_in_mm() {
  _impl_.minimum_distance_in_mm_ = 0;
}
inline double MovementConstrains::minimum_distance_in_mm() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.MovementConstrains.minimum_distance_in_mm)
  return _internal_minimum_distance_in_mm();
}
inline void MovementConstrains::set_minimum_distance_in_mm(double value) {
  _internal_set_minimum_distance_in_mm(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.MovementConstrains.minimum_distance_in_mm)
}
inline double MovementConstrains::_internal_minimum_distance_in_mm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.minimum_distance_in_mm_;
}
inline void MovementConstrains::_internal_set_minimum_distance_in_mm(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.minimum_distance_in_mm_ = value;
}

// double distance_to_container_in_mm = 2;
inline void MovementConstrains::clear_distance_to_container_in_mm() {
  _impl_.distance_to_container_in_mm_ = 0;
}
inline double MovementConstrains::distance_to_container_in_mm() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.MovementConstrains.distance_to_container_in_mm)
  return _internal_distance_to_container_in_mm();
}
inline void MovementConstrains::set_distance_to_container_in_mm(double value) {
  _internal_set_distance_to_container_in_mm(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.MovementConstrains.distance_to_container_in_mm)
}
inline double MovementConstrains::_internal_distance_to_container_in_mm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.distance_to_container_in_mm_;
}
inline void MovementConstrains::_internal_set_distance_to_container_in_mm(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.distance_to_container_in_mm_ = value;
}

// int32 allowed_full_circle_rotation_steps_z = 3;
inline void MovementConstrains::clear_allowed_full_circle_rotation_steps_z() {
  _impl_.allowed_full_circle_rotation_steps_z_ = 0;
}
inline ::int32_t MovementConstrains::allowed_full_circle_rotation_steps_z() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.MovementConstrains.allowed_full_circle_rotation_steps_z)
  return _internal_allowed_full_circle_rotation_steps_z();
}
inline void MovementConstrains::set_allowed_full_circle_rotation_steps_z(::int32_t value) {
  _internal_set_allowed_full_circle_rotation_steps_z(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.MovementConstrains.allowed_full_circle_rotation_steps_z)
}
inline ::int32_t MovementConstrains::_internal_allowed_full_circle_rotation_steps_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.allowed_full_circle_rotation_steps_z_;
}
inline void MovementConstrains::_internal_set_allowed_full_circle_rotation_steps_z(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.allowed_full_circle_rotation_steps_z_ = value;
}

// double max_rot_z_angle_deg = 4;
inline void MovementConstrains::clear_max_rot_z_angle_deg() {
  _impl_.max_rot_z_angle_deg_ = 0;
}
inline double MovementConstrains::max_rot_z_angle_deg() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.MovementConstrains.max_rot_z_angle_deg)
  return _internal_max_rot_z_angle_deg();
}
inline void MovementConstrains::set_max_rot_z_angle_deg(double value) {
  _internal_set_max_rot_z_angle_deg(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.MovementConstrains.max_rot_z_angle_deg)
}
inline double MovementConstrains::_internal_max_rot_z_angle_deg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_rot_z_angle_deg_;
}
inline void MovementConstrains::_internal_set_max_rot_z_angle_deg(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_rot_z_angle_deg_ = value;
}

// double min_rot_z_angle_deg = 5;
inline void MovementConstrains::clear_min_rot_z_angle_deg() {
  _impl_.min_rot_z_angle_deg_ = 0;
}
inline double MovementConstrains::min_rot_z_angle_deg() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.MovementConstrains.min_rot_z_angle_deg)
  return _internal_min_rot_z_angle_deg();
}
inline void MovementConstrains::set_min_rot_z_angle_deg(double value) {
  _internal_set_min_rot_z_angle_deg(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.MovementConstrains.min_rot_z_angle_deg)
}
inline double MovementConstrains::_internal_min_rot_z_angle_deg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.min_rot_z_angle_deg_;
}
inline void MovementConstrains::_internal_set_min_rot_z_angle_deg(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.min_rot_z_angle_deg_ = value;
}

// -------------------------------------------------------------------

// PartManufacturingOrder_ManufacturingPriority

// double price_priority = 1;
inline void PartManufacturingOrder_ManufacturingPriority::clear_price_priority() {
  _impl_.price_priority_ = 0;
}
inline double PartManufacturingOrder_ManufacturingPriority::price_priority() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority.price_priority)
  return _internal_price_priority();
}
inline void PartManufacturingOrder_ManufacturingPriority::set_price_priority(double value) {
  _internal_set_price_priority(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority.price_priority)
}
inline double PartManufacturingOrder_ManufacturingPriority::_internal_price_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.price_priority_;
}
inline void PartManufacturingOrder_ManufacturingPriority::_internal_set_price_priority(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.price_priority_ = value;
}

// double due_date_priority = 2;
inline void PartManufacturingOrder_ManufacturingPriority::clear_due_date_priority() {
  _impl_.due_date_priority_ = 0;
}
inline double PartManufacturingOrder_ManufacturingPriority::due_date_priority() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority.due_date_priority)
  return _internal_due_date_priority();
}
inline void PartManufacturingOrder_ManufacturingPriority::set_due_date_priority(double value) {
  _internal_set_due_date_priority(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority.due_date_priority)
}
inline double PartManufacturingOrder_ManufacturingPriority::_internal_due_date_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.due_date_priority_;
}
inline void PartManufacturingOrder_ManufacturingPriority::_internal_set_due_date_priority(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.due_date_priority_ = value;
}

// double quality_priority = 3;
inline void PartManufacturingOrder_ManufacturingPriority::clear_quality_priority() {
  _impl_.quality_priority_ = 0;
}
inline double PartManufacturingOrder_ManufacturingPriority::quality_priority() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority.quality_priority)
  return _internal_quality_priority();
}
inline void PartManufacturingOrder_ManufacturingPriority::set_quality_priority(double value) {
  _internal_set_quality_priority(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority.quality_priority)
}
inline double PartManufacturingOrder_ManufacturingPriority::_internal_quality_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.quality_priority_;
}
inline void PartManufacturingOrder_ManufacturingPriority::_internal_set_quality_priority(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.quality_priority_ = value;
}

// -------------------------------------------------------------------

// PartManufacturingOrder

// string pmo_id = 1;
inline void PartManufacturingOrder::clear_pmo_id() {
  _impl_.pmo_id_.ClearToEmpty();
}
inline const std::string& PartManufacturingOrder::pmo_id() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PartManufacturingOrder.pmo_id)
  return _internal_pmo_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PartManufacturingOrder::set_pmo_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pmo_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.PartManufacturingOrder.pmo_id)
}
inline std::string* PartManufacturingOrder::mutable_pmo_id() {
  std::string* _s = _internal_mutable_pmo_id();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.PartManufacturingOrder.pmo_id)
  return _s;
}
inline const std::string& PartManufacturingOrder::_internal_pmo_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pmo_id_.Get();
}
inline void PartManufacturingOrder::_internal_set_pmo_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pmo_id_.Set(value, GetArenaForAllocation());
}
inline std::string* PartManufacturingOrder::_internal_mutable_pmo_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pmo_id_.Mutable( GetArenaForAllocation());
}
inline std::string* PartManufacturingOrder::release_pmo_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.PartManufacturingOrder.pmo_id)
  return _impl_.pmo_id_.Release();
}
inline void PartManufacturingOrder::set_allocated_pmo_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pmo_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pmo_id_.IsDefault()) {
          _impl_.pmo_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.PartManufacturingOrder.pmo_id)
}

// string part_id = 2;
inline void PartManufacturingOrder::clear_part_id() {
  _impl_.part_id_.ClearToEmpty();
}
inline const std::string& PartManufacturingOrder::part_id() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PartManufacturingOrder.part_id)
  return _internal_part_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PartManufacturingOrder::set_part_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.part_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.PartManufacturingOrder.part_id)
}
inline std::string* PartManufacturingOrder::mutable_part_id() {
  std::string* _s = _internal_mutable_part_id();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.PartManufacturingOrder.part_id)
  return _s;
}
inline const std::string& PartManufacturingOrder::_internal_part_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.part_id_.Get();
}
inline void PartManufacturingOrder::_internal_set_part_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.part_id_.Set(value, GetArenaForAllocation());
}
inline std::string* PartManufacturingOrder::_internal_mutable_part_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.part_id_.Mutable( GetArenaForAllocation());
}
inline std::string* PartManufacturingOrder::release_part_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.PartManufacturingOrder.part_id)
  return _impl_.part_id_.Release();
}
inline void PartManufacturingOrder::set_allocated_part_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.part_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.part_id_.IsDefault()) {
          _impl_.part_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.PartManufacturingOrder.part_id)
}

// int32 part_num_triangles = 3;
inline void PartManufacturingOrder::clear_part_num_triangles() {
  _impl_.part_num_triangles_ = 0;
}
inline ::int32_t PartManufacturingOrder::part_num_triangles() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PartManufacturingOrder.part_num_triangles)
  return _internal_part_num_triangles();
}
inline void PartManufacturingOrder::set_part_num_triangles(::int32_t value) {
  _internal_set_part_num_triangles(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.PartManufacturingOrder.part_num_triangles)
}
inline ::int32_t PartManufacturingOrder::_internal_part_num_triangles() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.part_num_triangles_;
}
inline void PartManufacturingOrder::_internal_set_part_num_triangles(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.part_num_triangles_ = value;
}

// int32 quantity_to_manufacture = 4;
inline void PartManufacturingOrder::clear_quantity_to_manufacture() {
  _impl_.quantity_to_manufacture_ = 0;
}
inline ::int32_t PartManufacturingOrder::quantity_to_manufacture() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PartManufacturingOrder.quantity_to_manufacture)
  return _internal_quantity_to_manufacture();
}
inline void PartManufacturingOrder::set_quantity_to_manufacture(::int32_t value) {
  _internal_set_quantity_to_manufacture(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.PartManufacturingOrder.quantity_to_manufacture)
}
inline ::int32_t PartManufacturingOrder::_internal_quantity_to_manufacture() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.quantity_to_manufacture_;
}
inline void PartManufacturingOrder::_internal_set_quantity_to_manufacture(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.quantity_to_manufacture_ = value;
}

// int64 due_time_in_seconds = 5;
inline void PartManufacturingOrder::clear_due_time_in_seconds() {
  _impl_.due_time_in_seconds_ = ::int64_t{0};
}
inline ::int64_t PartManufacturingOrder::due_time_in_seconds() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PartManufacturingOrder.due_time_in_seconds)
  return _internal_due_time_in_seconds();
}
inline void PartManufacturingOrder::set_due_time_in_seconds(::int64_t value) {
  _internal_set_due_time_in_seconds(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.PartManufacturingOrder.due_time_in_seconds)
}
inline ::int64_t PartManufacturingOrder::_internal_due_time_in_seconds() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.due_time_in_seconds_;
}
inline void PartManufacturingOrder::_internal_set_due_time_in_seconds(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.due_time_in_seconds_ = value;
}

// int64 order_creation_time_delay_in_seconds = 6;
inline void PartManufacturingOrder::clear_order_creation_time_delay_in_seconds() {
  _impl_.order_creation_time_delay_in_seconds_ = ::int64_t{0};
}
inline ::int64_t PartManufacturingOrder::order_creation_time_delay_in_seconds() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PartManufacturingOrder.order_creation_time_delay_in_seconds)
  return _internal_order_creation_time_delay_in_seconds();
}
inline void PartManufacturingOrder::set_order_creation_time_delay_in_seconds(::int64_t value) {
  _internal_set_order_creation_time_delay_in_seconds(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.PartManufacturingOrder.order_creation_time_delay_in_seconds)
}
inline ::int64_t PartManufacturingOrder::_internal_order_creation_time_delay_in_seconds() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.order_creation_time_delay_in_seconds_;
}
inline void PartManufacturingOrder::_internal_set_order_creation_time_delay_in_seconds(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.order_creation_time_delay_in_seconds_ = value;
}

// string material = 7;
inline void PartManufacturingOrder::clear_material() {
  _impl_.material_.ClearToEmpty();
}
inline const std::string& PartManufacturingOrder::material() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PartManufacturingOrder.material)
  return _internal_material();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PartManufacturingOrder::set_material(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.material_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.PartManufacturingOrder.material)
}
inline std::string* PartManufacturingOrder::mutable_material() {
  std::string* _s = _internal_mutable_material();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.PartManufacturingOrder.material)
  return _s;
}
inline const std::string& PartManufacturingOrder::_internal_material() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.material_.Get();
}
inline void PartManufacturingOrder::_internal_set_material(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.material_.Set(value, GetArenaForAllocation());
}
inline std::string* PartManufacturingOrder::_internal_mutable_material() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.material_.Mutable( GetArenaForAllocation());
}
inline std::string* PartManufacturingOrder::release_material() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.PartManufacturingOrder.material)
  return _impl_.material_.Release();
}
inline void PartManufacturingOrder::set_allocated_material(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.material_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.material_.IsDefault()) {
          _impl_.material_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.PartManufacturingOrder.material)
}

// .ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority priorities = 8;
inline bool PartManufacturingOrder::has_priorities() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.priorities_ != nullptr);
  return value;
}
inline void PartManufacturingOrder::clear_priorities() {
  if (_impl_.priorities_ != nullptr) _impl_.priorities_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority& PartManufacturingOrder::_internal_priorities() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* p = _impl_.priorities_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority&>(::ManufacturingScenarioRepository::_PartManufacturingOrder_ManufacturingPriority_default_instance_);
}
inline const ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority& PartManufacturingOrder::priorities() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PartManufacturingOrder.priorities)
  return _internal_priorities();
}
inline void PartManufacturingOrder::unsafe_arena_set_allocated_priorities(::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.priorities_);
  }
  _impl_.priorities_ = reinterpret_cast<::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.PartManufacturingOrder.priorities)
}
inline ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* PartManufacturingOrder::release_priorities() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* released = _impl_.priorities_;
  _impl_.priorities_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* PartManufacturingOrder::unsafe_arena_release_priorities() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.PartManufacturingOrder.priorities)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* temp = _impl_.priorities_;
  _impl_.priorities_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* PartManufacturingOrder::_internal_mutable_priorities() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.priorities_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority>(GetArenaForAllocation());
    _impl_.priorities_ = reinterpret_cast<::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority*>(p);
  }
  return _impl_.priorities_;
}
inline ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* PartManufacturingOrder::mutable_priorities() {
  ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* _msg = _internal_mutable_priorities();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.PartManufacturingOrder.priorities)
  return _msg;
}
inline void PartManufacturingOrder::set_allocated_priorities(::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority*>(_impl_.priorities_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.priorities_ = reinterpret_cast<::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.PartManufacturingOrder.priorities)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace ManufacturingScenarioRepository


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ManufacturingScenario_2eproto_2epb_2eh
