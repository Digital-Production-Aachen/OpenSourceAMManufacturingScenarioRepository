// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ModuleDefinition.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ModuleDefinition_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ModuleDefinition_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ModuleDefinition_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ModuleDefinition_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ModuleDefinition_2eproto;
namespace ManufacturingScenarioRepository {
class BasicLPBFMachineParams;
struct BasicLPBFMachineParamsDefaultTypeInternal;
extern BasicLPBFMachineParamsDefaultTypeInternal _BasicLPBFMachineParams_default_instance_;
class BasicScannerParams;
struct BasicScannerParamsDefaultTypeInternal;
extern BasicScannerParamsDefaultTypeInternal _BasicScannerParams_default_instance_;
class BuildChamberParams;
struct BuildChamberParamsDefaultTypeInternal;
extern BuildChamberParamsDefaultTypeInternal _BuildChamberParams_default_instance_;
class CommonSkyWritingParams;
struct CommonSkyWritingParamsDefaultTypeInternal;
extern CommonSkyWritingParamsDefaultTypeInternal _CommonSkyWritingParams_default_instance_;
class CoordinateTransformParams;
struct CoordinateTransformParamsDefaultTypeInternal;
extern CoordinateTransformParamsDefaultTypeInternal _CoordinateTransformParams_default_instance_;
class CuboidBuildVolumeParams;
struct CuboidBuildVolumeParamsDefaultTypeInternal;
extern CuboidBuildVolumeParamsDefaultTypeInternal _CuboidBuildVolumeParams_default_instance_;
class EnergyUsePerStateInkWh;
struct EnergyUsePerStateInkWhDefaultTypeInternal;
extern EnergyUsePerStateInkWhDefaultTypeInternal _EnergyUsePerStateInkWh_default_instance_;
class LaserParams;
struct LaserParamsDefaultTypeInternal;
extern LaserParamsDefaultTypeInternal _LaserParams_default_instance_;
class Module;
struct ModuleDefaultTypeInternal;
extern ModuleDefaultTypeInternal _Module_default_instance_;
class NovantaScannerParams;
struct NovantaScannerParamsDefaultTypeInternal;
extern NovantaScannerParamsDefaultTypeInternal _NovantaScannerParams_default_instance_;
class OPCUAIdentification;
struct OPCUAIdentificationDefaultTypeInternal;
extern OPCUAIdentificationDefaultTypeInternal _OPCUAIdentification_default_instance_;
class ParameterSet;
struct ParameterSetDefaultTypeInternal;
extern ParameterSetDefaultTypeInternal _ParameterSet_default_instance_;
class PreheaterParams;
struct PreheaterParamsDefaultTypeInternal;
extern PreheaterParamsDefaultTypeInternal _PreheaterParams_default_instance_;
class ScanField;
struct ScanFieldDefaultTypeInternal;
extern ScanFieldDefaultTypeInternal _ScanField_default_instance_;
class ScanlabScannerParams;
struct ScanlabScannerParamsDefaultTypeInternal;
extern ScanlabScannerParamsDefaultTypeInternal _ScanlabScannerParams_default_instance_;
class ServiceInterface;
struct ServiceInterfaceDefaultTypeInternal;
extern ServiceInterfaceDefaultTypeInternal _ServiceInterface_default_instance_;
class StandardCoaterParams;
struct StandardCoaterParamsDefaultTypeInternal;
extern StandardCoaterParamsDefaultTypeInternal _StandardCoaterParams_default_instance_;
class TimePerStateInMS;
struct TimePerStateInMSDefaultTypeInternal;
extern TimePerStateInMSDefaultTypeInternal _TimePerStateInMS_default_instance_;
class ZylinderBuildVolumeParams;
struct ZylinderBuildVolumeParamsDefaultTypeInternal;
extern ZylinderBuildVolumeParamsDefaultTypeInternal _ZylinderBuildVolumeParams_default_instance_;
}  // namespace ManufacturingScenarioRepository
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ManufacturingScenarioRepository {
enum BasicScannerParams_JumpMode : int {
  BasicScannerParams_JumpMode_STATIC = 0,
  BasicScannerParams_JumpMode_ACCELERATED = 1,
  BasicScannerParams_JumpMode_BasicScannerParams_JumpMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  BasicScannerParams_JumpMode_BasicScannerParams_JumpMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool BasicScannerParams_JumpMode_IsValid(int value);
constexpr BasicScannerParams_JumpMode BasicScannerParams_JumpMode_JumpMode_MIN = static_cast<BasicScannerParams_JumpMode>(0);
constexpr BasicScannerParams_JumpMode BasicScannerParams_JumpMode_JumpMode_MAX = static_cast<BasicScannerParams_JumpMode>(1);
constexpr int BasicScannerParams_JumpMode_JumpMode_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
BasicScannerParams_JumpMode_descriptor();
template <typename T>
const std::string& BasicScannerParams_JumpMode_Name(T value) {
  static_assert(std::is_same<T, BasicScannerParams_JumpMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to JumpMode_Name().");
  return BasicScannerParams_JumpMode_Name(static_cast<BasicScannerParams_JumpMode>(value));
}
template <>
inline const std::string& BasicScannerParams_JumpMode_Name(BasicScannerParams_JumpMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BasicScannerParams_JumpMode_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool BasicScannerParams_JumpMode_Parse(absl::string_view name, BasicScannerParams_JumpMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BasicScannerParams_JumpMode>(
      BasicScannerParams_JumpMode_descriptor(), name, value);
}
enum NovantaScannerParams_SkyWritingMode : int {
  NovantaScannerParams_SkyWritingMode_NONE = 0,
  NovantaScannerParams_SkyWritingMode_MODE3 = 1,
  NovantaScannerParams_SkyWritingMode_SCAN_PACK = 2,
  NovantaScannerParams_SkyWritingMode_NovantaScannerParams_SkyWritingMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  NovantaScannerParams_SkyWritingMode_NovantaScannerParams_SkyWritingMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool NovantaScannerParams_SkyWritingMode_IsValid(int value);
constexpr NovantaScannerParams_SkyWritingMode NovantaScannerParams_SkyWritingMode_SkyWritingMode_MIN = static_cast<NovantaScannerParams_SkyWritingMode>(0);
constexpr NovantaScannerParams_SkyWritingMode NovantaScannerParams_SkyWritingMode_SkyWritingMode_MAX = static_cast<NovantaScannerParams_SkyWritingMode>(2);
constexpr int NovantaScannerParams_SkyWritingMode_SkyWritingMode_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
NovantaScannerParams_SkyWritingMode_descriptor();
template <typename T>
const std::string& NovantaScannerParams_SkyWritingMode_Name(T value) {
  static_assert(std::is_same<T, NovantaScannerParams_SkyWritingMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SkyWritingMode_Name().");
  return NovantaScannerParams_SkyWritingMode_Name(static_cast<NovantaScannerParams_SkyWritingMode>(value));
}
template <>
inline const std::string& NovantaScannerParams_SkyWritingMode_Name(NovantaScannerParams_SkyWritingMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<NovantaScannerParams_SkyWritingMode_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool NovantaScannerParams_SkyWritingMode_Parse(absl::string_view name, NovantaScannerParams_SkyWritingMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NovantaScannerParams_SkyWritingMode>(
      NovantaScannerParams_SkyWritingMode_descriptor(), name, value);
}
enum NovantaScannerParams_DelayMode : int {
  NovantaScannerParams_DelayMode_MANUAL_DELAYS = 0,
  NovantaScannerParams_DelayMode_VARIABLE_POLY_DELAY = 1,
  NovantaScannerParams_DelayMode_NovantaScannerParams_DelayMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  NovantaScannerParams_DelayMode_NovantaScannerParams_DelayMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool NovantaScannerParams_DelayMode_IsValid(int value);
constexpr NovantaScannerParams_DelayMode NovantaScannerParams_DelayMode_DelayMode_MIN = static_cast<NovantaScannerParams_DelayMode>(0);
constexpr NovantaScannerParams_DelayMode NovantaScannerParams_DelayMode_DelayMode_MAX = static_cast<NovantaScannerParams_DelayMode>(1);
constexpr int NovantaScannerParams_DelayMode_DelayMode_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
NovantaScannerParams_DelayMode_descriptor();
template <typename T>
const std::string& NovantaScannerParams_DelayMode_Name(T value) {
  static_assert(std::is_same<T, NovantaScannerParams_DelayMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DelayMode_Name().");
  return NovantaScannerParams_DelayMode_Name(static_cast<NovantaScannerParams_DelayMode>(value));
}
template <>
inline const std::string& NovantaScannerParams_DelayMode_Name(NovantaScannerParams_DelayMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<NovantaScannerParams_DelayMode_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool NovantaScannerParams_DelayMode_Parse(absl::string_view name, NovantaScannerParams_DelayMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NovantaScannerParams_DelayMode>(
      NovantaScannerParams_DelayMode_descriptor(), name, value);
}
enum ScanlabScannerParams_SkyWritingMode : int {
  ScanlabScannerParams_SkyWritingMode_NONE = 0,
  ScanlabScannerParams_SkyWritingMode_MODE1 = 1,
  ScanlabScannerParams_SkyWritingMode_MODE2 = 2,
  ScanlabScannerParams_SkyWritingMode_MODE3 = 3,
  ScanlabScannerParams_SkyWritingMode_ScanlabScannerParams_SkyWritingMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ScanlabScannerParams_SkyWritingMode_ScanlabScannerParams_SkyWritingMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ScanlabScannerParams_SkyWritingMode_IsValid(int value);
constexpr ScanlabScannerParams_SkyWritingMode ScanlabScannerParams_SkyWritingMode_SkyWritingMode_MIN = static_cast<ScanlabScannerParams_SkyWritingMode>(0);
constexpr ScanlabScannerParams_SkyWritingMode ScanlabScannerParams_SkyWritingMode_SkyWritingMode_MAX = static_cast<ScanlabScannerParams_SkyWritingMode>(3);
constexpr int ScanlabScannerParams_SkyWritingMode_SkyWritingMode_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
ScanlabScannerParams_SkyWritingMode_descriptor();
template <typename T>
const std::string& ScanlabScannerParams_SkyWritingMode_Name(T value) {
  static_assert(std::is_same<T, ScanlabScannerParams_SkyWritingMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SkyWritingMode_Name().");
  return ScanlabScannerParams_SkyWritingMode_Name(static_cast<ScanlabScannerParams_SkyWritingMode>(value));
}
template <>
inline const std::string& ScanlabScannerParams_SkyWritingMode_Name(ScanlabScannerParams_SkyWritingMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ScanlabScannerParams_SkyWritingMode_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool ScanlabScannerParams_SkyWritingMode_Parse(absl::string_view name, ScanlabScannerParams_SkyWritingMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScanlabScannerParams_SkyWritingMode>(
      ScanlabScannerParams_SkyWritingMode_descriptor(), name, value);
}
enum ScanlabScannerParams_SkyWritingParametringMode : int {
  ScanlabScannerParams_SkyWritingParametringMode_MANUAL_NPREV_NPOST = 0,
  ScanlabScannerParams_SkyWritingParametringMode_AUTOMATIC_NPREV_NPOST_BASED_ON_TIMELAG = 1,
  ScanlabScannerParams_SkyWritingParametringMode_MINIMUM_NPREV_NPOST_ACCELERATION = 2,
  ScanlabScannerParams_SkyWritingParametringMode_ScanlabScannerParams_SkyWritingParametringMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ScanlabScannerParams_SkyWritingParametringMode_ScanlabScannerParams_SkyWritingParametringMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ScanlabScannerParams_SkyWritingParametringMode_IsValid(int value);
constexpr ScanlabScannerParams_SkyWritingParametringMode ScanlabScannerParams_SkyWritingParametringMode_SkyWritingParametringMode_MIN = static_cast<ScanlabScannerParams_SkyWritingParametringMode>(0);
constexpr ScanlabScannerParams_SkyWritingParametringMode ScanlabScannerParams_SkyWritingParametringMode_SkyWritingParametringMode_MAX = static_cast<ScanlabScannerParams_SkyWritingParametringMode>(2);
constexpr int ScanlabScannerParams_SkyWritingParametringMode_SkyWritingParametringMode_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
ScanlabScannerParams_SkyWritingParametringMode_descriptor();
template <typename T>
const std::string& ScanlabScannerParams_SkyWritingParametringMode_Name(T value) {
  static_assert(std::is_same<T, ScanlabScannerParams_SkyWritingParametringMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SkyWritingParametringMode_Name().");
  return ScanlabScannerParams_SkyWritingParametringMode_Name(static_cast<ScanlabScannerParams_SkyWritingParametringMode>(value));
}
template <>
inline const std::string& ScanlabScannerParams_SkyWritingParametringMode_Name(ScanlabScannerParams_SkyWritingParametringMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ScanlabScannerParams_SkyWritingParametringMode_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool ScanlabScannerParams_SkyWritingParametringMode_Parse(absl::string_view name, ScanlabScannerParams_SkyWritingParametringMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScanlabScannerParams_SkyWritingParametringMode>(
      ScanlabScannerParams_SkyWritingParametringMode_descriptor(), name, value);
}
enum ScanlabScannerParams_DelayMode : int {
  ScanlabScannerParams_DelayMode_MANUAL_DELAYS = 0,
  ScanlabScannerParams_DelayMode_VARIABLE_POLY_DELAY = 1,
  ScanlabScannerParams_DelayMode_MINIMUM_DELAY_ACCELERATION = 2,
  ScanlabScannerParams_DelayMode_ScanlabScannerParams_DelayMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ScanlabScannerParams_DelayMode_ScanlabScannerParams_DelayMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ScanlabScannerParams_DelayMode_IsValid(int value);
constexpr ScanlabScannerParams_DelayMode ScanlabScannerParams_DelayMode_DelayMode_MIN = static_cast<ScanlabScannerParams_DelayMode>(0);
constexpr ScanlabScannerParams_DelayMode ScanlabScannerParams_DelayMode_DelayMode_MAX = static_cast<ScanlabScannerParams_DelayMode>(2);
constexpr int ScanlabScannerParams_DelayMode_DelayMode_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
ScanlabScannerParams_DelayMode_descriptor();
template <typename T>
const std::string& ScanlabScannerParams_DelayMode_Name(T value) {
  static_assert(std::is_same<T, ScanlabScannerParams_DelayMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DelayMode_Name().");
  return ScanlabScannerParams_DelayMode_Name(static_cast<ScanlabScannerParams_DelayMode>(value));
}
template <>
inline const std::string& ScanlabScannerParams_DelayMode_Name(ScanlabScannerParams_DelayMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ScanlabScannerParams_DelayMode_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool ScanlabScannerParams_DelayMode_Parse(absl::string_view name, ScanlabScannerParams_DelayMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScanlabScannerParams_DelayMode>(
      ScanlabScannerParams_DelayMode_descriptor(), name, value);
}
enum Service : int {
  LASERDEFLECTOR = 0,
  LASERSOURCE = 1,
  COATER = 2,
  INERT_ATMOSPHERE = 3,
  LOADER = 4,
  POSTPROCESSING = 5,
  POWDER_BED_MONITORING = 6,
  POWDER_FEED = 7,
  POWDER_RECYCLING = 8,
  POWDER_UNLOAD = 9,
  PREHEATER = 10,
  PULSED_LASER_SOURCE = 11,
  REMOVE_SUPPORTS = 12,
  SUBSTRATE_PLATE_MILLING = 13,
  THERMAL_TREATMENT = 14,
  PLATFORM_LIFT = 15,
  SCANFIELD_ALLOCATION = 16,
  FILTER_CLEAN = 17,
  THERMAL_SIMULATION = 18,
  Service_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Service_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Service_IsValid(int value);
constexpr Service Service_MIN = static_cast<Service>(0);
constexpr Service Service_MAX = static_cast<Service>(18);
constexpr int Service_ARRAYSIZE = 18 + 1;
const ::google::protobuf::EnumDescriptor*
Service_descriptor();
template <typename T>
const std::string& Service_Name(T value) {
  static_assert(std::is_same<T, Service>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Service_Name().");
  return Service_Name(static_cast<Service>(value));
}
template <>
inline const std::string& Service_Name(Service value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Service_descriptor,
                                                 0, 18>(
      static_cast<int>(value));
}
inline bool Service_Parse(absl::string_view name, Service* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Service>(
      Service_descriptor(), name, value);
}
enum state : int {
  OFF = 0,
  IDLE = 1,
  ACTIVE = 2,
  MAINTENANCE = 3,
  state_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  state_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool state_IsValid(int value);
constexpr state state_MIN = static_cast<state>(0);
constexpr state state_MAX = static_cast<state>(3);
constexpr int state_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
state_descriptor();
template <typename T>
const std::string& state_Name(T value) {
  static_assert(std::is_same<T, state>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to state_Name().");
  return state_Name(static_cast<state>(value));
}
template <>
inline const std::string& state_Name(state value) {
  return ::google::protobuf::internal::NameOfDenseEnum<state_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool state_Parse(absl::string_view name, state* value) {
  return ::google::protobuf::internal::ParseNamedEnum<state>(
      state_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class OPCUAIdentification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.OPCUAIdentification) */ {
 public:
  inline OPCUAIdentification() : OPCUAIdentification(nullptr) {}
  ~OPCUAIdentification() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR OPCUAIdentification(::google::protobuf::internal::ConstantInitialized);

  OPCUAIdentification(const OPCUAIdentification& from);
  OPCUAIdentification(OPCUAIdentification&& from) noexcept
    : OPCUAIdentification() {
    *this = ::std::move(from);
  }

  inline OPCUAIdentification& operator=(const OPCUAIdentification& from) {
    CopyFrom(from);
    return *this;
  }
  inline OPCUAIdentification& operator=(OPCUAIdentification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OPCUAIdentification& default_instance() {
    return *internal_default_instance();
  }
  static inline const OPCUAIdentification* internal_default_instance() {
    return reinterpret_cast<const OPCUAIdentification*>(
               &_OPCUAIdentification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(OPCUAIdentification& a, OPCUAIdentification& b) {
    a.Swap(&b);
  }
  inline void Swap(OPCUAIdentification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OPCUAIdentification* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OPCUAIdentification* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OPCUAIdentification>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OPCUAIdentification& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const OPCUAIdentification& from) {
    OPCUAIdentification::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OPCUAIdentification* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.OPCUAIdentification";
  }
  protected:
  explicit OPCUAIdentification(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kNodeIdFieldNumber = 1,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // uint32 nodeId = 1;
  void clear_nodeid() ;
  ::uint32_t nodeid() const;
  void set_nodeid(::uint32_t value);

  private:
  ::uint32_t _internal_nodeid() const;
  void _internal_set_nodeid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.OPCUAIdentification)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 64, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint32_t nodeid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class Module final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.Module) */ {
 public:
  inline Module() : Module(nullptr) {}
  ~Module() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Module(::google::protobuf::internal::ConstantInitialized);

  Module(const Module& from);
  Module(Module&& from) noexcept
    : Module() {
    *this = ::std::move(from);
  }

  inline Module& operator=(const Module& from) {
    CopyFrom(from);
    return *this;
  }
  inline Module& operator=(Module&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Module& default_instance() {
    return *internal_default_instance();
  }
  static inline const Module* internal_default_instance() {
    return reinterpret_cast<const Module*>(
               &_Module_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Module& a, Module& b) {
    a.Swap(&b);
  }
  inline void Swap(Module* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Module* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Module* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Module>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Module& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Module& from) {
    Module::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Module* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.Module";
  }
  protected:
  explicit Module(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChildModulesFieldNumber = 1,
    kImplementedServicesFieldNumber = 8,
    kConsumedServicesFieldNumber = 9,
    kDescriptionFieldNumber = 6,
    kTimePerStateInMSFieldNumber = 3,
    kEnergyUsePerStateInkWhFieldNumber = 4,
    kIdFieldNumber = 5,
    kParametersFieldNumber = 10,
    kInvestmentCostsFieldNumber = 7,
    kCurrentStateFieldNumber = 2,
  };
  // repeated .ManufacturingScenarioRepository.Module childModules = 1;
  int childmodules_size() const;
  private:
  int _internal_childmodules_size() const;

  public:
  void clear_childmodules() ;
  ::ManufacturingScenarioRepository::Module* mutable_childmodules(int index);
  ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::Module >*
      mutable_childmodules();
  private:
  const ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::Module>& _internal_childmodules() const;
  ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::Module>* _internal_mutable_childmodules();
  public:
  const ::ManufacturingScenarioRepository::Module& childmodules(int index) const;
  ::ManufacturingScenarioRepository::Module* add_childmodules();
  const ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::Module >&
      childmodules() const;
  // repeated .ManufacturingScenarioRepository.Service implementedServices = 8;
  int implementedservices_size() const;
  private:
  int _internal_implementedservices_size() const;

  public:
  void clear_implementedservices() ;
  public:
  ::ManufacturingScenarioRepository::Service implementedservices(int index) const;
  void set_implementedservices(int index, ::ManufacturingScenarioRepository::Service value);
  void add_implementedservices(::ManufacturingScenarioRepository::Service value);
  const ::google::protobuf::RepeatedField<int>& implementedservices() const;
  ::google::protobuf::RepeatedField<int>* mutable_implementedservices();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_implementedservices() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_implementedservices();

  public:
  // repeated .ManufacturingScenarioRepository.ServiceInterface consumedServices = 9;
  int consumedservices_size() const;
  private:
  int _internal_consumedservices_size() const;

  public:
  void clear_consumedservices() ;
  ::ManufacturingScenarioRepository::ServiceInterface* mutable_consumedservices(int index);
  ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ServiceInterface >*
      mutable_consumedservices();
  private:
  const ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::ServiceInterface>& _internal_consumedservices() const;
  ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::ServiceInterface>* _internal_mutable_consumedservices();
  public:
  const ::ManufacturingScenarioRepository::ServiceInterface& consumedservices(int index) const;
  ::ManufacturingScenarioRepository::ServiceInterface* add_consumedservices();
  const ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ServiceInterface >&
      consumedservices() const;
  // string description = 6;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* ptr);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // .ManufacturingScenarioRepository.TimePerStateInMS timePerStateInMS = 3;
  bool has_timeperstateinms() const;
  void clear_timeperstateinms() ;
  const ::ManufacturingScenarioRepository::TimePerStateInMS& timeperstateinms() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::TimePerStateInMS* release_timeperstateinms();
  ::ManufacturingScenarioRepository::TimePerStateInMS* mutable_timeperstateinms();
  void set_allocated_timeperstateinms(::ManufacturingScenarioRepository::TimePerStateInMS* value);
  void unsafe_arena_set_allocated_timeperstateinms(::ManufacturingScenarioRepository::TimePerStateInMS* value);
  ::ManufacturingScenarioRepository::TimePerStateInMS* unsafe_arena_release_timeperstateinms();

  private:
  const ::ManufacturingScenarioRepository::TimePerStateInMS& _internal_timeperstateinms() const;
  ::ManufacturingScenarioRepository::TimePerStateInMS* _internal_mutable_timeperstateinms();

  public:
  // .ManufacturingScenarioRepository.EnergyUsePerStateInkWh energyUsePerStateInkWh = 4;
  bool has_energyuseperstateinkwh() const;
  void clear_energyuseperstateinkwh() ;
  const ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh& energyuseperstateinkwh() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* release_energyuseperstateinkwh();
  ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* mutable_energyuseperstateinkwh();
  void set_allocated_energyuseperstateinkwh(::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* value);
  void unsafe_arena_set_allocated_energyuseperstateinkwh(::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* value);
  ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* unsafe_arena_release_energyuseperstateinkwh();

  private:
  const ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh& _internal_energyuseperstateinkwh() const;
  ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* _internal_mutable_energyuseperstateinkwh();

  public:
  // .ManufacturingScenarioRepository.OPCUAIdentification id = 5;
  bool has_id() const;
  void clear_id() ;
  const ::ManufacturingScenarioRepository::OPCUAIdentification& id() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::OPCUAIdentification* release_id();
  ::ManufacturingScenarioRepository::OPCUAIdentification* mutable_id();
  void set_allocated_id(::ManufacturingScenarioRepository::OPCUAIdentification* value);
  void unsafe_arena_set_allocated_id(::ManufacturingScenarioRepository::OPCUAIdentification* value);
  ::ManufacturingScenarioRepository::OPCUAIdentification* unsafe_arena_release_id();

  private:
  const ::ManufacturingScenarioRepository::OPCUAIdentification& _internal_id() const;
  ::ManufacturingScenarioRepository::OPCUAIdentification* _internal_mutable_id();

  public:
  // .ManufacturingScenarioRepository.ParameterSet parameters = 10;
  bool has_parameters() const;
  void clear_parameters() ;
  const ::ManufacturingScenarioRepository::ParameterSet& parameters() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::ParameterSet* release_parameters();
  ::ManufacturingScenarioRepository::ParameterSet* mutable_parameters();
  void set_allocated_parameters(::ManufacturingScenarioRepository::ParameterSet* value);
  void unsafe_arena_set_allocated_parameters(::ManufacturingScenarioRepository::ParameterSet* value);
  ::ManufacturingScenarioRepository::ParameterSet* unsafe_arena_release_parameters();

  private:
  const ::ManufacturingScenarioRepository::ParameterSet& _internal_parameters() const;
  ::ManufacturingScenarioRepository::ParameterSet* _internal_mutable_parameters();

  public:
  // double investmentCosts = 7;
  void clear_investmentcosts() ;
  double investmentcosts() const;
  void set_investmentcosts(double value);

  private:
  double _internal_investmentcosts() const;
  void _internal_set_investmentcosts(double value);

  public:
  // .ManufacturingScenarioRepository.state currentState = 2;
  void clear_currentstate() ;
  ::ManufacturingScenarioRepository::state currentstate() const;
  void set_currentstate(::ManufacturingScenarioRepository::state value);

  private:
  ::ManufacturingScenarioRepository::state _internal_currentstate() const;
  void _internal_set_currentstate(::ManufacturingScenarioRepository::state value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.Module)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 10, 6, 66, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::Module > childmodules_;
    ::google::protobuf::RepeatedField<int> implementedservices_;
    mutable ::google::protobuf::internal::CachedSize _implementedservices_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ServiceInterface > consumedservices_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::ManufacturingScenarioRepository::TimePerStateInMS* timeperstateinms_;
    ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* energyuseperstateinkwh_;
    ::ManufacturingScenarioRepository::OPCUAIdentification* id_;
    ::ManufacturingScenarioRepository::ParameterSet* parameters_;
    double investmentcosts_;
    int currentstate_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class ParameterSet final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.ParameterSet) */ {
 public:
  inline ParameterSet() : ParameterSet(nullptr) {}
  ~ParameterSet() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ParameterSet(::google::protobuf::internal::ConstantInitialized);

  ParameterSet(const ParameterSet& from);
  ParameterSet(ParameterSet&& from) noexcept
    : ParameterSet() {
    *this = ::std::move(from);
  }

  inline ParameterSet& operator=(const ParameterSet& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterSet& operator=(ParameterSet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParameterSet& default_instance() {
    return *internal_default_instance();
  }
  enum TypeAndParametersCase {
    kScanlabScanner = 10,
    kLaser = 11,
    kStandardCoater = 12,
    kBuildChamber = 15,
    kCuboidBuildVolume = 16,
    kZylinderBuildVolume = 17,
    kPreheater = 19,
    kNovantaScanner = 31,
    kBasicLPBFMachine = 100,
    TYPEANDPARAMETERS_NOT_SET = 0,
  };

  static inline const ParameterSet* internal_default_instance() {
    return reinterpret_cast<const ParameterSet*>(
               &_ParameterSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ParameterSet& a, ParameterSet& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterSet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterSet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ParameterSet* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ParameterSet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ParameterSet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ParameterSet& from) {
    ParameterSet::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterSet* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.ParameterSet";
  }
  protected:
  explicit ParameterSet(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kScanlabScannerFieldNumber = 10,
    kLaserFieldNumber = 11,
    kStandardCoaterFieldNumber = 12,
    kBuildChamberFieldNumber = 15,
    kCuboidBuildVolumeFieldNumber = 16,
    kZylinderBuildVolumeFieldNumber = 17,
    kPreheaterFieldNumber = 19,
    kNovantaScannerFieldNumber = 31,
    kBasicLPBFMachineFieldNumber = 100,
  };
  // .ManufacturingScenarioRepository.OPCUAIdentification id = 1;
  bool has_id() const;
  void clear_id() ;
  const ::ManufacturingScenarioRepository::OPCUAIdentification& id() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::OPCUAIdentification* release_id();
  ::ManufacturingScenarioRepository::OPCUAIdentification* mutable_id();
  void set_allocated_id(::ManufacturingScenarioRepository::OPCUAIdentification* value);
  void unsafe_arena_set_allocated_id(::ManufacturingScenarioRepository::OPCUAIdentification* value);
  ::ManufacturingScenarioRepository::OPCUAIdentification* unsafe_arena_release_id();

  private:
  const ::ManufacturingScenarioRepository::OPCUAIdentification& _internal_id() const;
  ::ManufacturingScenarioRepository::OPCUAIdentification* _internal_mutable_id();

  public:
  // .ManufacturingScenarioRepository.ScanlabScannerParams scanlabScanner = 10;
  bool has_scanlabscanner() const;
  private:
  bool _internal_has_scanlabscanner() const;

  public:
  void clear_scanlabscanner() ;
  const ::ManufacturingScenarioRepository::ScanlabScannerParams& scanlabscanner() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::ScanlabScannerParams* release_scanlabscanner();
  ::ManufacturingScenarioRepository::ScanlabScannerParams* mutable_scanlabscanner();
  void set_allocated_scanlabscanner(::ManufacturingScenarioRepository::ScanlabScannerParams* value);
  void unsafe_arena_set_allocated_scanlabscanner(::ManufacturingScenarioRepository::ScanlabScannerParams* value);
  ::ManufacturingScenarioRepository::ScanlabScannerParams* unsafe_arena_release_scanlabscanner();

  private:
  const ::ManufacturingScenarioRepository::ScanlabScannerParams& _internal_scanlabscanner() const;
  ::ManufacturingScenarioRepository::ScanlabScannerParams* _internal_mutable_scanlabscanner();

  public:
  // .ManufacturingScenarioRepository.LaserParams laser = 11;
  bool has_laser() const;
  private:
  bool _internal_has_laser() const;

  public:
  void clear_laser() ;
  const ::ManufacturingScenarioRepository::LaserParams& laser() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::LaserParams* release_laser();
  ::ManufacturingScenarioRepository::LaserParams* mutable_laser();
  void set_allocated_laser(::ManufacturingScenarioRepository::LaserParams* value);
  void unsafe_arena_set_allocated_laser(::ManufacturingScenarioRepository::LaserParams* value);
  ::ManufacturingScenarioRepository::LaserParams* unsafe_arena_release_laser();

  private:
  const ::ManufacturingScenarioRepository::LaserParams& _internal_laser() const;
  ::ManufacturingScenarioRepository::LaserParams* _internal_mutable_laser();

  public:
  // .ManufacturingScenarioRepository.StandardCoaterParams standardCoater = 12;
  bool has_standardcoater() const;
  private:
  bool _internal_has_standardcoater() const;

  public:
  void clear_standardcoater() ;
  const ::ManufacturingScenarioRepository::StandardCoaterParams& standardcoater() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::StandardCoaterParams* release_standardcoater();
  ::ManufacturingScenarioRepository::StandardCoaterParams* mutable_standardcoater();
  void set_allocated_standardcoater(::ManufacturingScenarioRepository::StandardCoaterParams* value);
  void unsafe_arena_set_allocated_standardcoater(::ManufacturingScenarioRepository::StandardCoaterParams* value);
  ::ManufacturingScenarioRepository::StandardCoaterParams* unsafe_arena_release_standardcoater();

  private:
  const ::ManufacturingScenarioRepository::StandardCoaterParams& _internal_standardcoater() const;
  ::ManufacturingScenarioRepository::StandardCoaterParams* _internal_mutable_standardcoater();

  public:
  // .ManufacturingScenarioRepository.BuildChamberParams buildChamber = 15;
  bool has_buildchamber() const;
  private:
  bool _internal_has_buildchamber() const;

  public:
  void clear_buildchamber() ;
  const ::ManufacturingScenarioRepository::BuildChamberParams& buildchamber() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::BuildChamberParams* release_buildchamber();
  ::ManufacturingScenarioRepository::BuildChamberParams* mutable_buildchamber();
  void set_allocated_buildchamber(::ManufacturingScenarioRepository::BuildChamberParams* value);
  void unsafe_arena_set_allocated_buildchamber(::ManufacturingScenarioRepository::BuildChamberParams* value);
  ::ManufacturingScenarioRepository::BuildChamberParams* unsafe_arena_release_buildchamber();

  private:
  const ::ManufacturingScenarioRepository::BuildChamberParams& _internal_buildchamber() const;
  ::ManufacturingScenarioRepository::BuildChamberParams* _internal_mutable_buildchamber();

  public:
  // .ManufacturingScenarioRepository.CuboidBuildVolumeParams cuboidBuildVolume = 16;
  bool has_cuboidbuildvolume() const;
  private:
  bool _internal_has_cuboidbuildvolume() const;

  public:
  void clear_cuboidbuildvolume() ;
  const ::ManufacturingScenarioRepository::CuboidBuildVolumeParams& cuboidbuildvolume() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* release_cuboidbuildvolume();
  ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* mutable_cuboidbuildvolume();
  void set_allocated_cuboidbuildvolume(::ManufacturingScenarioRepository::CuboidBuildVolumeParams* value);
  void unsafe_arena_set_allocated_cuboidbuildvolume(::ManufacturingScenarioRepository::CuboidBuildVolumeParams* value);
  ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* unsafe_arena_release_cuboidbuildvolume();

  private:
  const ::ManufacturingScenarioRepository::CuboidBuildVolumeParams& _internal_cuboidbuildvolume() const;
  ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* _internal_mutable_cuboidbuildvolume();

  public:
  // .ManufacturingScenarioRepository.ZylinderBuildVolumeParams zylinderBuildVolume = 17;
  bool has_zylinderbuildvolume() const;
  private:
  bool _internal_has_zylinderbuildvolume() const;

  public:
  void clear_zylinderbuildvolume() ;
  const ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams& zylinderbuildvolume() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* release_zylinderbuildvolume();
  ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* mutable_zylinderbuildvolume();
  void set_allocated_zylinderbuildvolume(::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* value);
  void unsafe_arena_set_allocated_zylinderbuildvolume(::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* value);
  ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* unsafe_arena_release_zylinderbuildvolume();

  private:
  const ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams& _internal_zylinderbuildvolume() const;
  ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* _internal_mutable_zylinderbuildvolume();

  public:
  // .ManufacturingScenarioRepository.PreheaterParams preheater = 19;
  bool has_preheater() const;
  private:
  bool _internal_has_preheater() const;

  public:
  void clear_preheater() ;
  const ::ManufacturingScenarioRepository::PreheaterParams& preheater() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::PreheaterParams* release_preheater();
  ::ManufacturingScenarioRepository::PreheaterParams* mutable_preheater();
  void set_allocated_preheater(::ManufacturingScenarioRepository::PreheaterParams* value);
  void unsafe_arena_set_allocated_preheater(::ManufacturingScenarioRepository::PreheaterParams* value);
  ::ManufacturingScenarioRepository::PreheaterParams* unsafe_arena_release_preheater();

  private:
  const ::ManufacturingScenarioRepository::PreheaterParams& _internal_preheater() const;
  ::ManufacturingScenarioRepository::PreheaterParams* _internal_mutable_preheater();

  public:
  // .ManufacturingScenarioRepository.NovantaScannerParams novantaScanner = 31;
  bool has_novantascanner() const;
  private:
  bool _internal_has_novantascanner() const;

  public:
  void clear_novantascanner() ;
  const ::ManufacturingScenarioRepository::NovantaScannerParams& novantascanner() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::NovantaScannerParams* release_novantascanner();
  ::ManufacturingScenarioRepository::NovantaScannerParams* mutable_novantascanner();
  void set_allocated_novantascanner(::ManufacturingScenarioRepository::NovantaScannerParams* value);
  void unsafe_arena_set_allocated_novantascanner(::ManufacturingScenarioRepository::NovantaScannerParams* value);
  ::ManufacturingScenarioRepository::NovantaScannerParams* unsafe_arena_release_novantascanner();

  private:
  const ::ManufacturingScenarioRepository::NovantaScannerParams& _internal_novantascanner() const;
  ::ManufacturingScenarioRepository::NovantaScannerParams* _internal_mutable_novantascanner();

  public:
  // .ManufacturingScenarioRepository.BasicLPBFMachineParams basicLPBFMachine = 100;
  bool has_basiclpbfmachine() const;
  private:
  bool _internal_has_basiclpbfmachine() const;

  public:
  void clear_basiclpbfmachine() ;
  const ::ManufacturingScenarioRepository::BasicLPBFMachineParams& basiclpbfmachine() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::BasicLPBFMachineParams* release_basiclpbfmachine();
  ::ManufacturingScenarioRepository::BasicLPBFMachineParams* mutable_basiclpbfmachine();
  void set_allocated_basiclpbfmachine(::ManufacturingScenarioRepository::BasicLPBFMachineParams* value);
  void unsafe_arena_set_allocated_basiclpbfmachine(::ManufacturingScenarioRepository::BasicLPBFMachineParams* value);
  ::ManufacturingScenarioRepository::BasicLPBFMachineParams* unsafe_arena_release_basiclpbfmachine();

  private:
  const ::ManufacturingScenarioRepository::BasicLPBFMachineParams& _internal_basiclpbfmachine() const;
  ::ManufacturingScenarioRepository::BasicLPBFMachineParams* _internal_mutable_basiclpbfmachine();

  public:
  void clear_TypeAndParameters();
  TypeAndParametersCase TypeAndParameters_case() const;
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.ParameterSet)
 private:
  class _Internal;
  void set_has_scanlabscanner();
  void set_has_laser();
  void set_has_standardcoater();
  void set_has_buildchamber();
  void set_has_cuboidbuildvolume();
  void set_has_zylinderbuildvolume();
  void set_has_preheater();
  void set_has_novantascanner();
  void set_has_basiclpbfmachine();

  inline bool has_TypeAndParameters() const;
  inline void clear_has_TypeAndParameters();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 10, 10, 0, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::ManufacturingScenarioRepository::OPCUAIdentification* id_;
    union TypeAndParametersUnion {
      constexpr TypeAndParametersUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ManufacturingScenarioRepository::ScanlabScannerParams* scanlabscanner_;
      ::ManufacturingScenarioRepository::LaserParams* laser_;
      ::ManufacturingScenarioRepository::StandardCoaterParams* standardcoater_;
      ::ManufacturingScenarioRepository::BuildChamberParams* buildchamber_;
      ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* cuboidbuildvolume_;
      ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* zylinderbuildvolume_;
      ::ManufacturingScenarioRepository::PreheaterParams* preheater_;
      ::ManufacturingScenarioRepository::NovantaScannerParams* novantascanner_;
      ::ManufacturingScenarioRepository::BasicLPBFMachineParams* basiclpbfmachine_;
    } TypeAndParameters_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class BasicLPBFMachineParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.BasicLPBFMachineParams) */ {
 public:
  inline BasicLPBFMachineParams() : BasicLPBFMachineParams(nullptr) {}
  ~BasicLPBFMachineParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BasicLPBFMachineParams(::google::protobuf::internal::ConstantInitialized);

  BasicLPBFMachineParams(const BasicLPBFMachineParams& from);
  BasicLPBFMachineParams(BasicLPBFMachineParams&& from) noexcept
    : BasicLPBFMachineParams() {
    *this = ::std::move(from);
  }

  inline BasicLPBFMachineParams& operator=(const BasicLPBFMachineParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline BasicLPBFMachineParams& operator=(BasicLPBFMachineParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BasicLPBFMachineParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const BasicLPBFMachineParams* internal_default_instance() {
    return reinterpret_cast<const BasicLPBFMachineParams*>(
               &_BasicLPBFMachineParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(BasicLPBFMachineParams& a, BasicLPBFMachineParams& b) {
    a.Swap(&b);
  }
  inline void Swap(BasicLPBFMachineParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BasicLPBFMachineParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BasicLPBFMachineParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BasicLPBFMachineParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BasicLPBFMachineParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BasicLPBFMachineParams& from) {
    BasicLPBFMachineParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BasicLPBFMachineParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.BasicLPBFMachineParams";
  }
  protected:
  explicit BasicLPBFMachineParams(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScanFieldsFieldNumber = 20,
    kMinLayerHeightUMFieldNumber = 10,
    kMinZDistMmFieldNumber = 11,
    kMinimalHatchLengthFieldNumber = 12,
    kForcedMinimumExposureTimeInSFieldNumber = 13,
    kNumberOfLaserScannerUnitsFieldNumber = 1,
  };
  // repeated .ManufacturingScenarioRepository.ScanField scanFields = 20;
  int scanfields_size() const;
  private:
  int _internal_scanfields_size() const;

  public:
  void clear_scanfields() ;
  ::ManufacturingScenarioRepository::ScanField* mutable_scanfields(int index);
  ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ScanField >*
      mutable_scanfields();
  private:
  const ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::ScanField>& _internal_scanfields() const;
  ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::ScanField>* _internal_mutable_scanfields();
  public:
  const ::ManufacturingScenarioRepository::ScanField& scanfields(int index) const;
  ::ManufacturingScenarioRepository::ScanField* add_scanfields();
  const ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ScanField >&
      scanfields() const;
  // double MinLayerHeightUM = 10;
  void clear_minlayerheightum() ;
  double minlayerheightum() const;
  void set_minlayerheightum(double value);

  private:
  double _internal_minlayerheightum() const;
  void _internal_set_minlayerheightum(double value);

  public:
  // double MinZDistMm = 11;
  void clear_minzdistmm() ;
  double minzdistmm() const;
  void set_minzdistmm(double value);

  private:
  double _internal_minzdistmm() const;
  void _internal_set_minzdistmm(double value);

  public:
  // double MinimalHatchLength = 12;
  void clear_minimalhatchlength() ;
  double minimalhatchlength() const;
  void set_minimalhatchlength(double value);

  private:
  double _internal_minimalhatchlength() const;
  void _internal_set_minimalhatchlength(double value);

  public:
  // double ForcedMinimumExposureTimeInS = 13;
  void clear_forcedminimumexposuretimeins() ;
  double forcedminimumexposuretimeins() const;
  void set_forcedminimumexposuretimeins(double value);

  private:
  double _internal_forcedminimumexposuretimeins() const;
  void _internal_set_forcedminimumexposuretimeins(double value);

  public:
  // int32 numberOfLaserScannerUnits = 1;
  void clear_numberoflaserscannerunits() ;
  ::int32_t numberoflaserscannerunits() const;
  void set_numberoflaserscannerunits(::int32_t value);

  private:
  ::int32_t _internal_numberoflaserscannerunits() const;
  void _internal_set_numberoflaserscannerunits(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.BasicLPBFMachineParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ScanField > scanfields_;
    double minlayerheightum_;
    double minzdistmm_;
    double minimalhatchlength_;
    double forcedminimumexposuretimeins_;
    ::int32_t numberoflaserscannerunits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class ServiceInterface final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.ServiceInterface) */ {
 public:
  inline ServiceInterface() : ServiceInterface(nullptr) {}
  ~ServiceInterface() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServiceInterface(::google::protobuf::internal::ConstantInitialized);

  ServiceInterface(const ServiceInterface& from);
  ServiceInterface(ServiceInterface&& from) noexcept
    : ServiceInterface() {
    *this = ::std::move(from);
  }

  inline ServiceInterface& operator=(const ServiceInterface& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceInterface& operator=(ServiceInterface&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServiceInterface& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServiceInterface* internal_default_instance() {
    return reinterpret_cast<const ServiceInterface*>(
               &_ServiceInterface_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ServiceInterface& a, ServiceInterface& b) {
    a.Swap(&b);
  }
  inline void Swap(ServiceInterface* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServiceInterface* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServiceInterface* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServiceInterface>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServiceInterface& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ServiceInterface& from) {
    ServiceInterface::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServiceInterface* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.ServiceInterface";
  }
  protected:
  explicit ServiceInterface(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kImplementingModuleFieldNumber = 2,
    kConsumedServiceFieldNumber = 1,
  };
  // .ManufacturingScenarioRepository.OPCUAIdentification implementingModule = 2;
  bool has_implementingmodule() const;
  void clear_implementingmodule() ;
  const ::ManufacturingScenarioRepository::OPCUAIdentification& implementingmodule() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::OPCUAIdentification* release_implementingmodule();
  ::ManufacturingScenarioRepository::OPCUAIdentification* mutable_implementingmodule();
  void set_allocated_implementingmodule(::ManufacturingScenarioRepository::OPCUAIdentification* value);
  void unsafe_arena_set_allocated_implementingmodule(::ManufacturingScenarioRepository::OPCUAIdentification* value);
  ::ManufacturingScenarioRepository::OPCUAIdentification* unsafe_arena_release_implementingmodule();

  private:
  const ::ManufacturingScenarioRepository::OPCUAIdentification& _internal_implementingmodule() const;
  ::ManufacturingScenarioRepository::OPCUAIdentification* _internal_mutable_implementingmodule();

  public:
  // .ManufacturingScenarioRepository.Service consumedService = 1;
  void clear_consumedservice() ;
  ::ManufacturingScenarioRepository::Service consumedservice() const;
  void set_consumedservice(::ManufacturingScenarioRepository::Service value);

  private:
  ::ManufacturingScenarioRepository::Service _internal_consumedservice() const;
  void _internal_set_consumedservice(::ManufacturingScenarioRepository::Service value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.ServiceInterface)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::ManufacturingScenarioRepository::OPCUAIdentification* implementingmodule_;
    int consumedservice_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class BasicScannerParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.BasicScannerParams) */ {
 public:
  inline BasicScannerParams() : BasicScannerParams(nullptr) {}
  ~BasicScannerParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BasicScannerParams(::google::protobuf::internal::ConstantInitialized);

  BasicScannerParams(const BasicScannerParams& from);
  BasicScannerParams(BasicScannerParams&& from) noexcept
    : BasicScannerParams() {
    *this = ::std::move(from);
  }

  inline BasicScannerParams& operator=(const BasicScannerParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline BasicScannerParams& operator=(BasicScannerParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BasicScannerParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const BasicScannerParams* internal_default_instance() {
    return reinterpret_cast<const BasicScannerParams*>(
               &_BasicScannerParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(BasicScannerParams& a, BasicScannerParams& b) {
    a.Swap(&b);
  }
  inline void Swap(BasicScannerParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BasicScannerParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BasicScannerParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BasicScannerParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BasicScannerParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BasicScannerParams& from) {
    BasicScannerParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BasicScannerParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.BasicScannerParams";
  }
  protected:
  explicit BasicScannerParams(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using JumpMode = BasicScannerParams_JumpMode;
  static constexpr JumpMode STATIC = BasicScannerParams_JumpMode_STATIC;
  static constexpr JumpMode ACCELERATED = BasicScannerParams_JumpMode_ACCELERATED;
  static inline bool JumpMode_IsValid(int value) {
    return BasicScannerParams_JumpMode_IsValid(value);
  }
  static constexpr JumpMode JumpMode_MIN = BasicScannerParams_JumpMode_JumpMode_MIN;
  static constexpr JumpMode JumpMode_MAX = BasicScannerParams_JumpMode_JumpMode_MAX;
  static constexpr int JumpMode_ARRAYSIZE = BasicScannerParams_JumpMode_JumpMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* JumpMode_descriptor() {
    return BasicScannerParams_JumpMode_descriptor();
  }
  template <typename T>
  static inline const std::string& JumpMode_Name(T value) {
    return BasicScannerParams_JumpMode_Name(value);
  }
  static inline bool JumpMode_Parse(absl::string_view name, JumpMode* value) {
    return BasicScannerParams_JumpMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kJumpSpeedInMmSFieldNumber = 1,
    kMarkSpeedInMmSFieldNumber = 2,
    kLaserFocusShiftInMmFieldNumber = 3,
    kMaxAccelerationInMmPerSSFieldNumber = 4,
    kStaticDelayInSFieldNumber = 5,
    kJumpDelayInUsFieldNumber = 6,
    kMarkDelayInUsFieldNumber = 7,
    kLaserOffDelayInUsFieldNumber = 8,
    kLaserOnDelayInUsFieldNumber = 9,
    kPolygonDelayInUsFieldNumber = 10,
    kVectorBlockDelayFieldNumber = 11,
    kParamChangeDelayFieldNumber = 12,
    kWarpJumpLengthLimitFieldNumber = 13,
    kJumpModeFieldNumber = 14,
  };
  // double jumpSpeedInMmS = 1;
  void clear_jumpspeedinmms() ;
  double jumpspeedinmms() const;
  void set_jumpspeedinmms(double value);

  private:
  double _internal_jumpspeedinmms() const;
  void _internal_set_jumpspeedinmms(double value);

  public:
  // double markSpeedInMmS = 2;
  void clear_markspeedinmms() ;
  double markspeedinmms() const;
  void set_markspeedinmms(double value);

  private:
  double _internal_markspeedinmms() const;
  void _internal_set_markspeedinmms(double value);

  public:
  // double laserFocusShiftInMm = 3;
  void clear_laserfocusshiftinmm() ;
  double laserfocusshiftinmm() const;
  void set_laserfocusshiftinmm(double value);

  private:
  double _internal_laserfocusshiftinmm() const;
  void _internal_set_laserfocusshiftinmm(double value);

  public:
  // double maxAccelerationInMmPerSS = 4;
  void clear_maxaccelerationinmmperss() ;
  double maxaccelerationinmmperss() const;
  void set_maxaccelerationinmmperss(double value);

  private:
  double _internal_maxaccelerationinmmperss() const;
  void _internal_set_maxaccelerationinmmperss(double value);

  public:
  // double staticDelayInS = 5;
  void clear_staticdelayins() ;
  double staticdelayins() const;
  void set_staticdelayins(double value);

  private:
  double _internal_staticdelayins() const;
  void _internal_set_staticdelayins(double value);

  public:
  // double jumpDelayInUs = 6;
  void clear_jumpdelayinus() ;
  double jumpdelayinus() const;
  void set_jumpdelayinus(double value);

  private:
  double _internal_jumpdelayinus() const;
  void _internal_set_jumpdelayinus(double value);

  public:
  // double markDelayInUs = 7;
  void clear_markdelayinus() ;
  double markdelayinus() const;
  void set_markdelayinus(double value);

  private:
  double _internal_markdelayinus() const;
  void _internal_set_markdelayinus(double value);

  public:
  // double laserOffDelayInUs = 8;
  void clear_laseroffdelayinus() ;
  double laseroffdelayinus() const;
  void set_laseroffdelayinus(double value);

  private:
  double _internal_laseroffdelayinus() const;
  void _internal_set_laseroffdelayinus(double value);

  public:
  // double laserOnDelayInUs = 9;
  void clear_laserondelayinus() ;
  double laserondelayinus() const;
  void set_laserondelayinus(double value);

  private:
  double _internal_laserondelayinus() const;
  void _internal_set_laserondelayinus(double value);

  public:
  // double polygonDelayInUs = 10;
  void clear_polygondelayinus() ;
  double polygondelayinus() const;
  void set_polygondelayinus(double value);

  private:
  double _internal_polygondelayinus() const;
  void _internal_set_polygondelayinus(double value);

  public:
  // double VectorBlockDelay = 11;
  void clear_vectorblockdelay() ;
  double vectorblockdelay() const;
  void set_vectorblockdelay(double value);

  private:
  double _internal_vectorblockdelay() const;
  void _internal_set_vectorblockdelay(double value);

  public:
  // double ParamChangeDelay = 12;
  void clear_paramchangedelay() ;
  double paramchangedelay() const;
  void set_paramchangedelay(double value);

  private:
  double _internal_paramchangedelay() const;
  void _internal_set_paramchangedelay(double value);

  public:
  // double WarpJumpLengthLimit = 13;
  void clear_warpjumplengthlimit() ;
  double warpjumplengthlimit() const;
  void set_warpjumplengthlimit(double value);

  private:
  double _internal_warpjumplengthlimit() const;
  void _internal_set_warpjumplengthlimit(double value);

  public:
  // .ManufacturingScenarioRepository.BasicScannerParams.JumpMode jumpMode = 14;
  void clear_jumpmode() ;
  ::ManufacturingScenarioRepository::BasicScannerParams_JumpMode jumpmode() const;
  void set_jumpmode(::ManufacturingScenarioRepository::BasicScannerParams_JumpMode value);

  private:
  ::ManufacturingScenarioRepository::BasicScannerParams_JumpMode _internal_jumpmode() const;
  void _internal_set_jumpmode(::ManufacturingScenarioRepository::BasicScannerParams_JumpMode value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.BasicScannerParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 14, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double jumpspeedinmms_;
    double markspeedinmms_;
    double laserfocusshiftinmm_;
    double maxaccelerationinmmperss_;
    double staticdelayins_;
    double jumpdelayinus_;
    double markdelayinus_;
    double laseroffdelayinus_;
    double laserondelayinus_;
    double polygondelayinus_;
    double vectorblockdelay_;
    double paramchangedelay_;
    double warpjumplengthlimit_;
    int jumpmode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class CommonSkyWritingParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.CommonSkyWritingParams) */ {
 public:
  inline CommonSkyWritingParams() : CommonSkyWritingParams(nullptr) {}
  ~CommonSkyWritingParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CommonSkyWritingParams(::google::protobuf::internal::ConstantInitialized);

  CommonSkyWritingParams(const CommonSkyWritingParams& from);
  CommonSkyWritingParams(CommonSkyWritingParams&& from) noexcept
    : CommonSkyWritingParams() {
    *this = ::std::move(from);
  }

  inline CommonSkyWritingParams& operator=(const CommonSkyWritingParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommonSkyWritingParams& operator=(CommonSkyWritingParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CommonSkyWritingParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const CommonSkyWritingParams* internal_default_instance() {
    return reinterpret_cast<const CommonSkyWritingParams*>(
               &_CommonSkyWritingParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CommonSkyWritingParams& a, CommonSkyWritingParams& b) {
    a.Swap(&b);
  }
  inline void Swap(CommonSkyWritingParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommonSkyWritingParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CommonSkyWritingParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CommonSkyWritingParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CommonSkyWritingParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CommonSkyWritingParams& from) {
    CommonSkyWritingParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommonSkyWritingParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.CommonSkyWritingParams";
  }
  protected:
  explicit CommonSkyWritingParams(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNPrevInTenUsTicksFieldNumber = 1,
    kNPostInTenUsTicksFieldNumber = 2,
    kLimitAngleFieldNumber = 3,
  };
  // double NPrevInTenUsTicks = 1;
  void clear_nprevintenusticks() ;
  double nprevintenusticks() const;
  void set_nprevintenusticks(double value);

  private:
  double _internal_nprevintenusticks() const;
  void _internal_set_nprevintenusticks(double value);

  public:
  // double NPostInTenUsTicks = 2;
  void clear_npostintenusticks() ;
  double npostintenusticks() const;
  void set_npostintenusticks(double value);

  private:
  double _internal_npostintenusticks() const;
  void _internal_set_npostintenusticks(double value);

  public:
  // double limitAngle = 3;
  void clear_limitangle() ;
  double limitangle() const;
  void set_limitangle(double value);

  private:
  double _internal_limitangle() const;
  void _internal_set_limitangle(double value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.CommonSkyWritingParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double nprevintenusticks_;
    double npostintenusticks_;
    double limitangle_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class CoordinateTransformParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.CoordinateTransformParams) */ {
 public:
  inline CoordinateTransformParams() : CoordinateTransformParams(nullptr) {}
  ~CoordinateTransformParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CoordinateTransformParams(::google::protobuf::internal::ConstantInitialized);

  CoordinateTransformParams(const CoordinateTransformParams& from);
  CoordinateTransformParams(CoordinateTransformParams&& from) noexcept
    : CoordinateTransformParams() {
    *this = ::std::move(from);
  }

  inline CoordinateTransformParams& operator=(const CoordinateTransformParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline CoordinateTransformParams& operator=(CoordinateTransformParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CoordinateTransformParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const CoordinateTransformParams* internal_default_instance() {
    return reinterpret_cast<const CoordinateTransformParams*>(
               &_CoordinateTransformParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CoordinateTransformParams& a, CoordinateTransformParams& b) {
    a.Swap(&b);
  }
  inline void Swap(CoordinateTransformParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CoordinateTransformParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CoordinateTransformParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CoordinateTransformParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CoordinateTransformParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CoordinateTransformParams& from) {
    CoordinateTransformParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CoordinateTransformParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.CoordinateTransformParams";
  }
  protected:
  explicit CoordinateTransformParams(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinimalJumpLengthFieldNumber = 2,
    kMinimalMarkLengthFieldNumber = 3,
    kDeleteZeroLengthJumpsFieldNumber = 1,
  };
  // double MinimalJumpLength = 2;
  void clear_minimaljumplength() ;
  double minimaljumplength() const;
  void set_minimaljumplength(double value);

  private:
  double _internal_minimaljumplength() const;
  void _internal_set_minimaljumplength(double value);

  public:
  // double MinimalMarkLength = 3;
  void clear_minimalmarklength() ;
  double minimalmarklength() const;
  void set_minimalmarklength(double value);

  private:
  double _internal_minimalmarklength() const;
  void _internal_set_minimalmarklength(double value);

  public:
  // bool DeleteZeroLengthJumps = 1;
  void clear_deletezerolengthjumps() ;
  bool deletezerolengthjumps() const;
  void set_deletezerolengthjumps(bool value);

  private:
  bool _internal_deletezerolengthjumps() const;
  void _internal_set_deletezerolengthjumps(bool value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.CoordinateTransformParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double minimaljumplength_;
    double minimalmarklength_;
    bool deletezerolengthjumps_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class NovantaScannerParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.NovantaScannerParams) */ {
 public:
  inline NovantaScannerParams() : NovantaScannerParams(nullptr) {}
  ~NovantaScannerParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NovantaScannerParams(::google::protobuf::internal::ConstantInitialized);

  NovantaScannerParams(const NovantaScannerParams& from);
  NovantaScannerParams(NovantaScannerParams&& from) noexcept
    : NovantaScannerParams() {
    *this = ::std::move(from);
  }

  inline NovantaScannerParams& operator=(const NovantaScannerParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline NovantaScannerParams& operator=(NovantaScannerParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NovantaScannerParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const NovantaScannerParams* internal_default_instance() {
    return reinterpret_cast<const NovantaScannerParams*>(
               &_NovantaScannerParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(NovantaScannerParams& a, NovantaScannerParams& b) {
    a.Swap(&b);
  }
  inline void Swap(NovantaScannerParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NovantaScannerParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NovantaScannerParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NovantaScannerParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NovantaScannerParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NovantaScannerParams& from) {
    NovantaScannerParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NovantaScannerParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.NovantaScannerParams";
  }
  protected:
  explicit NovantaScannerParams(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using SkyWritingMode = NovantaScannerParams_SkyWritingMode;
  static constexpr SkyWritingMode NONE = NovantaScannerParams_SkyWritingMode_NONE;
  static constexpr SkyWritingMode MODE3 = NovantaScannerParams_SkyWritingMode_MODE3;
  static constexpr SkyWritingMode SCAN_PACK = NovantaScannerParams_SkyWritingMode_SCAN_PACK;
  static inline bool SkyWritingMode_IsValid(int value) {
    return NovantaScannerParams_SkyWritingMode_IsValid(value);
  }
  static constexpr SkyWritingMode SkyWritingMode_MIN = NovantaScannerParams_SkyWritingMode_SkyWritingMode_MIN;
  static constexpr SkyWritingMode SkyWritingMode_MAX = NovantaScannerParams_SkyWritingMode_SkyWritingMode_MAX;
  static constexpr int SkyWritingMode_ARRAYSIZE = NovantaScannerParams_SkyWritingMode_SkyWritingMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* SkyWritingMode_descriptor() {
    return NovantaScannerParams_SkyWritingMode_descriptor();
  }
  template <typename T>
  static inline const std::string& SkyWritingMode_Name(T value) {
    return NovantaScannerParams_SkyWritingMode_Name(value);
  }
  static inline bool SkyWritingMode_Parse(absl::string_view name, SkyWritingMode* value) {
    return NovantaScannerParams_SkyWritingMode_Parse(name, value);
  }

  using DelayMode = NovantaScannerParams_DelayMode;
  static constexpr DelayMode MANUAL_DELAYS = NovantaScannerParams_DelayMode_MANUAL_DELAYS;
  static constexpr DelayMode VARIABLE_POLY_DELAY = NovantaScannerParams_DelayMode_VARIABLE_POLY_DELAY;
  static inline bool DelayMode_IsValid(int value) {
    return NovantaScannerParams_DelayMode_IsValid(value);
  }
  static constexpr DelayMode DelayMode_MIN = NovantaScannerParams_DelayMode_DelayMode_MIN;
  static constexpr DelayMode DelayMode_MAX = NovantaScannerParams_DelayMode_DelayMode_MAX;
  static constexpr int DelayMode_ARRAYSIZE = NovantaScannerParams_DelayMode_DelayMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* DelayMode_descriptor() {
    return NovantaScannerParams_DelayMode_descriptor();
  }
  template <typename T>
  static inline const std::string& DelayMode_Name(T value) {
    return NovantaScannerParams_DelayMode_Name(value);
  }
  static inline bool DelayMode_Parse(absl::string_view name, DelayMode* value) {
    return NovantaScannerParams_DelayMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kBasicScannerParamsFieldNumber = 1,
    kSkyWritingParamsFieldNumber = 2,
    kCoordTransformParamsFieldNumber = 3,
    kSkyWritingModeFieldNumber = 4,
    kDelayModeFieldNumber = 5,
    kRadialErrorInUmFieldNumber = 6,
    kSafetyFactorFlyByLowFieldNumber = 7,
    kSafetyFactorFlyByHighFieldNumber = 8,
    kSafetyFactorRadialErrorLimitFieldNumber = 9,
  };
  // .ManufacturingScenarioRepository.BasicScannerParams basicScannerParams = 1;
  bool has_basicscannerparams() const;
  void clear_basicscannerparams() ;
  const ::ManufacturingScenarioRepository::BasicScannerParams& basicscannerparams() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::BasicScannerParams* release_basicscannerparams();
  ::ManufacturingScenarioRepository::BasicScannerParams* mutable_basicscannerparams();
  void set_allocated_basicscannerparams(::ManufacturingScenarioRepository::BasicScannerParams* value);
  void unsafe_arena_set_allocated_basicscannerparams(::ManufacturingScenarioRepository::BasicScannerParams* value);
  ::ManufacturingScenarioRepository::BasicScannerParams* unsafe_arena_release_basicscannerparams();

  private:
  const ::ManufacturingScenarioRepository::BasicScannerParams& _internal_basicscannerparams() const;
  ::ManufacturingScenarioRepository::BasicScannerParams* _internal_mutable_basicscannerparams();

  public:
  // .ManufacturingScenarioRepository.CommonSkyWritingParams skyWritingParams = 2;
  bool has_skywritingparams() const;
  void clear_skywritingparams() ;
  const ::ManufacturingScenarioRepository::CommonSkyWritingParams& skywritingparams() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::CommonSkyWritingParams* release_skywritingparams();
  ::ManufacturingScenarioRepository::CommonSkyWritingParams* mutable_skywritingparams();
  void set_allocated_skywritingparams(::ManufacturingScenarioRepository::CommonSkyWritingParams* value);
  void unsafe_arena_set_allocated_skywritingparams(::ManufacturingScenarioRepository::CommonSkyWritingParams* value);
  ::ManufacturingScenarioRepository::CommonSkyWritingParams* unsafe_arena_release_skywritingparams();

  private:
  const ::ManufacturingScenarioRepository::CommonSkyWritingParams& _internal_skywritingparams() const;
  ::ManufacturingScenarioRepository::CommonSkyWritingParams* _internal_mutable_skywritingparams();

  public:
  // .ManufacturingScenarioRepository.CoordinateTransformParams coordTransformParams = 3;
  bool has_coordtransformparams() const;
  void clear_coordtransformparams() ;
  const ::ManufacturingScenarioRepository::CoordinateTransformParams& coordtransformparams() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::CoordinateTransformParams* release_coordtransformparams();
  ::ManufacturingScenarioRepository::CoordinateTransformParams* mutable_coordtransformparams();
  void set_allocated_coordtransformparams(::ManufacturingScenarioRepository::CoordinateTransformParams* value);
  void unsafe_arena_set_allocated_coordtransformparams(::ManufacturingScenarioRepository::CoordinateTransformParams* value);
  ::ManufacturingScenarioRepository::CoordinateTransformParams* unsafe_arena_release_coordtransformparams();

  private:
  const ::ManufacturingScenarioRepository::CoordinateTransformParams& _internal_coordtransformparams() const;
  ::ManufacturingScenarioRepository::CoordinateTransformParams* _internal_mutable_coordtransformparams();

  public:
  // .ManufacturingScenarioRepository.NovantaScannerParams.SkyWritingMode skyWritingMode = 4;
  void clear_skywritingmode() ;
  ::ManufacturingScenarioRepository::NovantaScannerParams_SkyWritingMode skywritingmode() const;
  void set_skywritingmode(::ManufacturingScenarioRepository::NovantaScannerParams_SkyWritingMode value);

  private:
  ::ManufacturingScenarioRepository::NovantaScannerParams_SkyWritingMode _internal_skywritingmode() const;
  void _internal_set_skywritingmode(::ManufacturingScenarioRepository::NovantaScannerParams_SkyWritingMode value);

  public:
  // .ManufacturingScenarioRepository.NovantaScannerParams.DelayMode delayMode = 5;
  void clear_delaymode() ;
  ::ManufacturingScenarioRepository::NovantaScannerParams_DelayMode delaymode() const;
  void set_delaymode(::ManufacturingScenarioRepository::NovantaScannerParams_DelayMode value);

  private:
  ::ManufacturingScenarioRepository::NovantaScannerParams_DelayMode _internal_delaymode() const;
  void _internal_set_delaymode(::ManufacturingScenarioRepository::NovantaScannerParams_DelayMode value);

  public:
  // double radialErrorInUm = 6;
  void clear_radialerrorinum() ;
  double radialerrorinum() const;
  void set_radialerrorinum(double value);

  private:
  double _internal_radialerrorinum() const;
  void _internal_set_radialerrorinum(double value);

  public:
  // double SafetyFactorFlyByLow = 7;
  void clear_safetyfactorflybylow() ;
  double safetyfactorflybylow() const;
  void set_safetyfactorflybylow(double value);

  private:
  double _internal_safetyfactorflybylow() const;
  void _internal_set_safetyfactorflybylow(double value);

  public:
  // double SafetyFactorFlyByHigh = 8;
  void clear_safetyfactorflybyhigh() ;
  double safetyfactorflybyhigh() const;
  void set_safetyfactorflybyhigh(double value);

  private:
  double _internal_safetyfactorflybyhigh() const;
  void _internal_set_safetyfactorflybyhigh(double value);

  public:
  // double SafetyFactorRadialErrorLimit = 9;
  void clear_safetyfactorradialerrorlimit() ;
  double safetyfactorradialerrorlimit() const;
  void set_safetyfactorradialerrorlimit(double value);

  private:
  double _internal_safetyfactorradialerrorlimit() const;
  void _internal_set_safetyfactorradialerrorlimit(double value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.NovantaScannerParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9, 3, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::ManufacturingScenarioRepository::BasicScannerParams* basicscannerparams_;
    ::ManufacturingScenarioRepository::CommonSkyWritingParams* skywritingparams_;
    ::ManufacturingScenarioRepository::CoordinateTransformParams* coordtransformparams_;
    int skywritingmode_;
    int delaymode_;
    double radialerrorinum_;
    double safetyfactorflybylow_;
    double safetyfactorflybyhigh_;
    double safetyfactorradialerrorlimit_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class ScanlabScannerParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.ScanlabScannerParams) */ {
 public:
  inline ScanlabScannerParams() : ScanlabScannerParams(nullptr) {}
  ~ScanlabScannerParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScanlabScannerParams(::google::protobuf::internal::ConstantInitialized);

  ScanlabScannerParams(const ScanlabScannerParams& from);
  ScanlabScannerParams(ScanlabScannerParams&& from) noexcept
    : ScanlabScannerParams() {
    *this = ::std::move(from);
  }

  inline ScanlabScannerParams& operator=(const ScanlabScannerParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScanlabScannerParams& operator=(ScanlabScannerParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScanlabScannerParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScanlabScannerParams* internal_default_instance() {
    return reinterpret_cast<const ScanlabScannerParams*>(
               &_ScanlabScannerParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ScanlabScannerParams& a, ScanlabScannerParams& b) {
    a.Swap(&b);
  }
  inline void Swap(ScanlabScannerParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScanlabScannerParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScanlabScannerParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScanlabScannerParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScanlabScannerParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ScanlabScannerParams& from) {
    ScanlabScannerParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScanlabScannerParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.ScanlabScannerParams";
  }
  protected:
  explicit ScanlabScannerParams(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using SkyWritingMode = ScanlabScannerParams_SkyWritingMode;
  static constexpr SkyWritingMode NONE = ScanlabScannerParams_SkyWritingMode_NONE;
  static constexpr SkyWritingMode MODE1 = ScanlabScannerParams_SkyWritingMode_MODE1;
  static constexpr SkyWritingMode MODE2 = ScanlabScannerParams_SkyWritingMode_MODE2;
  static constexpr SkyWritingMode MODE3 = ScanlabScannerParams_SkyWritingMode_MODE3;
  static inline bool SkyWritingMode_IsValid(int value) {
    return ScanlabScannerParams_SkyWritingMode_IsValid(value);
  }
  static constexpr SkyWritingMode SkyWritingMode_MIN = ScanlabScannerParams_SkyWritingMode_SkyWritingMode_MIN;
  static constexpr SkyWritingMode SkyWritingMode_MAX = ScanlabScannerParams_SkyWritingMode_SkyWritingMode_MAX;
  static constexpr int SkyWritingMode_ARRAYSIZE = ScanlabScannerParams_SkyWritingMode_SkyWritingMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* SkyWritingMode_descriptor() {
    return ScanlabScannerParams_SkyWritingMode_descriptor();
  }
  template <typename T>
  static inline const std::string& SkyWritingMode_Name(T value) {
    return ScanlabScannerParams_SkyWritingMode_Name(value);
  }
  static inline bool SkyWritingMode_Parse(absl::string_view name, SkyWritingMode* value) {
    return ScanlabScannerParams_SkyWritingMode_Parse(name, value);
  }

  using SkyWritingParametringMode = ScanlabScannerParams_SkyWritingParametringMode;
  static constexpr SkyWritingParametringMode MANUAL_NPREV_NPOST = ScanlabScannerParams_SkyWritingParametringMode_MANUAL_NPREV_NPOST;
  static constexpr SkyWritingParametringMode AUTOMATIC_NPREV_NPOST_BASED_ON_TIMELAG = ScanlabScannerParams_SkyWritingParametringMode_AUTOMATIC_NPREV_NPOST_BASED_ON_TIMELAG;
  static constexpr SkyWritingParametringMode MINIMUM_NPREV_NPOST_ACCELERATION = ScanlabScannerParams_SkyWritingParametringMode_MINIMUM_NPREV_NPOST_ACCELERATION;
  static inline bool SkyWritingParametringMode_IsValid(int value) {
    return ScanlabScannerParams_SkyWritingParametringMode_IsValid(value);
  }
  static constexpr SkyWritingParametringMode SkyWritingParametringMode_MIN = ScanlabScannerParams_SkyWritingParametringMode_SkyWritingParametringMode_MIN;
  static constexpr SkyWritingParametringMode SkyWritingParametringMode_MAX = ScanlabScannerParams_SkyWritingParametringMode_SkyWritingParametringMode_MAX;
  static constexpr int SkyWritingParametringMode_ARRAYSIZE = ScanlabScannerParams_SkyWritingParametringMode_SkyWritingParametringMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* SkyWritingParametringMode_descriptor() {
    return ScanlabScannerParams_SkyWritingParametringMode_descriptor();
  }
  template <typename T>
  static inline const std::string& SkyWritingParametringMode_Name(T value) {
    return ScanlabScannerParams_SkyWritingParametringMode_Name(value);
  }
  static inline bool SkyWritingParametringMode_Parse(absl::string_view name, SkyWritingParametringMode* value) {
    return ScanlabScannerParams_SkyWritingParametringMode_Parse(name, value);
  }

  using DelayMode = ScanlabScannerParams_DelayMode;
  static constexpr DelayMode MANUAL_DELAYS = ScanlabScannerParams_DelayMode_MANUAL_DELAYS;
  static constexpr DelayMode VARIABLE_POLY_DELAY = ScanlabScannerParams_DelayMode_VARIABLE_POLY_DELAY;
  static constexpr DelayMode MINIMUM_DELAY_ACCELERATION = ScanlabScannerParams_DelayMode_MINIMUM_DELAY_ACCELERATION;
  static inline bool DelayMode_IsValid(int value) {
    return ScanlabScannerParams_DelayMode_IsValid(value);
  }
  static constexpr DelayMode DelayMode_MIN = ScanlabScannerParams_DelayMode_DelayMode_MIN;
  static constexpr DelayMode DelayMode_MAX = ScanlabScannerParams_DelayMode_DelayMode_MAX;
  static constexpr int DelayMode_ARRAYSIZE = ScanlabScannerParams_DelayMode_DelayMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* DelayMode_descriptor() {
    return ScanlabScannerParams_DelayMode_descriptor();
  }
  template <typename T>
  static inline const std::string& DelayMode_Name(T value) {
    return ScanlabScannerParams_DelayMode_Name(value);
  }
  static inline bool DelayMode_Parse(absl::string_view name, DelayMode* value) {
    return ScanlabScannerParams_DelayMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kBasicScannerParamsFieldNumber = 1,
    kSkyWritingParamsFieldNumber = 2,
    kCoordTransformParamsFieldNumber = 3,
    kTimeLagInUsFieldNumber = 5,
    kSkyWritingModeFieldNumber = 4,
    kSkyWritingParametringModeFieldNumber = 6,
    kDelayModeFieldNumber = 7,
  };
  // .ManufacturingScenarioRepository.BasicScannerParams basicScannerParams = 1;
  bool has_basicscannerparams() const;
  void clear_basicscannerparams() ;
  const ::ManufacturingScenarioRepository::BasicScannerParams& basicscannerparams() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::BasicScannerParams* release_basicscannerparams();
  ::ManufacturingScenarioRepository::BasicScannerParams* mutable_basicscannerparams();
  void set_allocated_basicscannerparams(::ManufacturingScenarioRepository::BasicScannerParams* value);
  void unsafe_arena_set_allocated_basicscannerparams(::ManufacturingScenarioRepository::BasicScannerParams* value);
  ::ManufacturingScenarioRepository::BasicScannerParams* unsafe_arena_release_basicscannerparams();

  private:
  const ::ManufacturingScenarioRepository::BasicScannerParams& _internal_basicscannerparams() const;
  ::ManufacturingScenarioRepository::BasicScannerParams* _internal_mutable_basicscannerparams();

  public:
  // .ManufacturingScenarioRepository.CommonSkyWritingParams skyWritingParams = 2;
  bool has_skywritingparams() const;
  void clear_skywritingparams() ;
  const ::ManufacturingScenarioRepository::CommonSkyWritingParams& skywritingparams() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::CommonSkyWritingParams* release_skywritingparams();
  ::ManufacturingScenarioRepository::CommonSkyWritingParams* mutable_skywritingparams();
  void set_allocated_skywritingparams(::ManufacturingScenarioRepository::CommonSkyWritingParams* value);
  void unsafe_arena_set_allocated_skywritingparams(::ManufacturingScenarioRepository::CommonSkyWritingParams* value);
  ::ManufacturingScenarioRepository::CommonSkyWritingParams* unsafe_arena_release_skywritingparams();

  private:
  const ::ManufacturingScenarioRepository::CommonSkyWritingParams& _internal_skywritingparams() const;
  ::ManufacturingScenarioRepository::CommonSkyWritingParams* _internal_mutable_skywritingparams();

  public:
  // .ManufacturingScenarioRepository.CoordinateTransformParams coordTransformParams = 3;
  bool has_coordtransformparams() const;
  void clear_coordtransformparams() ;
  const ::ManufacturingScenarioRepository::CoordinateTransformParams& coordtransformparams() const;
  PROTOBUF_NODISCARD ::ManufacturingScenarioRepository::CoordinateTransformParams* release_coordtransformparams();
  ::ManufacturingScenarioRepository::CoordinateTransformParams* mutable_coordtransformparams();
  void set_allocated_coordtransformparams(::ManufacturingScenarioRepository::CoordinateTransformParams* value);
  void unsafe_arena_set_allocated_coordtransformparams(::ManufacturingScenarioRepository::CoordinateTransformParams* value);
  ::ManufacturingScenarioRepository::CoordinateTransformParams* unsafe_arena_release_coordtransformparams();

  private:
  const ::ManufacturingScenarioRepository::CoordinateTransformParams& _internal_coordtransformparams() const;
  ::ManufacturingScenarioRepository::CoordinateTransformParams* _internal_mutable_coordtransformparams();

  public:
  // double timeLagInUs = 5;
  void clear_timelaginus() ;
  double timelaginus() const;
  void set_timelaginus(double value);

  private:
  double _internal_timelaginus() const;
  void _internal_set_timelaginus(double value);

  public:
  // .ManufacturingScenarioRepository.ScanlabScannerParams.SkyWritingMode skyWritingMode = 4;
  void clear_skywritingmode() ;
  ::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingMode skywritingmode() const;
  void set_skywritingmode(::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingMode value);

  private:
  ::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingMode _internal_skywritingmode() const;
  void _internal_set_skywritingmode(::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingMode value);

  public:
  // .ManufacturingScenarioRepository.ScanlabScannerParams.SkyWritingParametringMode skyWritingParametringMode = 6;
  void clear_skywritingparametringmode() ;
  ::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingParametringMode skywritingparametringmode() const;
  void set_skywritingparametringmode(::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingParametringMode value);

  private:
  ::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingParametringMode _internal_skywritingparametringmode() const;
  void _internal_set_skywritingparametringmode(::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingParametringMode value);

  public:
  // .ManufacturingScenarioRepository.ScanlabScannerParams.DelayMode delayMode = 7;
  void clear_delaymode() ;
  ::ManufacturingScenarioRepository::ScanlabScannerParams_DelayMode delaymode() const;
  void set_delaymode(::ManufacturingScenarioRepository::ScanlabScannerParams_DelayMode value);

  private:
  ::ManufacturingScenarioRepository::ScanlabScannerParams_DelayMode _internal_delaymode() const;
  void _internal_set_delaymode(::ManufacturingScenarioRepository::ScanlabScannerParams_DelayMode value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.ScanlabScannerParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 3, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::ManufacturingScenarioRepository::BasicScannerParams* basicscannerparams_;
    ::ManufacturingScenarioRepository::CommonSkyWritingParams* skywritingparams_;
    ::ManufacturingScenarioRepository::CoordinateTransformParams* coordtransformparams_;
    double timelaginus_;
    int skywritingmode_;
    int skywritingparametringmode_;
    int delaymode_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class ScanField final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.ScanField) */ {
 public:
  inline ScanField() : ScanField(nullptr) {}
  ~ScanField() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScanField(::google::protobuf::internal::ConstantInitialized);

  ScanField(const ScanField& from);
  ScanField(ScanField&& from) noexcept
    : ScanField() {
    *this = ::std::move(from);
  }

  inline ScanField& operator=(const ScanField& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScanField& operator=(ScanField&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScanField& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScanField* internal_default_instance() {
    return reinterpret_cast<const ScanField*>(
               &_ScanField_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ScanField& a, ScanField& b) {
    a.Swap(&b);
  }
  inline void Swap(ScanField* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScanField* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScanField* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScanField>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScanField& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ScanField& from) {
    ScanField::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScanField* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.ScanField";
  }
  protected:
  explicit ScanField(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXMinFieldNumber = 1,
    kXMaxFieldNumber = 2,
    kYMinFieldNumber = 3,
    kYMaxFieldNumber = 4,
  };
  // double XMin = 1;
  void clear_xmin() ;
  double xmin() const;
  void set_xmin(double value);

  private:
  double _internal_xmin() const;
  void _internal_set_xmin(double value);

  public:
  // double XMax = 2;
  void clear_xmax() ;
  double xmax() const;
  void set_xmax(double value);

  private:
  double _internal_xmax() const;
  void _internal_set_xmax(double value);

  public:
  // double YMin = 3;
  void clear_ymin() ;
  double ymin() const;
  void set_ymin(double value);

  private:
  double _internal_ymin() const;
  void _internal_set_ymin(double value);

  public:
  // double YMax = 4;
  void clear_ymax() ;
  double ymax() const;
  void set_ymax(double value);

  private:
  double _internal_ymax() const;
  void _internal_set_ymax(double value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.ScanField)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double xmin_;
    double xmax_;
    double ymin_;
    double ymax_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class LaserParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.LaserParams) */ {
 public:
  inline LaserParams() : LaserParams(nullptr) {}
  ~LaserParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LaserParams(::google::protobuf::internal::ConstantInitialized);

  LaserParams(const LaserParams& from);
  LaserParams(LaserParams&& from) noexcept
    : LaserParams() {
    *this = ::std::move(from);
  }

  inline LaserParams& operator=(const LaserParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline LaserParams& operator=(LaserParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LaserParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const LaserParams* internal_default_instance() {
    return reinterpret_cast<const LaserParams*>(
               &_LaserParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(LaserParams& a, LaserParams& b) {
    a.Swap(&b);
  }
  inline void Swap(LaserParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LaserParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LaserParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LaserParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LaserParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LaserParams& from) {
    LaserParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LaserParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.LaserParams";
  }
  protected:
  explicit LaserParams(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLaserPowerInWFieldNumber = 2,
  };
  // double LaserPowerInW = 2;
  void clear_laserpowerinw() ;
  double laserpowerinw() const;
  void set_laserpowerinw(double value);

  private:
  double _internal_laserpowerinw() const;
  void _internal_set_laserpowerinw(double value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.LaserParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double laserpowerinw_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class StandardCoaterParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.StandardCoaterParams) */ {
 public:
  inline StandardCoaterParams() : StandardCoaterParams(nullptr) {}
  ~StandardCoaterParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StandardCoaterParams(::google::protobuf::internal::ConstantInitialized);

  StandardCoaterParams(const StandardCoaterParams& from);
  StandardCoaterParams(StandardCoaterParams&& from) noexcept
    : StandardCoaterParams() {
    *this = ::std::move(from);
  }

  inline StandardCoaterParams& operator=(const StandardCoaterParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline StandardCoaterParams& operator=(StandardCoaterParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StandardCoaterParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const StandardCoaterParams* internal_default_instance() {
    return reinterpret_cast<const StandardCoaterParams*>(
               &_StandardCoaterParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(StandardCoaterParams& a, StandardCoaterParams& b) {
    a.Swap(&b);
  }
  inline void Swap(StandardCoaterParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StandardCoaterParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StandardCoaterParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StandardCoaterParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StandardCoaterParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StandardCoaterParams& from) {
    StandardCoaterParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StandardCoaterParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.StandardCoaterParams";
  }
  protected:
  explicit StandardCoaterParams(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCoatingSpeedForwardInMmPerSecFieldNumber = 1,
    kCoatingSpeedBackwardInMmPerSecFieldNumber = 2,
    kDistanceInMmFieldNumber = 3,
    kForwardDelayInSecFieldNumber = 4,
    kBackwardDelayInSecFieldNumber = 5,
    kAccelerationFieldNumber = 6,
    kIsBidirectionalFieldNumber = 7,
  };
  // double coatingSpeedForwardInMmPerSec = 1;
  void clear_coatingspeedforwardinmmpersec() ;
  double coatingspeedforwardinmmpersec() const;
  void set_coatingspeedforwardinmmpersec(double value);

  private:
  double _internal_coatingspeedforwardinmmpersec() const;
  void _internal_set_coatingspeedforwardinmmpersec(double value);

  public:
  // double coatingSpeedBackwardInMmPerSec = 2;
  void clear_coatingspeedbackwardinmmpersec() ;
  double coatingspeedbackwardinmmpersec() const;
  void set_coatingspeedbackwardinmmpersec(double value);

  private:
  double _internal_coatingspeedbackwardinmmpersec() const;
  void _internal_set_coatingspeedbackwardinmmpersec(double value);

  public:
  // double distanceInMm = 3;
  void clear_distanceinmm() ;
  double distanceinmm() const;
  void set_distanceinmm(double value);

  private:
  double _internal_distanceinmm() const;
  void _internal_set_distanceinmm(double value);

  public:
  // double forwardDelayInSec = 4;
  void clear_forwarddelayinsec() ;
  double forwarddelayinsec() const;
  void set_forwarddelayinsec(double value);

  private:
  double _internal_forwarddelayinsec() const;
  void _internal_set_forwarddelayinsec(double value);

  public:
  // double backwardDelayInSec = 5;
  void clear_backwarddelayinsec() ;
  double backwarddelayinsec() const;
  void set_backwarddelayinsec(double value);

  private:
  double _internal_backwarddelayinsec() const;
  void _internal_set_backwarddelayinsec(double value);

  public:
  // double acceleration = 6;
  void clear_acceleration() ;
  double acceleration() const;
  void set_acceleration(double value);

  private:
  double _internal_acceleration() const;
  void _internal_set_acceleration(double value);

  public:
  // bool isBidirectional = 7;
  void clear_isbidirectional() ;
  bool isbidirectional() const;
  void set_isbidirectional(bool value);

  private:
  bool _internal_isbidirectional() const;
  void _internal_set_isbidirectional(bool value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.StandardCoaterParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double coatingspeedforwardinmmpersec_;
    double coatingspeedbackwardinmmpersec_;
    double distanceinmm_;
    double forwarddelayinsec_;
    double backwarddelayinsec_;
    double acceleration_;
    bool isbidirectional_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class BuildChamberParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.BuildChamberParams) */ {
 public:
  inline BuildChamberParams() : BuildChamberParams(nullptr) {}
  ~BuildChamberParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BuildChamberParams(::google::protobuf::internal::ConstantInitialized);

  BuildChamberParams(const BuildChamberParams& from);
  BuildChamberParams(BuildChamberParams&& from) noexcept
    : BuildChamberParams() {
    *this = ::std::move(from);
  }

  inline BuildChamberParams& operator=(const BuildChamberParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuildChamberParams& operator=(BuildChamberParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuildChamberParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuildChamberParams* internal_default_instance() {
    return reinterpret_cast<const BuildChamberParams*>(
               &_BuildChamberParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(BuildChamberParams& a, BuildChamberParams& b) {
    a.Swap(&b);
  }
  inline void Swap(BuildChamberParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuildChamberParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuildChamberParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BuildChamberParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BuildChamberParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BuildChamberParams& from) {
    BuildChamberParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BuildChamberParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.BuildChamberParams";
  }
  protected:
  explicit BuildChamberParams(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlatformLiftRateInMmPerSecFieldNumber = 1,
    kInertAtmosphereTimeInSFieldNumber = 2,
    kReleaseAtmosphereTimeInSFieldNumber = 3,
    kMaximumO2PPMFieldNumber = 4,
    kPlatformLiftAccelerationInMmPerSec2FieldNumber = 5,
    kPlatformLiftDelayInSFieldNumber = 6,
  };
  // double platformLiftRateInMmPerSec = 1;
  void clear_platformliftrateinmmpersec() ;
  double platformliftrateinmmpersec() const;
  void set_platformliftrateinmmpersec(double value);

  private:
  double _internal_platformliftrateinmmpersec() const;
  void _internal_set_platformliftrateinmmpersec(double value);

  public:
  // double inertAtmosphereTimeInS = 2;
  void clear_inertatmospheretimeins() ;
  double inertatmospheretimeins() const;
  void set_inertatmospheretimeins(double value);

  private:
  double _internal_inertatmospheretimeins() const;
  void _internal_set_inertatmospheretimeins(double value);

  public:
  // double releaseAtmosphereTimeInS = 3;
  void clear_releaseatmospheretimeins() ;
  double releaseatmospheretimeins() const;
  void set_releaseatmospheretimeins(double value);

  private:
  double _internal_releaseatmospheretimeins() const;
  void _internal_set_releaseatmospheretimeins(double value);

  public:
  // double maximumO2PPM = 4;
  void clear_maximumo2ppm() ;
  double maximumo2ppm() const;
  void set_maximumo2ppm(double value);

  private:
  double _internal_maximumo2ppm() const;
  void _internal_set_maximumo2ppm(double value);

  public:
  // double platformLiftAccelerationInMmPerSec2 = 5;
  void clear_platformliftaccelerationinmmpersec2() ;
  double platformliftaccelerationinmmpersec2() const;
  void set_platformliftaccelerationinmmpersec2(double value);

  private:
  double _internal_platformliftaccelerationinmmpersec2() const;
  void _internal_set_platformliftaccelerationinmmpersec2(double value);

  public:
  // double platformLiftDelayInS = 6;
  void clear_platformliftdelayins() ;
  double platformliftdelayins() const;
  void set_platformliftdelayins(double value);

  private:
  double _internal_platformliftdelayins() const;
  void _internal_set_platformliftdelayins(double value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.BuildChamberParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double platformliftrateinmmpersec_;
    double inertatmospheretimeins_;
    double releaseatmospheretimeins_;
    double maximumo2ppm_;
    double platformliftaccelerationinmmpersec2_;
    double platformliftdelayins_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class CuboidBuildVolumeParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.CuboidBuildVolumeParams) */ {
 public:
  inline CuboidBuildVolumeParams() : CuboidBuildVolumeParams(nullptr) {}
  ~CuboidBuildVolumeParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CuboidBuildVolumeParams(::google::protobuf::internal::ConstantInitialized);

  CuboidBuildVolumeParams(const CuboidBuildVolumeParams& from);
  CuboidBuildVolumeParams(CuboidBuildVolumeParams&& from) noexcept
    : CuboidBuildVolumeParams() {
    *this = ::std::move(from);
  }

  inline CuboidBuildVolumeParams& operator=(const CuboidBuildVolumeParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline CuboidBuildVolumeParams& operator=(CuboidBuildVolumeParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CuboidBuildVolumeParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const CuboidBuildVolumeParams* internal_default_instance() {
    return reinterpret_cast<const CuboidBuildVolumeParams*>(
               &_CuboidBuildVolumeParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CuboidBuildVolumeParams& a, CuboidBuildVolumeParams& b) {
    a.Swap(&b);
  }
  inline void Swap(CuboidBuildVolumeParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CuboidBuildVolumeParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CuboidBuildVolumeParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CuboidBuildVolumeParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CuboidBuildVolumeParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CuboidBuildVolumeParams& from) {
    CuboidBuildVolumeParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CuboidBuildVolumeParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.CuboidBuildVolumeParams";
  }
  protected:
  explicit CuboidBuildVolumeParams(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXMinFieldNumber = 1,
    kXMaxFieldNumber = 2,
    kYMinFieldNumber = 3,
    kYMaxFieldNumber = 4,
    kZMinFieldNumber = 5,
    kZMaxFieldNumber = 6,
  };
  // double XMin = 1;
  void clear_xmin() ;
  double xmin() const;
  void set_xmin(double value);

  private:
  double _internal_xmin() const;
  void _internal_set_xmin(double value);

  public:
  // double XMax = 2;
  void clear_xmax() ;
  double xmax() const;
  void set_xmax(double value);

  private:
  double _internal_xmax() const;
  void _internal_set_xmax(double value);

  public:
  // double YMin = 3;
  void clear_ymin() ;
  double ymin() const;
  void set_ymin(double value);

  private:
  double _internal_ymin() const;
  void _internal_set_ymin(double value);

  public:
  // double YMax = 4;
  void clear_ymax() ;
  double ymax() const;
  void set_ymax(double value);

  private:
  double _internal_ymax() const;
  void _internal_set_ymax(double value);

  public:
  // double ZMin = 5;
  void clear_zmin() ;
  double zmin() const;
  void set_zmin(double value);

  private:
  double _internal_zmin() const;
  void _internal_set_zmin(double value);

  public:
  // double ZMax = 6;
  void clear_zmax() ;
  double zmax() const;
  void set_zmax(double value);

  private:
  double _internal_zmax() const;
  void _internal_set_zmax(double value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.CuboidBuildVolumeParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double xmin_;
    double xmax_;
    double ymin_;
    double ymax_;
    double zmin_;
    double zmax_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class ZylinderBuildVolumeParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.ZylinderBuildVolumeParams) */ {
 public:
  inline ZylinderBuildVolumeParams() : ZylinderBuildVolumeParams(nullptr) {}
  ~ZylinderBuildVolumeParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ZylinderBuildVolumeParams(::google::protobuf::internal::ConstantInitialized);

  ZylinderBuildVolumeParams(const ZylinderBuildVolumeParams& from);
  ZylinderBuildVolumeParams(ZylinderBuildVolumeParams&& from) noexcept
    : ZylinderBuildVolumeParams() {
    *this = ::std::move(from);
  }

  inline ZylinderBuildVolumeParams& operator=(const ZylinderBuildVolumeParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZylinderBuildVolumeParams& operator=(ZylinderBuildVolumeParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ZylinderBuildVolumeParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const ZylinderBuildVolumeParams* internal_default_instance() {
    return reinterpret_cast<const ZylinderBuildVolumeParams*>(
               &_ZylinderBuildVolumeParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ZylinderBuildVolumeParams& a, ZylinderBuildVolumeParams& b) {
    a.Swap(&b);
  }
  inline void Swap(ZylinderBuildVolumeParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ZylinderBuildVolumeParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ZylinderBuildVolumeParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ZylinderBuildVolumeParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ZylinderBuildVolumeParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ZylinderBuildVolumeParams& from) {
    ZylinderBuildVolumeParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ZylinderBuildVolumeParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.ZylinderBuildVolumeParams";
  }
  protected:
  explicit ZylinderBuildVolumeParams(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDiameterFieldNumber = 2,
    kHeightFieldNumber = 3,
  };
  // double diameter = 2;
  void clear_diameter() ;
  double diameter() const;
  void set_diameter(double value);

  private:
  double _internal_diameter() const;
  void _internal_set_diameter(double value);

  public:
  // double height = 3;
  void clear_height() ;
  double height() const;
  void set_height(double value);

  private:
  double _internal_height() const;
  void _internal_set_height(double value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.ZylinderBuildVolumeParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double diameter_;
    double height_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class PreheaterParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.PreheaterParams) */ {
 public:
  inline PreheaterParams() : PreheaterParams(nullptr) {}
  ~PreheaterParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PreheaterParams(::google::protobuf::internal::ConstantInitialized);

  PreheaterParams(const PreheaterParams& from);
  PreheaterParams(PreheaterParams&& from) noexcept
    : PreheaterParams() {
    *this = ::std::move(from);
  }

  inline PreheaterParams& operator=(const PreheaterParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline PreheaterParams& operator=(PreheaterParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PreheaterParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const PreheaterParams* internal_default_instance() {
    return reinterpret_cast<const PreheaterParams*>(
               &_PreheaterParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(PreheaterParams& a, PreheaterParams& b) {
    a.Swap(&b);
  }
  inline void Swap(PreheaterParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PreheaterParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PreheaterParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PreheaterParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PreheaterParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PreheaterParams& from) {
    PreheaterParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PreheaterParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.PreheaterParams";
  }
  protected:
  explicit PreheaterParams(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPreheatingTemperatureFieldNumber = 2,
    kMaximumPreheatingTemperatureFieldNumber = 3,
    kHeatingRateInSecPerKFieldNumber = 4,
    kRoomTemperatureFieldNumber = 5,
  };
  // double preheatingTemperature = 2;
  void clear_preheatingtemperature() ;
  double preheatingtemperature() const;
  void set_preheatingtemperature(double value);

  private:
  double _internal_preheatingtemperature() const;
  void _internal_set_preheatingtemperature(double value);

  public:
  // double maximumPreheatingTemperature = 3;
  void clear_maximumpreheatingtemperature() ;
  double maximumpreheatingtemperature() const;
  void set_maximumpreheatingtemperature(double value);

  private:
  double _internal_maximumpreheatingtemperature() const;
  void _internal_set_maximumpreheatingtemperature(double value);

  public:
  // double heatingRateInSecPerK = 4;
  void clear_heatingrateinsecperk() ;
  double heatingrateinsecperk() const;
  void set_heatingrateinsecperk(double value);

  private:
  double _internal_heatingrateinsecperk() const;
  void _internal_set_heatingrateinsecperk(double value);

  public:
  // double roomTemperature = 5;
  void clear_roomtemperature() ;
  double roomtemperature() const;
  void set_roomtemperature(double value);

  private:
  double _internal_roomtemperature() const;
  void _internal_set_roomtemperature(double value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.PreheaterParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double preheatingtemperature_;
    double maximumpreheatingtemperature_;
    double heatingrateinsecperk_;
    double roomtemperature_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class TimePerStateInMS final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.TimePerStateInMS) */ {
 public:
  inline TimePerStateInMS() : TimePerStateInMS(nullptr) {}
  ~TimePerStateInMS() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TimePerStateInMS(::google::protobuf::internal::ConstantInitialized);

  TimePerStateInMS(const TimePerStateInMS& from);
  TimePerStateInMS(TimePerStateInMS&& from) noexcept
    : TimePerStateInMS() {
    *this = ::std::move(from);
  }

  inline TimePerStateInMS& operator=(const TimePerStateInMS& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimePerStateInMS& operator=(TimePerStateInMS&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimePerStateInMS& default_instance() {
    return *internal_default_instance();
  }
  static inline const TimePerStateInMS* internal_default_instance() {
    return reinterpret_cast<const TimePerStateInMS*>(
               &_TimePerStateInMS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(TimePerStateInMS& a, TimePerStateInMS& b) {
    a.Swap(&b);
  }
  inline void Swap(TimePerStateInMS* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimePerStateInMS* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TimePerStateInMS* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TimePerStateInMS>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TimePerStateInMS& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TimePerStateInMS& from) {
    TimePerStateInMS::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimePerStateInMS* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.TimePerStateInMS";
  }
  protected:
  explicit TimePerStateInMS(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeOffFieldNumber = 1,
    kTimeIdleFieldNumber = 2,
    kTimeActiveFieldNumber = 3,
    kTimeMaintenanceFieldNumber = 4,
  };
  // double timeOff = 1;
  void clear_timeoff() ;
  double timeoff() const;
  void set_timeoff(double value);

  private:
  double _internal_timeoff() const;
  void _internal_set_timeoff(double value);

  public:
  // double timeIdle = 2;
  void clear_timeidle() ;
  double timeidle() const;
  void set_timeidle(double value);

  private:
  double _internal_timeidle() const;
  void _internal_set_timeidle(double value);

  public:
  // double timeActive = 3;
  void clear_timeactive() ;
  double timeactive() const;
  void set_timeactive(double value);

  private:
  double _internal_timeactive() const;
  void _internal_set_timeactive(double value);

  public:
  // double timeMaintenance = 4;
  void clear_timemaintenance() ;
  double timemaintenance() const;
  void set_timemaintenance(double value);

  private:
  double _internal_timemaintenance() const;
  void _internal_set_timemaintenance(double value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.TimePerStateInMS)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double timeoff_;
    double timeidle_;
    double timeactive_;
    double timemaintenance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};// -------------------------------------------------------------------

class EnergyUsePerStateInkWh final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManufacturingScenarioRepository.EnergyUsePerStateInkWh) */ {
 public:
  inline EnergyUsePerStateInkWh() : EnergyUsePerStateInkWh(nullptr) {}
  ~EnergyUsePerStateInkWh() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EnergyUsePerStateInkWh(::google::protobuf::internal::ConstantInitialized);

  EnergyUsePerStateInkWh(const EnergyUsePerStateInkWh& from);
  EnergyUsePerStateInkWh(EnergyUsePerStateInkWh&& from) noexcept
    : EnergyUsePerStateInkWh() {
    *this = ::std::move(from);
  }

  inline EnergyUsePerStateInkWh& operator=(const EnergyUsePerStateInkWh& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnergyUsePerStateInkWh& operator=(EnergyUsePerStateInkWh&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnergyUsePerStateInkWh& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnergyUsePerStateInkWh* internal_default_instance() {
    return reinterpret_cast<const EnergyUsePerStateInkWh*>(
               &_EnergyUsePerStateInkWh_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(EnergyUsePerStateInkWh& a, EnergyUsePerStateInkWh& b) {
    a.Swap(&b);
  }
  inline void Swap(EnergyUsePerStateInkWh* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnergyUsePerStateInkWh* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnergyUsePerStateInkWh* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EnergyUsePerStateInkWh>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnergyUsePerStateInkWh& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EnergyUsePerStateInkWh& from) {
    EnergyUsePerStateInkWh::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnergyUsePerStateInkWh* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ManufacturingScenarioRepository.EnergyUsePerStateInkWh";
  }
  protected:
  explicit EnergyUsePerStateInkWh(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnergyOffFieldNumber = 1,
    kEnergyIdleFieldNumber = 2,
    kEnergyActiveFieldNumber = 3,
    kEnergyMaintenanceFieldNumber = 4,
  };
  // double energyOff = 1;
  void clear_energyoff() ;
  double energyoff() const;
  void set_energyoff(double value);

  private:
  double _internal_energyoff() const;
  void _internal_set_energyoff(double value);

  public:
  // double energyIdle = 2;
  void clear_energyidle() ;
  double energyidle() const;
  void set_energyidle(double value);

  private:
  double _internal_energyidle() const;
  void _internal_set_energyidle(double value);

  public:
  // double energyActive = 3;
  void clear_energyactive() ;
  double energyactive() const;
  void set_energyactive(double value);

  private:
  double _internal_energyactive() const;
  void _internal_set_energyactive(double value);

  public:
  // double energyMaintenance = 4;
  void clear_energymaintenance() ;
  double energymaintenance() const;
  void set_energymaintenance(double value);

  private:
  double _internal_energymaintenance() const;
  void _internal_set_energymaintenance(double value);

  public:
  // @@protoc_insertion_point(class_scope:ManufacturingScenarioRepository.EnergyUsePerStateInkWh)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double energyoff_;
    double energyidle_;
    double energyactive_;
    double energymaintenance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ModuleDefinition_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OPCUAIdentification

// uint32 nodeId = 1;
inline void OPCUAIdentification::clear_nodeid() {
  _impl_.nodeid_ = 0u;
}
inline ::uint32_t OPCUAIdentification::nodeid() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.OPCUAIdentification.nodeId)
  return _internal_nodeid();
}
inline void OPCUAIdentification::set_nodeid(::uint32_t value) {
  _internal_set_nodeid(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.OPCUAIdentification.nodeId)
}
inline ::uint32_t OPCUAIdentification::_internal_nodeid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nodeid_;
}
inline void OPCUAIdentification::_internal_set_nodeid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nodeid_ = value;
}

// string name = 2;
inline void OPCUAIdentification::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& OPCUAIdentification::name() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.OPCUAIdentification.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OPCUAIdentification::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.OPCUAIdentification.name)
}
inline std::string* OPCUAIdentification::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.OPCUAIdentification.name)
  return _s;
}
inline const std::string& OPCUAIdentification::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void OPCUAIdentification::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* OPCUAIdentification::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* OPCUAIdentification::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.OPCUAIdentification.name)
  return _impl_.name_.Release();
}
inline void OPCUAIdentification::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.OPCUAIdentification.name)
}

// -------------------------------------------------------------------

// Module

// repeated .ManufacturingScenarioRepository.Module childModules = 1;
inline int Module::_internal_childmodules_size() const {
  return _internal_childmodules().size();
}
inline int Module::childmodules_size() const {
  return _internal_childmodules_size();
}
inline void Module::clear_childmodules() {
  _internal_mutable_childmodules()->Clear();
}
inline ::ManufacturingScenarioRepository::Module* Module::mutable_childmodules(int index) {
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.Module.childModules)
  return _internal_mutable_childmodules()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::Module >*
Module::mutable_childmodules() {
  // @@protoc_insertion_point(field_mutable_list:ManufacturingScenarioRepository.Module.childModules)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_childmodules();
}
inline const ::ManufacturingScenarioRepository::Module& Module::childmodules(int index) const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.Module.childModules)
    return _internal_childmodules().Get(index);
}
inline ::ManufacturingScenarioRepository::Module* Module::add_childmodules() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::ManufacturingScenarioRepository::Module* _add = _internal_mutable_childmodules()->Add();
  // @@protoc_insertion_point(field_add:ManufacturingScenarioRepository.Module.childModules)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::Module >&
Module::childmodules() const {
  // @@protoc_insertion_point(field_list:ManufacturingScenarioRepository.Module.childModules)
  return _internal_childmodules();
}
inline const ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::Module>&
Module::_internal_childmodules() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.childmodules_;
}
inline ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::Module>*
Module::_internal_mutable_childmodules() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.childmodules_;
}

// .ManufacturingScenarioRepository.state currentState = 2;
inline void Module::clear_currentstate() {
  _impl_.currentstate_ = 0;
}
inline ::ManufacturingScenarioRepository::state Module::currentstate() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.Module.currentState)
  return _internal_currentstate();
}
inline void Module::set_currentstate(::ManufacturingScenarioRepository::state value) {
  _internal_set_currentstate(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.Module.currentState)
}
inline ::ManufacturingScenarioRepository::state Module::_internal_currentstate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ManufacturingScenarioRepository::state>(_impl_.currentstate_);
}
inline void Module::_internal_set_currentstate(::ManufacturingScenarioRepository::state value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.currentstate_ = value;
}

// .ManufacturingScenarioRepository.TimePerStateInMS timePerStateInMS = 3;
inline bool Module::has_timeperstateinms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timeperstateinms_ != nullptr);
  return value;
}
inline void Module::clear_timeperstateinms() {
  if (_impl_.timeperstateinms_ != nullptr) _impl_.timeperstateinms_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ManufacturingScenarioRepository::TimePerStateInMS& Module::_internal_timeperstateinms() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::TimePerStateInMS* p = _impl_.timeperstateinms_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::TimePerStateInMS&>(::ManufacturingScenarioRepository::_TimePerStateInMS_default_instance_);
}
inline const ::ManufacturingScenarioRepository::TimePerStateInMS& Module::timeperstateinms() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.Module.timePerStateInMS)
  return _internal_timeperstateinms();
}
inline void Module::unsafe_arena_set_allocated_timeperstateinms(::ManufacturingScenarioRepository::TimePerStateInMS* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timeperstateinms_);
  }
  _impl_.timeperstateinms_ = reinterpret_cast<::ManufacturingScenarioRepository::TimePerStateInMS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.Module.timePerStateInMS)
}
inline ::ManufacturingScenarioRepository::TimePerStateInMS* Module::release_timeperstateinms() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::TimePerStateInMS* released = _impl_.timeperstateinms_;
  _impl_.timeperstateinms_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::TimePerStateInMS* Module::unsafe_arena_release_timeperstateinms() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.Module.timePerStateInMS)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::TimePerStateInMS* temp = _impl_.timeperstateinms_;
  _impl_.timeperstateinms_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::TimePerStateInMS* Module::_internal_mutable_timeperstateinms() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.timeperstateinms_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::TimePerStateInMS>(GetArenaForAllocation());
    _impl_.timeperstateinms_ = reinterpret_cast<::ManufacturingScenarioRepository::TimePerStateInMS*>(p);
  }
  return _impl_.timeperstateinms_;
}
inline ::ManufacturingScenarioRepository::TimePerStateInMS* Module::mutable_timeperstateinms() {
  ::ManufacturingScenarioRepository::TimePerStateInMS* _msg = _internal_mutable_timeperstateinms();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.Module.timePerStateInMS)
  return _msg;
}
inline void Module::set_allocated_timeperstateinms(::ManufacturingScenarioRepository::TimePerStateInMS* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::TimePerStateInMS*>(_impl_.timeperstateinms_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::TimePerStateInMS*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timeperstateinms_ = reinterpret_cast<::ManufacturingScenarioRepository::TimePerStateInMS*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.Module.timePerStateInMS)
}

// .ManufacturingScenarioRepository.EnergyUsePerStateInkWh energyUsePerStateInkWh = 4;
inline bool Module::has_energyuseperstateinkwh() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.energyuseperstateinkwh_ != nullptr);
  return value;
}
inline void Module::clear_energyuseperstateinkwh() {
  if (_impl_.energyuseperstateinkwh_ != nullptr) _impl_.energyuseperstateinkwh_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh& Module::_internal_energyuseperstateinkwh() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* p = _impl_.energyuseperstateinkwh_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh&>(::ManufacturingScenarioRepository::_EnergyUsePerStateInkWh_default_instance_);
}
inline const ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh& Module::energyuseperstateinkwh() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.Module.energyUsePerStateInkWh)
  return _internal_energyuseperstateinkwh();
}
inline void Module::unsafe_arena_set_allocated_energyuseperstateinkwh(::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.energyuseperstateinkwh_);
  }
  _impl_.energyuseperstateinkwh_ = reinterpret_cast<::ManufacturingScenarioRepository::EnergyUsePerStateInkWh*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.Module.energyUsePerStateInkWh)
}
inline ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* Module::release_energyuseperstateinkwh() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* released = _impl_.energyuseperstateinkwh_;
  _impl_.energyuseperstateinkwh_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* Module::unsafe_arena_release_energyuseperstateinkwh() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.Module.energyUsePerStateInkWh)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* temp = _impl_.energyuseperstateinkwh_;
  _impl_.energyuseperstateinkwh_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* Module::_internal_mutable_energyuseperstateinkwh() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.energyuseperstateinkwh_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::EnergyUsePerStateInkWh>(GetArenaForAllocation());
    _impl_.energyuseperstateinkwh_ = reinterpret_cast<::ManufacturingScenarioRepository::EnergyUsePerStateInkWh*>(p);
  }
  return _impl_.energyuseperstateinkwh_;
}
inline ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* Module::mutable_energyuseperstateinkwh() {
  ::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* _msg = _internal_mutable_energyuseperstateinkwh();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.Module.energyUsePerStateInkWh)
  return _msg;
}
inline void Module::set_allocated_energyuseperstateinkwh(::ManufacturingScenarioRepository::EnergyUsePerStateInkWh* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::EnergyUsePerStateInkWh*>(_impl_.energyuseperstateinkwh_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::EnergyUsePerStateInkWh*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.energyuseperstateinkwh_ = reinterpret_cast<::ManufacturingScenarioRepository::EnergyUsePerStateInkWh*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.Module.energyUsePerStateInkWh)
}

// .ManufacturingScenarioRepository.OPCUAIdentification id = 5;
inline bool Module::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.id_ != nullptr);
  return value;
}
inline void Module::clear_id() {
  if (_impl_.id_ != nullptr) _impl_.id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::ManufacturingScenarioRepository::OPCUAIdentification& Module::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::OPCUAIdentification* p = _impl_.id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::OPCUAIdentification&>(::ManufacturingScenarioRepository::_OPCUAIdentification_default_instance_);
}
inline const ::ManufacturingScenarioRepository::OPCUAIdentification& Module::id() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.Module.id)
  return _internal_id();
}
inline void Module::unsafe_arena_set_allocated_id(::ManufacturingScenarioRepository::OPCUAIdentification* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.id_);
  }
  _impl_.id_ = reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.Module.id)
}
inline ::ManufacturingScenarioRepository::OPCUAIdentification* Module::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ManufacturingScenarioRepository::OPCUAIdentification* released = _impl_.id_;
  _impl_.id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::OPCUAIdentification* Module::unsafe_arena_release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.Module.id)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ManufacturingScenarioRepository::OPCUAIdentification* temp = _impl_.id_;
  _impl_.id_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::OPCUAIdentification* Module::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::OPCUAIdentification>(GetArenaForAllocation());
    _impl_.id_ = reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(p);
  }
  return _impl_.id_;
}
inline ::ManufacturingScenarioRepository::OPCUAIdentification* Module::mutable_id() {
  ::ManufacturingScenarioRepository::OPCUAIdentification* _msg = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.Module.id)
  return _msg;
}
inline void Module::set_allocated_id(::ManufacturingScenarioRepository::OPCUAIdentification* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(_impl_.id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.id_ = reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.Module.id)
}

// string description = 6;
inline void Module::clear_description() {
  _impl_.description_.ClearToEmpty();
}
inline const std::string& Module::description() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.Module.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Module::set_description(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.Module.description)
}
inline std::string* Module::mutable_description() {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.Module.description)
  return _s;
}
inline const std::string& Module::_internal_description() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.description_.Get();
}
inline void Module::_internal_set_description(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(value, GetArenaForAllocation());
}
inline std::string* Module::_internal_mutable_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.description_.Mutable( GetArenaForAllocation());
}
inline std::string* Module::release_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.Module.description)
  return _impl_.description_.Release();
}
inline void Module::set_allocated_description(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.description_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.Module.description)
}

// double investmentCosts = 7;
inline void Module::clear_investmentcosts() {
  _impl_.investmentcosts_ = 0;
}
inline double Module::investmentcosts() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.Module.investmentCosts)
  return _internal_investmentcosts();
}
inline void Module::set_investmentcosts(double value) {
  _internal_set_investmentcosts(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.Module.investmentCosts)
}
inline double Module::_internal_investmentcosts() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.investmentcosts_;
}
inline void Module::_internal_set_investmentcosts(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.investmentcosts_ = value;
}

// repeated .ManufacturingScenarioRepository.Service implementedServices = 8;
inline int Module::_internal_implementedservices_size() const {
  return _internal_implementedservices().size();
}
inline int Module::implementedservices_size() const {
  return _internal_implementedservices_size();
}
inline void Module::clear_implementedservices() {
  _internal_mutable_implementedservices()->Clear();
}
inline ::ManufacturingScenarioRepository::Service Module::implementedservices(int index) const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.Module.implementedServices)
  return static_cast<::ManufacturingScenarioRepository::Service>(_internal_implementedservices().Get(index));
}
inline void Module::set_implementedservices(int index, ::ManufacturingScenarioRepository::Service value) {
  _internal_mutable_implementedservices()->Set(index, value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.Module.implementedServices)
}
inline void Module::add_implementedservices(::ManufacturingScenarioRepository::Service value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_implementedservices()->Add(value);
  // @@protoc_insertion_point(field_add:ManufacturingScenarioRepository.Module.implementedServices)
}
inline const ::google::protobuf::RepeatedField<int>& Module::implementedservices() const {
  // @@protoc_insertion_point(field_list:ManufacturingScenarioRepository.Module.implementedServices)
  return _internal_implementedservices();
}
inline ::google::protobuf::RepeatedField<int>* Module::mutable_implementedservices() {
  // @@protoc_insertion_point(field_mutable_list:ManufacturingScenarioRepository.Module.implementedServices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_implementedservices();
}
inline const ::google::protobuf::RepeatedField<int>& Module::_internal_implementedservices() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.implementedservices_;
}
inline ::google::protobuf::RepeatedField<int>* Module::_internal_mutable_implementedservices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.implementedservices_;
}

// repeated .ManufacturingScenarioRepository.ServiceInterface consumedServices = 9;
inline int Module::_internal_consumedservices_size() const {
  return _internal_consumedservices().size();
}
inline int Module::consumedservices_size() const {
  return _internal_consumedservices_size();
}
inline void Module::clear_consumedservices() {
  _internal_mutable_consumedservices()->Clear();
}
inline ::ManufacturingScenarioRepository::ServiceInterface* Module::mutable_consumedservices(int index) {
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.Module.consumedServices)
  return _internal_mutable_consumedservices()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ServiceInterface >*
Module::mutable_consumedservices() {
  // @@protoc_insertion_point(field_mutable_list:ManufacturingScenarioRepository.Module.consumedServices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_consumedservices();
}
inline const ::ManufacturingScenarioRepository::ServiceInterface& Module::consumedservices(int index) const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.Module.consumedServices)
    return _internal_consumedservices().Get(index);
}
inline ::ManufacturingScenarioRepository::ServiceInterface* Module::add_consumedservices() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::ManufacturingScenarioRepository::ServiceInterface* _add = _internal_mutable_consumedservices()->Add();
  // @@protoc_insertion_point(field_add:ManufacturingScenarioRepository.Module.consumedServices)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ServiceInterface >&
Module::consumedservices() const {
  // @@protoc_insertion_point(field_list:ManufacturingScenarioRepository.Module.consumedServices)
  return _internal_consumedservices();
}
inline const ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::ServiceInterface>&
Module::_internal_consumedservices() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.consumedservices_;
}
inline ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::ServiceInterface>*
Module::_internal_mutable_consumedservices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.consumedservices_;
}

// .ManufacturingScenarioRepository.ParameterSet parameters = 10;
inline bool Module::has_parameters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.parameters_ != nullptr);
  return value;
}
inline void Module::clear_parameters() {
  if (_impl_.parameters_ != nullptr) _impl_.parameters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::ManufacturingScenarioRepository::ParameterSet& Module::_internal_parameters() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::ParameterSet* p = _impl_.parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::ParameterSet&>(::ManufacturingScenarioRepository::_ParameterSet_default_instance_);
}
inline const ::ManufacturingScenarioRepository::ParameterSet& Module::parameters() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.Module.parameters)
  return _internal_parameters();
}
inline void Module::unsafe_arena_set_allocated_parameters(::ManufacturingScenarioRepository::ParameterSet* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parameters_);
  }
  _impl_.parameters_ = reinterpret_cast<::ManufacturingScenarioRepository::ParameterSet*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.Module.parameters)
}
inline ::ManufacturingScenarioRepository::ParameterSet* Module::release_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ManufacturingScenarioRepository::ParameterSet* released = _impl_.parameters_;
  _impl_.parameters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::ParameterSet* Module::unsafe_arena_release_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.Module.parameters)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ManufacturingScenarioRepository::ParameterSet* temp = _impl_.parameters_;
  _impl_.parameters_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::ParameterSet* Module::_internal_mutable_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.parameters_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::ParameterSet>(GetArenaForAllocation());
    _impl_.parameters_ = reinterpret_cast<::ManufacturingScenarioRepository::ParameterSet*>(p);
  }
  return _impl_.parameters_;
}
inline ::ManufacturingScenarioRepository::ParameterSet* Module::mutable_parameters() {
  ::ManufacturingScenarioRepository::ParameterSet* _msg = _internal_mutable_parameters();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.Module.parameters)
  return _msg;
}
inline void Module::set_allocated_parameters(::ManufacturingScenarioRepository::ParameterSet* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::ParameterSet*>(_impl_.parameters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::ParameterSet*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.parameters_ = reinterpret_cast<::ManufacturingScenarioRepository::ParameterSet*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.Module.parameters)
}

// -------------------------------------------------------------------

// ParameterSet

// .ManufacturingScenarioRepository.OPCUAIdentification id = 1;
inline bool ParameterSet::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.id_ != nullptr);
  return value;
}
inline void ParameterSet::clear_id() {
  if (_impl_.id_ != nullptr) _impl_.id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ManufacturingScenarioRepository::OPCUAIdentification& ParameterSet::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::OPCUAIdentification* p = _impl_.id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::OPCUAIdentification&>(::ManufacturingScenarioRepository::_OPCUAIdentification_default_instance_);
}
inline const ::ManufacturingScenarioRepository::OPCUAIdentification& ParameterSet::id() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ParameterSet.id)
  return _internal_id();
}
inline void ParameterSet::unsafe_arena_set_allocated_id(::ManufacturingScenarioRepository::OPCUAIdentification* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.id_);
  }
  _impl_.id_ = reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ParameterSet.id)
}
inline ::ManufacturingScenarioRepository::OPCUAIdentification* ParameterSet::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::OPCUAIdentification* released = _impl_.id_;
  _impl_.id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::OPCUAIdentification* ParameterSet::unsafe_arena_release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ParameterSet.id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::OPCUAIdentification* temp = _impl_.id_;
  _impl_.id_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::OPCUAIdentification* ParameterSet::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::OPCUAIdentification>(GetArenaForAllocation());
    _impl_.id_ = reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(p);
  }
  return _impl_.id_;
}
inline ::ManufacturingScenarioRepository::OPCUAIdentification* ParameterSet::mutable_id() {
  ::ManufacturingScenarioRepository::OPCUAIdentification* _msg = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ParameterSet.id)
  return _msg;
}
inline void ParameterSet::set_allocated_id(::ManufacturingScenarioRepository::OPCUAIdentification* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(_impl_.id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.id_ = reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.ParameterSet.id)
}

// .ManufacturingScenarioRepository.ScanlabScannerParams scanlabScanner = 10;
inline bool ParameterSet::has_scanlabscanner() const {
  return TypeAndParameters_case() == kScanlabScanner;
}
inline bool ParameterSet::_internal_has_scanlabscanner() const {
  return TypeAndParameters_case() == kScanlabScanner;
}
inline void ParameterSet::set_has_scanlabscanner() {
  _impl_._oneof_case_[0] = kScanlabScanner;
}
inline void ParameterSet::clear_scanlabscanner() {
  if (TypeAndParameters_case() == kScanlabScanner) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.TypeAndParameters_.scanlabscanner_;
    }
    clear_has_TypeAndParameters();
  }
}
inline ::ManufacturingScenarioRepository::ScanlabScannerParams* ParameterSet::release_scanlabscanner() {
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ParameterSet.scanlabScanner)
  if (TypeAndParameters_case() == kScanlabScanner) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::ScanlabScannerParams* temp = _impl_.TypeAndParameters_.scanlabscanner_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.TypeAndParameters_.scanlabscanner_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ManufacturingScenarioRepository::ScanlabScannerParams& ParameterSet::_internal_scanlabscanner() const {
  return TypeAndParameters_case() == kScanlabScanner
      ? *_impl_.TypeAndParameters_.scanlabscanner_
      : reinterpret_cast<::ManufacturingScenarioRepository::ScanlabScannerParams&>(::ManufacturingScenarioRepository::_ScanlabScannerParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::ScanlabScannerParams& ParameterSet::scanlabscanner() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ParameterSet.scanlabScanner)
  return _internal_scanlabscanner();
}
inline ::ManufacturingScenarioRepository::ScanlabScannerParams* ParameterSet::unsafe_arena_release_scanlabscanner() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ManufacturingScenarioRepository.ParameterSet.scanlabScanner)
  if (TypeAndParameters_case() == kScanlabScanner) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::ScanlabScannerParams* temp = _impl_.TypeAndParameters_.scanlabscanner_;
    _impl_.TypeAndParameters_.scanlabscanner_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterSet::unsafe_arena_set_allocated_scanlabscanner(::ManufacturingScenarioRepository::ScanlabScannerParams* scanlabscanner) {
  clear_TypeAndParameters();
  if (scanlabscanner) {
    set_has_scanlabscanner();
    _impl_.TypeAndParameters_.scanlabscanner_ = scanlabscanner;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ParameterSet.scanlabScanner)
}
inline ::ManufacturingScenarioRepository::ScanlabScannerParams* ParameterSet::_internal_mutable_scanlabscanner() {
  if (TypeAndParameters_case() != kScanlabScanner) {
    clear_TypeAndParameters();
    set_has_scanlabscanner();
    _impl_.TypeAndParameters_.scanlabscanner_ = CreateMaybeMessage< ::ManufacturingScenarioRepository::ScanlabScannerParams >(GetArenaForAllocation());
  }
  return _impl_.TypeAndParameters_.scanlabscanner_;
}
inline ::ManufacturingScenarioRepository::ScanlabScannerParams* ParameterSet::mutable_scanlabscanner() {
  ::ManufacturingScenarioRepository::ScanlabScannerParams* _msg = _internal_mutable_scanlabscanner();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ParameterSet.scanlabScanner)
  return _msg;
}

// .ManufacturingScenarioRepository.LaserParams laser = 11;
inline bool ParameterSet::has_laser() const {
  return TypeAndParameters_case() == kLaser;
}
inline bool ParameterSet::_internal_has_laser() const {
  return TypeAndParameters_case() == kLaser;
}
inline void ParameterSet::set_has_laser() {
  _impl_._oneof_case_[0] = kLaser;
}
inline void ParameterSet::clear_laser() {
  if (TypeAndParameters_case() == kLaser) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.TypeAndParameters_.laser_;
    }
    clear_has_TypeAndParameters();
  }
}
inline ::ManufacturingScenarioRepository::LaserParams* ParameterSet::release_laser() {
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ParameterSet.laser)
  if (TypeAndParameters_case() == kLaser) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::LaserParams* temp = _impl_.TypeAndParameters_.laser_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.TypeAndParameters_.laser_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ManufacturingScenarioRepository::LaserParams& ParameterSet::_internal_laser() const {
  return TypeAndParameters_case() == kLaser
      ? *_impl_.TypeAndParameters_.laser_
      : reinterpret_cast<::ManufacturingScenarioRepository::LaserParams&>(::ManufacturingScenarioRepository::_LaserParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::LaserParams& ParameterSet::laser() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ParameterSet.laser)
  return _internal_laser();
}
inline ::ManufacturingScenarioRepository::LaserParams* ParameterSet::unsafe_arena_release_laser() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ManufacturingScenarioRepository.ParameterSet.laser)
  if (TypeAndParameters_case() == kLaser) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::LaserParams* temp = _impl_.TypeAndParameters_.laser_;
    _impl_.TypeAndParameters_.laser_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterSet::unsafe_arena_set_allocated_laser(::ManufacturingScenarioRepository::LaserParams* laser) {
  clear_TypeAndParameters();
  if (laser) {
    set_has_laser();
    _impl_.TypeAndParameters_.laser_ = laser;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ParameterSet.laser)
}
inline ::ManufacturingScenarioRepository::LaserParams* ParameterSet::_internal_mutable_laser() {
  if (TypeAndParameters_case() != kLaser) {
    clear_TypeAndParameters();
    set_has_laser();
    _impl_.TypeAndParameters_.laser_ = CreateMaybeMessage< ::ManufacturingScenarioRepository::LaserParams >(GetArenaForAllocation());
  }
  return _impl_.TypeAndParameters_.laser_;
}
inline ::ManufacturingScenarioRepository::LaserParams* ParameterSet::mutable_laser() {
  ::ManufacturingScenarioRepository::LaserParams* _msg = _internal_mutable_laser();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ParameterSet.laser)
  return _msg;
}

// .ManufacturingScenarioRepository.StandardCoaterParams standardCoater = 12;
inline bool ParameterSet::has_standardcoater() const {
  return TypeAndParameters_case() == kStandardCoater;
}
inline bool ParameterSet::_internal_has_standardcoater() const {
  return TypeAndParameters_case() == kStandardCoater;
}
inline void ParameterSet::set_has_standardcoater() {
  _impl_._oneof_case_[0] = kStandardCoater;
}
inline void ParameterSet::clear_standardcoater() {
  if (TypeAndParameters_case() == kStandardCoater) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.TypeAndParameters_.standardcoater_;
    }
    clear_has_TypeAndParameters();
  }
}
inline ::ManufacturingScenarioRepository::StandardCoaterParams* ParameterSet::release_standardcoater() {
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ParameterSet.standardCoater)
  if (TypeAndParameters_case() == kStandardCoater) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::StandardCoaterParams* temp = _impl_.TypeAndParameters_.standardcoater_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.TypeAndParameters_.standardcoater_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ManufacturingScenarioRepository::StandardCoaterParams& ParameterSet::_internal_standardcoater() const {
  return TypeAndParameters_case() == kStandardCoater
      ? *_impl_.TypeAndParameters_.standardcoater_
      : reinterpret_cast<::ManufacturingScenarioRepository::StandardCoaterParams&>(::ManufacturingScenarioRepository::_StandardCoaterParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::StandardCoaterParams& ParameterSet::standardcoater() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ParameterSet.standardCoater)
  return _internal_standardcoater();
}
inline ::ManufacturingScenarioRepository::StandardCoaterParams* ParameterSet::unsafe_arena_release_standardcoater() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ManufacturingScenarioRepository.ParameterSet.standardCoater)
  if (TypeAndParameters_case() == kStandardCoater) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::StandardCoaterParams* temp = _impl_.TypeAndParameters_.standardcoater_;
    _impl_.TypeAndParameters_.standardcoater_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterSet::unsafe_arena_set_allocated_standardcoater(::ManufacturingScenarioRepository::StandardCoaterParams* standardcoater) {
  clear_TypeAndParameters();
  if (standardcoater) {
    set_has_standardcoater();
    _impl_.TypeAndParameters_.standardcoater_ = standardcoater;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ParameterSet.standardCoater)
}
inline ::ManufacturingScenarioRepository::StandardCoaterParams* ParameterSet::_internal_mutable_standardcoater() {
  if (TypeAndParameters_case() != kStandardCoater) {
    clear_TypeAndParameters();
    set_has_standardcoater();
    _impl_.TypeAndParameters_.standardcoater_ = CreateMaybeMessage< ::ManufacturingScenarioRepository::StandardCoaterParams >(GetArenaForAllocation());
  }
  return _impl_.TypeAndParameters_.standardcoater_;
}
inline ::ManufacturingScenarioRepository::StandardCoaterParams* ParameterSet::mutable_standardcoater() {
  ::ManufacturingScenarioRepository::StandardCoaterParams* _msg = _internal_mutable_standardcoater();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ParameterSet.standardCoater)
  return _msg;
}

// .ManufacturingScenarioRepository.BuildChamberParams buildChamber = 15;
inline bool ParameterSet::has_buildchamber() const {
  return TypeAndParameters_case() == kBuildChamber;
}
inline bool ParameterSet::_internal_has_buildchamber() const {
  return TypeAndParameters_case() == kBuildChamber;
}
inline void ParameterSet::set_has_buildchamber() {
  _impl_._oneof_case_[0] = kBuildChamber;
}
inline void ParameterSet::clear_buildchamber() {
  if (TypeAndParameters_case() == kBuildChamber) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.TypeAndParameters_.buildchamber_;
    }
    clear_has_TypeAndParameters();
  }
}
inline ::ManufacturingScenarioRepository::BuildChamberParams* ParameterSet::release_buildchamber() {
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ParameterSet.buildChamber)
  if (TypeAndParameters_case() == kBuildChamber) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::BuildChamberParams* temp = _impl_.TypeAndParameters_.buildchamber_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.TypeAndParameters_.buildchamber_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ManufacturingScenarioRepository::BuildChamberParams& ParameterSet::_internal_buildchamber() const {
  return TypeAndParameters_case() == kBuildChamber
      ? *_impl_.TypeAndParameters_.buildchamber_
      : reinterpret_cast<::ManufacturingScenarioRepository::BuildChamberParams&>(::ManufacturingScenarioRepository::_BuildChamberParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::BuildChamberParams& ParameterSet::buildchamber() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ParameterSet.buildChamber)
  return _internal_buildchamber();
}
inline ::ManufacturingScenarioRepository::BuildChamberParams* ParameterSet::unsafe_arena_release_buildchamber() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ManufacturingScenarioRepository.ParameterSet.buildChamber)
  if (TypeAndParameters_case() == kBuildChamber) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::BuildChamberParams* temp = _impl_.TypeAndParameters_.buildchamber_;
    _impl_.TypeAndParameters_.buildchamber_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterSet::unsafe_arena_set_allocated_buildchamber(::ManufacturingScenarioRepository::BuildChamberParams* buildchamber) {
  clear_TypeAndParameters();
  if (buildchamber) {
    set_has_buildchamber();
    _impl_.TypeAndParameters_.buildchamber_ = buildchamber;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ParameterSet.buildChamber)
}
inline ::ManufacturingScenarioRepository::BuildChamberParams* ParameterSet::_internal_mutable_buildchamber() {
  if (TypeAndParameters_case() != kBuildChamber) {
    clear_TypeAndParameters();
    set_has_buildchamber();
    _impl_.TypeAndParameters_.buildchamber_ = CreateMaybeMessage< ::ManufacturingScenarioRepository::BuildChamberParams >(GetArenaForAllocation());
  }
  return _impl_.TypeAndParameters_.buildchamber_;
}
inline ::ManufacturingScenarioRepository::BuildChamberParams* ParameterSet::mutable_buildchamber() {
  ::ManufacturingScenarioRepository::BuildChamberParams* _msg = _internal_mutable_buildchamber();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ParameterSet.buildChamber)
  return _msg;
}

// .ManufacturingScenarioRepository.CuboidBuildVolumeParams cuboidBuildVolume = 16;
inline bool ParameterSet::has_cuboidbuildvolume() const {
  return TypeAndParameters_case() == kCuboidBuildVolume;
}
inline bool ParameterSet::_internal_has_cuboidbuildvolume() const {
  return TypeAndParameters_case() == kCuboidBuildVolume;
}
inline void ParameterSet::set_has_cuboidbuildvolume() {
  _impl_._oneof_case_[0] = kCuboidBuildVolume;
}
inline void ParameterSet::clear_cuboidbuildvolume() {
  if (TypeAndParameters_case() == kCuboidBuildVolume) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.TypeAndParameters_.cuboidbuildvolume_;
    }
    clear_has_TypeAndParameters();
  }
}
inline ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* ParameterSet::release_cuboidbuildvolume() {
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ParameterSet.cuboidBuildVolume)
  if (TypeAndParameters_case() == kCuboidBuildVolume) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* temp = _impl_.TypeAndParameters_.cuboidbuildvolume_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.TypeAndParameters_.cuboidbuildvolume_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ManufacturingScenarioRepository::CuboidBuildVolumeParams& ParameterSet::_internal_cuboidbuildvolume() const {
  return TypeAndParameters_case() == kCuboidBuildVolume
      ? *_impl_.TypeAndParameters_.cuboidbuildvolume_
      : reinterpret_cast<::ManufacturingScenarioRepository::CuboidBuildVolumeParams&>(::ManufacturingScenarioRepository::_CuboidBuildVolumeParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::CuboidBuildVolumeParams& ParameterSet::cuboidbuildvolume() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ParameterSet.cuboidBuildVolume)
  return _internal_cuboidbuildvolume();
}
inline ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* ParameterSet::unsafe_arena_release_cuboidbuildvolume() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ManufacturingScenarioRepository.ParameterSet.cuboidBuildVolume)
  if (TypeAndParameters_case() == kCuboidBuildVolume) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* temp = _impl_.TypeAndParameters_.cuboidbuildvolume_;
    _impl_.TypeAndParameters_.cuboidbuildvolume_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterSet::unsafe_arena_set_allocated_cuboidbuildvolume(::ManufacturingScenarioRepository::CuboidBuildVolumeParams* cuboidbuildvolume) {
  clear_TypeAndParameters();
  if (cuboidbuildvolume) {
    set_has_cuboidbuildvolume();
    _impl_.TypeAndParameters_.cuboidbuildvolume_ = cuboidbuildvolume;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ParameterSet.cuboidBuildVolume)
}
inline ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* ParameterSet::_internal_mutable_cuboidbuildvolume() {
  if (TypeAndParameters_case() != kCuboidBuildVolume) {
    clear_TypeAndParameters();
    set_has_cuboidbuildvolume();
    _impl_.TypeAndParameters_.cuboidbuildvolume_ = CreateMaybeMessage< ::ManufacturingScenarioRepository::CuboidBuildVolumeParams >(GetArenaForAllocation());
  }
  return _impl_.TypeAndParameters_.cuboidbuildvolume_;
}
inline ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* ParameterSet::mutable_cuboidbuildvolume() {
  ::ManufacturingScenarioRepository::CuboidBuildVolumeParams* _msg = _internal_mutable_cuboidbuildvolume();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ParameterSet.cuboidBuildVolume)
  return _msg;
}

// .ManufacturingScenarioRepository.ZylinderBuildVolumeParams zylinderBuildVolume = 17;
inline bool ParameterSet::has_zylinderbuildvolume() const {
  return TypeAndParameters_case() == kZylinderBuildVolume;
}
inline bool ParameterSet::_internal_has_zylinderbuildvolume() const {
  return TypeAndParameters_case() == kZylinderBuildVolume;
}
inline void ParameterSet::set_has_zylinderbuildvolume() {
  _impl_._oneof_case_[0] = kZylinderBuildVolume;
}
inline void ParameterSet::clear_zylinderbuildvolume() {
  if (TypeAndParameters_case() == kZylinderBuildVolume) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.TypeAndParameters_.zylinderbuildvolume_;
    }
    clear_has_TypeAndParameters();
  }
}
inline ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* ParameterSet::release_zylinderbuildvolume() {
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ParameterSet.zylinderBuildVolume)
  if (TypeAndParameters_case() == kZylinderBuildVolume) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* temp = _impl_.TypeAndParameters_.zylinderbuildvolume_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.TypeAndParameters_.zylinderbuildvolume_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams& ParameterSet::_internal_zylinderbuildvolume() const {
  return TypeAndParameters_case() == kZylinderBuildVolume
      ? *_impl_.TypeAndParameters_.zylinderbuildvolume_
      : reinterpret_cast<::ManufacturingScenarioRepository::ZylinderBuildVolumeParams&>(::ManufacturingScenarioRepository::_ZylinderBuildVolumeParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams& ParameterSet::zylinderbuildvolume() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ParameterSet.zylinderBuildVolume)
  return _internal_zylinderbuildvolume();
}
inline ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* ParameterSet::unsafe_arena_release_zylinderbuildvolume() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ManufacturingScenarioRepository.ParameterSet.zylinderBuildVolume)
  if (TypeAndParameters_case() == kZylinderBuildVolume) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* temp = _impl_.TypeAndParameters_.zylinderbuildvolume_;
    _impl_.TypeAndParameters_.zylinderbuildvolume_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterSet::unsafe_arena_set_allocated_zylinderbuildvolume(::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* zylinderbuildvolume) {
  clear_TypeAndParameters();
  if (zylinderbuildvolume) {
    set_has_zylinderbuildvolume();
    _impl_.TypeAndParameters_.zylinderbuildvolume_ = zylinderbuildvolume;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ParameterSet.zylinderBuildVolume)
}
inline ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* ParameterSet::_internal_mutable_zylinderbuildvolume() {
  if (TypeAndParameters_case() != kZylinderBuildVolume) {
    clear_TypeAndParameters();
    set_has_zylinderbuildvolume();
    _impl_.TypeAndParameters_.zylinderbuildvolume_ = CreateMaybeMessage< ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams >(GetArenaForAllocation());
  }
  return _impl_.TypeAndParameters_.zylinderbuildvolume_;
}
inline ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* ParameterSet::mutable_zylinderbuildvolume() {
  ::ManufacturingScenarioRepository::ZylinderBuildVolumeParams* _msg = _internal_mutable_zylinderbuildvolume();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ParameterSet.zylinderBuildVolume)
  return _msg;
}

// .ManufacturingScenarioRepository.PreheaterParams preheater = 19;
inline bool ParameterSet::has_preheater() const {
  return TypeAndParameters_case() == kPreheater;
}
inline bool ParameterSet::_internal_has_preheater() const {
  return TypeAndParameters_case() == kPreheater;
}
inline void ParameterSet::set_has_preheater() {
  _impl_._oneof_case_[0] = kPreheater;
}
inline void ParameterSet::clear_preheater() {
  if (TypeAndParameters_case() == kPreheater) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.TypeAndParameters_.preheater_;
    }
    clear_has_TypeAndParameters();
  }
}
inline ::ManufacturingScenarioRepository::PreheaterParams* ParameterSet::release_preheater() {
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ParameterSet.preheater)
  if (TypeAndParameters_case() == kPreheater) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::PreheaterParams* temp = _impl_.TypeAndParameters_.preheater_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.TypeAndParameters_.preheater_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ManufacturingScenarioRepository::PreheaterParams& ParameterSet::_internal_preheater() const {
  return TypeAndParameters_case() == kPreheater
      ? *_impl_.TypeAndParameters_.preheater_
      : reinterpret_cast<::ManufacturingScenarioRepository::PreheaterParams&>(::ManufacturingScenarioRepository::_PreheaterParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::PreheaterParams& ParameterSet::preheater() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ParameterSet.preheater)
  return _internal_preheater();
}
inline ::ManufacturingScenarioRepository::PreheaterParams* ParameterSet::unsafe_arena_release_preheater() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ManufacturingScenarioRepository.ParameterSet.preheater)
  if (TypeAndParameters_case() == kPreheater) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::PreheaterParams* temp = _impl_.TypeAndParameters_.preheater_;
    _impl_.TypeAndParameters_.preheater_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterSet::unsafe_arena_set_allocated_preheater(::ManufacturingScenarioRepository::PreheaterParams* preheater) {
  clear_TypeAndParameters();
  if (preheater) {
    set_has_preheater();
    _impl_.TypeAndParameters_.preheater_ = preheater;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ParameterSet.preheater)
}
inline ::ManufacturingScenarioRepository::PreheaterParams* ParameterSet::_internal_mutable_preheater() {
  if (TypeAndParameters_case() != kPreheater) {
    clear_TypeAndParameters();
    set_has_preheater();
    _impl_.TypeAndParameters_.preheater_ = CreateMaybeMessage< ::ManufacturingScenarioRepository::PreheaterParams >(GetArenaForAllocation());
  }
  return _impl_.TypeAndParameters_.preheater_;
}
inline ::ManufacturingScenarioRepository::PreheaterParams* ParameterSet::mutable_preheater() {
  ::ManufacturingScenarioRepository::PreheaterParams* _msg = _internal_mutable_preheater();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ParameterSet.preheater)
  return _msg;
}

// .ManufacturingScenarioRepository.NovantaScannerParams novantaScanner = 31;
inline bool ParameterSet::has_novantascanner() const {
  return TypeAndParameters_case() == kNovantaScanner;
}
inline bool ParameterSet::_internal_has_novantascanner() const {
  return TypeAndParameters_case() == kNovantaScanner;
}
inline void ParameterSet::set_has_novantascanner() {
  _impl_._oneof_case_[0] = kNovantaScanner;
}
inline void ParameterSet::clear_novantascanner() {
  if (TypeAndParameters_case() == kNovantaScanner) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.TypeAndParameters_.novantascanner_;
    }
    clear_has_TypeAndParameters();
  }
}
inline ::ManufacturingScenarioRepository::NovantaScannerParams* ParameterSet::release_novantascanner() {
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ParameterSet.novantaScanner)
  if (TypeAndParameters_case() == kNovantaScanner) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::NovantaScannerParams* temp = _impl_.TypeAndParameters_.novantascanner_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.TypeAndParameters_.novantascanner_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ManufacturingScenarioRepository::NovantaScannerParams& ParameterSet::_internal_novantascanner() const {
  return TypeAndParameters_case() == kNovantaScanner
      ? *_impl_.TypeAndParameters_.novantascanner_
      : reinterpret_cast<::ManufacturingScenarioRepository::NovantaScannerParams&>(::ManufacturingScenarioRepository::_NovantaScannerParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::NovantaScannerParams& ParameterSet::novantascanner() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ParameterSet.novantaScanner)
  return _internal_novantascanner();
}
inline ::ManufacturingScenarioRepository::NovantaScannerParams* ParameterSet::unsafe_arena_release_novantascanner() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ManufacturingScenarioRepository.ParameterSet.novantaScanner)
  if (TypeAndParameters_case() == kNovantaScanner) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::NovantaScannerParams* temp = _impl_.TypeAndParameters_.novantascanner_;
    _impl_.TypeAndParameters_.novantascanner_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterSet::unsafe_arena_set_allocated_novantascanner(::ManufacturingScenarioRepository::NovantaScannerParams* novantascanner) {
  clear_TypeAndParameters();
  if (novantascanner) {
    set_has_novantascanner();
    _impl_.TypeAndParameters_.novantascanner_ = novantascanner;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ParameterSet.novantaScanner)
}
inline ::ManufacturingScenarioRepository::NovantaScannerParams* ParameterSet::_internal_mutable_novantascanner() {
  if (TypeAndParameters_case() != kNovantaScanner) {
    clear_TypeAndParameters();
    set_has_novantascanner();
    _impl_.TypeAndParameters_.novantascanner_ = CreateMaybeMessage< ::ManufacturingScenarioRepository::NovantaScannerParams >(GetArenaForAllocation());
  }
  return _impl_.TypeAndParameters_.novantascanner_;
}
inline ::ManufacturingScenarioRepository::NovantaScannerParams* ParameterSet::mutable_novantascanner() {
  ::ManufacturingScenarioRepository::NovantaScannerParams* _msg = _internal_mutable_novantascanner();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ParameterSet.novantaScanner)
  return _msg;
}

// .ManufacturingScenarioRepository.BasicLPBFMachineParams basicLPBFMachine = 100;
inline bool ParameterSet::has_basiclpbfmachine() const {
  return TypeAndParameters_case() == kBasicLPBFMachine;
}
inline bool ParameterSet::_internal_has_basiclpbfmachine() const {
  return TypeAndParameters_case() == kBasicLPBFMachine;
}
inline void ParameterSet::set_has_basiclpbfmachine() {
  _impl_._oneof_case_[0] = kBasicLPBFMachine;
}
inline void ParameterSet::clear_basiclpbfmachine() {
  if (TypeAndParameters_case() == kBasicLPBFMachine) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.TypeAndParameters_.basiclpbfmachine_;
    }
    clear_has_TypeAndParameters();
  }
}
inline ::ManufacturingScenarioRepository::BasicLPBFMachineParams* ParameterSet::release_basiclpbfmachine() {
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ParameterSet.basicLPBFMachine)
  if (TypeAndParameters_case() == kBasicLPBFMachine) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::BasicLPBFMachineParams* temp = _impl_.TypeAndParameters_.basiclpbfmachine_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.TypeAndParameters_.basiclpbfmachine_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ManufacturingScenarioRepository::BasicLPBFMachineParams& ParameterSet::_internal_basiclpbfmachine() const {
  return TypeAndParameters_case() == kBasicLPBFMachine
      ? *_impl_.TypeAndParameters_.basiclpbfmachine_
      : reinterpret_cast<::ManufacturingScenarioRepository::BasicLPBFMachineParams&>(::ManufacturingScenarioRepository::_BasicLPBFMachineParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::BasicLPBFMachineParams& ParameterSet::basiclpbfmachine() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ParameterSet.basicLPBFMachine)
  return _internal_basiclpbfmachine();
}
inline ::ManufacturingScenarioRepository::BasicLPBFMachineParams* ParameterSet::unsafe_arena_release_basiclpbfmachine() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ManufacturingScenarioRepository.ParameterSet.basicLPBFMachine)
  if (TypeAndParameters_case() == kBasicLPBFMachine) {
    clear_has_TypeAndParameters();
    ::ManufacturingScenarioRepository::BasicLPBFMachineParams* temp = _impl_.TypeAndParameters_.basiclpbfmachine_;
    _impl_.TypeAndParameters_.basiclpbfmachine_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ParameterSet::unsafe_arena_set_allocated_basiclpbfmachine(::ManufacturingScenarioRepository::BasicLPBFMachineParams* basiclpbfmachine) {
  clear_TypeAndParameters();
  if (basiclpbfmachine) {
    set_has_basiclpbfmachine();
    _impl_.TypeAndParameters_.basiclpbfmachine_ = basiclpbfmachine;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ParameterSet.basicLPBFMachine)
}
inline ::ManufacturingScenarioRepository::BasicLPBFMachineParams* ParameterSet::_internal_mutable_basiclpbfmachine() {
  if (TypeAndParameters_case() != kBasicLPBFMachine) {
    clear_TypeAndParameters();
    set_has_basiclpbfmachine();
    _impl_.TypeAndParameters_.basiclpbfmachine_ = CreateMaybeMessage< ::ManufacturingScenarioRepository::BasicLPBFMachineParams >(GetArenaForAllocation());
  }
  return _impl_.TypeAndParameters_.basiclpbfmachine_;
}
inline ::ManufacturingScenarioRepository::BasicLPBFMachineParams* ParameterSet::mutable_basiclpbfmachine() {
  ::ManufacturingScenarioRepository::BasicLPBFMachineParams* _msg = _internal_mutable_basiclpbfmachine();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ParameterSet.basicLPBFMachine)
  return _msg;
}

inline bool ParameterSet::has_TypeAndParameters() const {
  return TypeAndParameters_case() != TYPEANDPARAMETERS_NOT_SET;
}
inline void ParameterSet::clear_has_TypeAndParameters() {
  _impl_._oneof_case_[0] = TYPEANDPARAMETERS_NOT_SET;
}
inline ParameterSet::TypeAndParametersCase ParameterSet::TypeAndParameters_case() const {
  return ParameterSet::TypeAndParametersCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// BasicLPBFMachineParams

// int32 numberOfLaserScannerUnits = 1;
inline void BasicLPBFMachineParams::clear_numberoflaserscannerunits() {
  _impl_.numberoflaserscannerunits_ = 0;
}
inline ::int32_t BasicLPBFMachineParams::numberoflaserscannerunits() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicLPBFMachineParams.numberOfLaserScannerUnits)
  return _internal_numberoflaserscannerunits();
}
inline void BasicLPBFMachineParams::set_numberoflaserscannerunits(::int32_t value) {
  _internal_set_numberoflaserscannerunits(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicLPBFMachineParams.numberOfLaserScannerUnits)
}
inline ::int32_t BasicLPBFMachineParams::_internal_numberoflaserscannerunits() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.numberoflaserscannerunits_;
}
inline void BasicLPBFMachineParams::_internal_set_numberoflaserscannerunits(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.numberoflaserscannerunits_ = value;
}

// repeated .ManufacturingScenarioRepository.ScanField scanFields = 20;
inline int BasicLPBFMachineParams::_internal_scanfields_size() const {
  return _internal_scanfields().size();
}
inline int BasicLPBFMachineParams::scanfields_size() const {
  return _internal_scanfields_size();
}
inline void BasicLPBFMachineParams::clear_scanfields() {
  _internal_mutable_scanfields()->Clear();
}
inline ::ManufacturingScenarioRepository::ScanField* BasicLPBFMachineParams::mutable_scanfields(int index) {
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.BasicLPBFMachineParams.scanFields)
  return _internal_mutable_scanfields()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ScanField >*
BasicLPBFMachineParams::mutable_scanfields() {
  // @@protoc_insertion_point(field_mutable_list:ManufacturingScenarioRepository.BasicLPBFMachineParams.scanFields)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_scanfields();
}
inline const ::ManufacturingScenarioRepository::ScanField& BasicLPBFMachineParams::scanfields(int index) const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicLPBFMachineParams.scanFields)
    return _internal_scanfields().Get(index);
}
inline ::ManufacturingScenarioRepository::ScanField* BasicLPBFMachineParams::add_scanfields() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::ManufacturingScenarioRepository::ScanField* _add = _internal_mutable_scanfields()->Add();
  // @@protoc_insertion_point(field_add:ManufacturingScenarioRepository.BasicLPBFMachineParams.scanFields)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::ManufacturingScenarioRepository::ScanField >&
BasicLPBFMachineParams::scanfields() const {
  // @@protoc_insertion_point(field_list:ManufacturingScenarioRepository.BasicLPBFMachineParams.scanFields)
  return _internal_scanfields();
}
inline const ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::ScanField>&
BasicLPBFMachineParams::_internal_scanfields() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.scanfields_;
}
inline ::google::protobuf::RepeatedPtrField<::ManufacturingScenarioRepository::ScanField>*
BasicLPBFMachineParams::_internal_mutable_scanfields() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.scanfields_;
}

// double MinLayerHeightUM = 10;
inline void BasicLPBFMachineParams::clear_minlayerheightum() {
  _impl_.minlayerheightum_ = 0;
}
inline double BasicLPBFMachineParams::minlayerheightum() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicLPBFMachineParams.MinLayerHeightUM)
  return _internal_minlayerheightum();
}
inline void BasicLPBFMachineParams::set_minlayerheightum(double value) {
  _internal_set_minlayerheightum(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicLPBFMachineParams.MinLayerHeightUM)
}
inline double BasicLPBFMachineParams::_internal_minlayerheightum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.minlayerheightum_;
}
inline void BasicLPBFMachineParams::_internal_set_minlayerheightum(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.minlayerheightum_ = value;
}

// double MinZDistMm = 11;
inline void BasicLPBFMachineParams::clear_minzdistmm() {
  _impl_.minzdistmm_ = 0;
}
inline double BasicLPBFMachineParams::minzdistmm() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicLPBFMachineParams.MinZDistMm)
  return _internal_minzdistmm();
}
inline void BasicLPBFMachineParams::set_minzdistmm(double value) {
  _internal_set_minzdistmm(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicLPBFMachineParams.MinZDistMm)
}
inline double BasicLPBFMachineParams::_internal_minzdistmm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.minzdistmm_;
}
inline void BasicLPBFMachineParams::_internal_set_minzdistmm(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.minzdistmm_ = value;
}

// double MinimalHatchLength = 12;
inline void BasicLPBFMachineParams::clear_minimalhatchlength() {
  _impl_.minimalhatchlength_ = 0;
}
inline double BasicLPBFMachineParams::minimalhatchlength() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicLPBFMachineParams.MinimalHatchLength)
  return _internal_minimalhatchlength();
}
inline void BasicLPBFMachineParams::set_minimalhatchlength(double value) {
  _internal_set_minimalhatchlength(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicLPBFMachineParams.MinimalHatchLength)
}
inline double BasicLPBFMachineParams::_internal_minimalhatchlength() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.minimalhatchlength_;
}
inline void BasicLPBFMachineParams::_internal_set_minimalhatchlength(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.minimalhatchlength_ = value;
}

// double ForcedMinimumExposureTimeInS = 13;
inline void BasicLPBFMachineParams::clear_forcedminimumexposuretimeins() {
  _impl_.forcedminimumexposuretimeins_ = 0;
}
inline double BasicLPBFMachineParams::forcedminimumexposuretimeins() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicLPBFMachineParams.ForcedMinimumExposureTimeInS)
  return _internal_forcedminimumexposuretimeins();
}
inline void BasicLPBFMachineParams::set_forcedminimumexposuretimeins(double value) {
  _internal_set_forcedminimumexposuretimeins(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicLPBFMachineParams.ForcedMinimumExposureTimeInS)
}
inline double BasicLPBFMachineParams::_internal_forcedminimumexposuretimeins() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.forcedminimumexposuretimeins_;
}
inline void BasicLPBFMachineParams::_internal_set_forcedminimumexposuretimeins(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.forcedminimumexposuretimeins_ = value;
}

// -------------------------------------------------------------------

// ServiceInterface

// .ManufacturingScenarioRepository.Service consumedService = 1;
inline void ServiceInterface::clear_consumedservice() {
  _impl_.consumedservice_ = 0;
}
inline ::ManufacturingScenarioRepository::Service ServiceInterface::consumedservice() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ServiceInterface.consumedService)
  return _internal_consumedservice();
}
inline void ServiceInterface::set_consumedservice(::ManufacturingScenarioRepository::Service value) {
  _internal_set_consumedservice(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.ServiceInterface.consumedService)
}
inline ::ManufacturingScenarioRepository::Service ServiceInterface::_internal_consumedservice() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ManufacturingScenarioRepository::Service>(_impl_.consumedservice_);
}
inline void ServiceInterface::_internal_set_consumedservice(::ManufacturingScenarioRepository::Service value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.consumedservice_ = value;
}

// .ManufacturingScenarioRepository.OPCUAIdentification implementingModule = 2;
inline bool ServiceInterface::has_implementingmodule() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.implementingmodule_ != nullptr);
  return value;
}
inline void ServiceInterface::clear_implementingmodule() {
  if (_impl_.implementingmodule_ != nullptr) _impl_.implementingmodule_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ManufacturingScenarioRepository::OPCUAIdentification& ServiceInterface::_internal_implementingmodule() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::OPCUAIdentification* p = _impl_.implementingmodule_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::OPCUAIdentification&>(::ManufacturingScenarioRepository::_OPCUAIdentification_default_instance_);
}
inline const ::ManufacturingScenarioRepository::OPCUAIdentification& ServiceInterface::implementingmodule() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ServiceInterface.implementingModule)
  return _internal_implementingmodule();
}
inline void ServiceInterface::unsafe_arena_set_allocated_implementingmodule(::ManufacturingScenarioRepository::OPCUAIdentification* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.implementingmodule_);
  }
  _impl_.implementingmodule_ = reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ServiceInterface.implementingModule)
}
inline ::ManufacturingScenarioRepository::OPCUAIdentification* ServiceInterface::release_implementingmodule() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::OPCUAIdentification* released = _impl_.implementingmodule_;
  _impl_.implementingmodule_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::OPCUAIdentification* ServiceInterface::unsafe_arena_release_implementingmodule() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ServiceInterface.implementingModule)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::OPCUAIdentification* temp = _impl_.implementingmodule_;
  _impl_.implementingmodule_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::OPCUAIdentification* ServiceInterface::_internal_mutable_implementingmodule() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.implementingmodule_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::OPCUAIdentification>(GetArenaForAllocation());
    _impl_.implementingmodule_ = reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(p);
  }
  return _impl_.implementingmodule_;
}
inline ::ManufacturingScenarioRepository::OPCUAIdentification* ServiceInterface::mutable_implementingmodule() {
  ::ManufacturingScenarioRepository::OPCUAIdentification* _msg = _internal_mutable_implementingmodule();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ServiceInterface.implementingModule)
  return _msg;
}
inline void ServiceInterface::set_allocated_implementingmodule(::ManufacturingScenarioRepository::OPCUAIdentification* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(_impl_.implementingmodule_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.implementingmodule_ = reinterpret_cast<::ManufacturingScenarioRepository::OPCUAIdentification*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.ServiceInterface.implementingModule)
}

// -------------------------------------------------------------------

// BasicScannerParams

// double jumpSpeedInMmS = 1;
inline void BasicScannerParams::clear_jumpspeedinmms() {
  _impl_.jumpspeedinmms_ = 0;
}
inline double BasicScannerParams::jumpspeedinmms() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicScannerParams.jumpSpeedInMmS)
  return _internal_jumpspeedinmms();
}
inline void BasicScannerParams::set_jumpspeedinmms(double value) {
  _internal_set_jumpspeedinmms(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicScannerParams.jumpSpeedInMmS)
}
inline double BasicScannerParams::_internal_jumpspeedinmms() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jumpspeedinmms_;
}
inline void BasicScannerParams::_internal_set_jumpspeedinmms(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.jumpspeedinmms_ = value;
}

// double markSpeedInMmS = 2;
inline void BasicScannerParams::clear_markspeedinmms() {
  _impl_.markspeedinmms_ = 0;
}
inline double BasicScannerParams::markspeedinmms() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicScannerParams.markSpeedInMmS)
  return _internal_markspeedinmms();
}
inline void BasicScannerParams::set_markspeedinmms(double value) {
  _internal_set_markspeedinmms(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicScannerParams.markSpeedInMmS)
}
inline double BasicScannerParams::_internal_markspeedinmms() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.markspeedinmms_;
}
inline void BasicScannerParams::_internal_set_markspeedinmms(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.markspeedinmms_ = value;
}

// double laserFocusShiftInMm = 3;
inline void BasicScannerParams::clear_laserfocusshiftinmm() {
  _impl_.laserfocusshiftinmm_ = 0;
}
inline double BasicScannerParams::laserfocusshiftinmm() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicScannerParams.laserFocusShiftInMm)
  return _internal_laserfocusshiftinmm();
}
inline void BasicScannerParams::set_laserfocusshiftinmm(double value) {
  _internal_set_laserfocusshiftinmm(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicScannerParams.laserFocusShiftInMm)
}
inline double BasicScannerParams::_internal_laserfocusshiftinmm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.laserfocusshiftinmm_;
}
inline void BasicScannerParams::_internal_set_laserfocusshiftinmm(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.laserfocusshiftinmm_ = value;
}

// double maxAccelerationInMmPerSS = 4;
inline void BasicScannerParams::clear_maxaccelerationinmmperss() {
  _impl_.maxaccelerationinmmperss_ = 0;
}
inline double BasicScannerParams::maxaccelerationinmmperss() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicScannerParams.maxAccelerationInMmPerSS)
  return _internal_maxaccelerationinmmperss();
}
inline void BasicScannerParams::set_maxaccelerationinmmperss(double value) {
  _internal_set_maxaccelerationinmmperss(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicScannerParams.maxAccelerationInMmPerSS)
}
inline double BasicScannerParams::_internal_maxaccelerationinmmperss() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.maxaccelerationinmmperss_;
}
inline void BasicScannerParams::_internal_set_maxaccelerationinmmperss(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.maxaccelerationinmmperss_ = value;
}

// double staticDelayInS = 5;
inline void BasicScannerParams::clear_staticdelayins() {
  _impl_.staticdelayins_ = 0;
}
inline double BasicScannerParams::staticdelayins() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicScannerParams.staticDelayInS)
  return _internal_staticdelayins();
}
inline void BasicScannerParams::set_staticdelayins(double value) {
  _internal_set_staticdelayins(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicScannerParams.staticDelayInS)
}
inline double BasicScannerParams::_internal_staticdelayins() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.staticdelayins_;
}
inline void BasicScannerParams::_internal_set_staticdelayins(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.staticdelayins_ = value;
}

// double jumpDelayInUs = 6;
inline void BasicScannerParams::clear_jumpdelayinus() {
  _impl_.jumpdelayinus_ = 0;
}
inline double BasicScannerParams::jumpdelayinus() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicScannerParams.jumpDelayInUs)
  return _internal_jumpdelayinus();
}
inline void BasicScannerParams::set_jumpdelayinus(double value) {
  _internal_set_jumpdelayinus(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicScannerParams.jumpDelayInUs)
}
inline double BasicScannerParams::_internal_jumpdelayinus() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jumpdelayinus_;
}
inline void BasicScannerParams::_internal_set_jumpdelayinus(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.jumpdelayinus_ = value;
}

// double markDelayInUs = 7;
inline void BasicScannerParams::clear_markdelayinus() {
  _impl_.markdelayinus_ = 0;
}
inline double BasicScannerParams::markdelayinus() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicScannerParams.markDelayInUs)
  return _internal_markdelayinus();
}
inline void BasicScannerParams::set_markdelayinus(double value) {
  _internal_set_markdelayinus(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicScannerParams.markDelayInUs)
}
inline double BasicScannerParams::_internal_markdelayinus() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.markdelayinus_;
}
inline void BasicScannerParams::_internal_set_markdelayinus(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.markdelayinus_ = value;
}

// double laserOffDelayInUs = 8;
inline void BasicScannerParams::clear_laseroffdelayinus() {
  _impl_.laseroffdelayinus_ = 0;
}
inline double BasicScannerParams::laseroffdelayinus() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicScannerParams.laserOffDelayInUs)
  return _internal_laseroffdelayinus();
}
inline void BasicScannerParams::set_laseroffdelayinus(double value) {
  _internal_set_laseroffdelayinus(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicScannerParams.laserOffDelayInUs)
}
inline double BasicScannerParams::_internal_laseroffdelayinus() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.laseroffdelayinus_;
}
inline void BasicScannerParams::_internal_set_laseroffdelayinus(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.laseroffdelayinus_ = value;
}

// double laserOnDelayInUs = 9;
inline void BasicScannerParams::clear_laserondelayinus() {
  _impl_.laserondelayinus_ = 0;
}
inline double BasicScannerParams::laserondelayinus() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicScannerParams.laserOnDelayInUs)
  return _internal_laserondelayinus();
}
inline void BasicScannerParams::set_laserondelayinus(double value) {
  _internal_set_laserondelayinus(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicScannerParams.laserOnDelayInUs)
}
inline double BasicScannerParams::_internal_laserondelayinus() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.laserondelayinus_;
}
inline void BasicScannerParams::_internal_set_laserondelayinus(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.laserondelayinus_ = value;
}

// double polygonDelayInUs = 10;
inline void BasicScannerParams::clear_polygondelayinus() {
  _impl_.polygondelayinus_ = 0;
}
inline double BasicScannerParams::polygondelayinus() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicScannerParams.polygonDelayInUs)
  return _internal_polygondelayinus();
}
inline void BasicScannerParams::set_polygondelayinus(double value) {
  _internal_set_polygondelayinus(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicScannerParams.polygonDelayInUs)
}
inline double BasicScannerParams::_internal_polygondelayinus() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.polygondelayinus_;
}
inline void BasicScannerParams::_internal_set_polygondelayinus(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.polygondelayinus_ = value;
}

// double VectorBlockDelay = 11;
inline void BasicScannerParams::clear_vectorblockdelay() {
  _impl_.vectorblockdelay_ = 0;
}
inline double BasicScannerParams::vectorblockdelay() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicScannerParams.VectorBlockDelay)
  return _internal_vectorblockdelay();
}
inline void BasicScannerParams::set_vectorblockdelay(double value) {
  _internal_set_vectorblockdelay(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicScannerParams.VectorBlockDelay)
}
inline double BasicScannerParams::_internal_vectorblockdelay() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vectorblockdelay_;
}
inline void BasicScannerParams::_internal_set_vectorblockdelay(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vectorblockdelay_ = value;
}

// double ParamChangeDelay = 12;
inline void BasicScannerParams::clear_paramchangedelay() {
  _impl_.paramchangedelay_ = 0;
}
inline double BasicScannerParams::paramchangedelay() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicScannerParams.ParamChangeDelay)
  return _internal_paramchangedelay();
}
inline void BasicScannerParams::set_paramchangedelay(double value) {
  _internal_set_paramchangedelay(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicScannerParams.ParamChangeDelay)
}
inline double BasicScannerParams::_internal_paramchangedelay() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.paramchangedelay_;
}
inline void BasicScannerParams::_internal_set_paramchangedelay(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.paramchangedelay_ = value;
}

// double WarpJumpLengthLimit = 13;
inline void BasicScannerParams::clear_warpjumplengthlimit() {
  _impl_.warpjumplengthlimit_ = 0;
}
inline double BasicScannerParams::warpjumplengthlimit() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicScannerParams.WarpJumpLengthLimit)
  return _internal_warpjumplengthlimit();
}
inline void BasicScannerParams::set_warpjumplengthlimit(double value) {
  _internal_set_warpjumplengthlimit(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicScannerParams.WarpJumpLengthLimit)
}
inline double BasicScannerParams::_internal_warpjumplengthlimit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.warpjumplengthlimit_;
}
inline void BasicScannerParams::_internal_set_warpjumplengthlimit(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.warpjumplengthlimit_ = value;
}

// .ManufacturingScenarioRepository.BasicScannerParams.JumpMode jumpMode = 14;
inline void BasicScannerParams::clear_jumpmode() {
  _impl_.jumpmode_ = 0;
}
inline ::ManufacturingScenarioRepository::BasicScannerParams_JumpMode BasicScannerParams::jumpmode() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BasicScannerParams.jumpMode)
  return _internal_jumpmode();
}
inline void BasicScannerParams::set_jumpmode(::ManufacturingScenarioRepository::BasicScannerParams_JumpMode value) {
  _internal_set_jumpmode(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BasicScannerParams.jumpMode)
}
inline ::ManufacturingScenarioRepository::BasicScannerParams_JumpMode BasicScannerParams::_internal_jumpmode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ManufacturingScenarioRepository::BasicScannerParams_JumpMode>(_impl_.jumpmode_);
}
inline void BasicScannerParams::_internal_set_jumpmode(::ManufacturingScenarioRepository::BasicScannerParams_JumpMode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.jumpmode_ = value;
}

// -------------------------------------------------------------------

// CommonSkyWritingParams

// double NPrevInTenUsTicks = 1;
inline void CommonSkyWritingParams::clear_nprevintenusticks() {
  _impl_.nprevintenusticks_ = 0;
}
inline double CommonSkyWritingParams::nprevintenusticks() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.CommonSkyWritingParams.NPrevInTenUsTicks)
  return _internal_nprevintenusticks();
}
inline void CommonSkyWritingParams::set_nprevintenusticks(double value) {
  _internal_set_nprevintenusticks(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.CommonSkyWritingParams.NPrevInTenUsTicks)
}
inline double CommonSkyWritingParams::_internal_nprevintenusticks() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nprevintenusticks_;
}
inline void CommonSkyWritingParams::_internal_set_nprevintenusticks(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nprevintenusticks_ = value;
}

// double NPostInTenUsTicks = 2;
inline void CommonSkyWritingParams::clear_npostintenusticks() {
  _impl_.npostintenusticks_ = 0;
}
inline double CommonSkyWritingParams::npostintenusticks() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.CommonSkyWritingParams.NPostInTenUsTicks)
  return _internal_npostintenusticks();
}
inline void CommonSkyWritingParams::set_npostintenusticks(double value) {
  _internal_set_npostintenusticks(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.CommonSkyWritingParams.NPostInTenUsTicks)
}
inline double CommonSkyWritingParams::_internal_npostintenusticks() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.npostintenusticks_;
}
inline void CommonSkyWritingParams::_internal_set_npostintenusticks(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.npostintenusticks_ = value;
}

// double limitAngle = 3;
inline void CommonSkyWritingParams::clear_limitangle() {
  _impl_.limitangle_ = 0;
}
inline double CommonSkyWritingParams::limitangle() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.CommonSkyWritingParams.limitAngle)
  return _internal_limitangle();
}
inline void CommonSkyWritingParams::set_limitangle(double value) {
  _internal_set_limitangle(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.CommonSkyWritingParams.limitAngle)
}
inline double CommonSkyWritingParams::_internal_limitangle() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.limitangle_;
}
inline void CommonSkyWritingParams::_internal_set_limitangle(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.limitangle_ = value;
}

// -------------------------------------------------------------------

// CoordinateTransformParams

// bool DeleteZeroLengthJumps = 1;
inline void CoordinateTransformParams::clear_deletezerolengthjumps() {
  _impl_.deletezerolengthjumps_ = false;
}
inline bool CoordinateTransformParams::deletezerolengthjumps() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.CoordinateTransformParams.DeleteZeroLengthJumps)
  return _internal_deletezerolengthjumps();
}
inline void CoordinateTransformParams::set_deletezerolengthjumps(bool value) {
  _internal_set_deletezerolengthjumps(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.CoordinateTransformParams.DeleteZeroLengthJumps)
}
inline bool CoordinateTransformParams::_internal_deletezerolengthjumps() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.deletezerolengthjumps_;
}
inline void CoordinateTransformParams::_internal_set_deletezerolengthjumps(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.deletezerolengthjumps_ = value;
}

// double MinimalJumpLength = 2;
inline void CoordinateTransformParams::clear_minimaljumplength() {
  _impl_.minimaljumplength_ = 0;
}
inline double CoordinateTransformParams::minimaljumplength() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.CoordinateTransformParams.MinimalJumpLength)
  return _internal_minimaljumplength();
}
inline void CoordinateTransformParams::set_minimaljumplength(double value) {
  _internal_set_minimaljumplength(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.CoordinateTransformParams.MinimalJumpLength)
}
inline double CoordinateTransformParams::_internal_minimaljumplength() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.minimaljumplength_;
}
inline void CoordinateTransformParams::_internal_set_minimaljumplength(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.minimaljumplength_ = value;
}

// double MinimalMarkLength = 3;
inline void CoordinateTransformParams::clear_minimalmarklength() {
  _impl_.minimalmarklength_ = 0;
}
inline double CoordinateTransformParams::minimalmarklength() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.CoordinateTransformParams.MinimalMarkLength)
  return _internal_minimalmarklength();
}
inline void CoordinateTransformParams::set_minimalmarklength(double value) {
  _internal_set_minimalmarklength(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.CoordinateTransformParams.MinimalMarkLength)
}
inline double CoordinateTransformParams::_internal_minimalmarklength() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.minimalmarklength_;
}
inline void CoordinateTransformParams::_internal_set_minimalmarklength(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.minimalmarklength_ = value;
}

// -------------------------------------------------------------------

// NovantaScannerParams

// .ManufacturingScenarioRepository.BasicScannerParams basicScannerParams = 1;
inline bool NovantaScannerParams::has_basicscannerparams() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.basicscannerparams_ != nullptr);
  return value;
}
inline void NovantaScannerParams::clear_basicscannerparams() {
  if (_impl_.basicscannerparams_ != nullptr) _impl_.basicscannerparams_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ManufacturingScenarioRepository::BasicScannerParams& NovantaScannerParams::_internal_basicscannerparams() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::BasicScannerParams* p = _impl_.basicscannerparams_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::BasicScannerParams&>(::ManufacturingScenarioRepository::_BasicScannerParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::BasicScannerParams& NovantaScannerParams::basicscannerparams() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.NovantaScannerParams.basicScannerParams)
  return _internal_basicscannerparams();
}
inline void NovantaScannerParams::unsafe_arena_set_allocated_basicscannerparams(::ManufacturingScenarioRepository::BasicScannerParams* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.basicscannerparams_);
  }
  _impl_.basicscannerparams_ = reinterpret_cast<::ManufacturingScenarioRepository::BasicScannerParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.NovantaScannerParams.basicScannerParams)
}
inline ::ManufacturingScenarioRepository::BasicScannerParams* NovantaScannerParams::release_basicscannerparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::BasicScannerParams* released = _impl_.basicscannerparams_;
  _impl_.basicscannerparams_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::BasicScannerParams* NovantaScannerParams::unsafe_arena_release_basicscannerparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.NovantaScannerParams.basicScannerParams)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::BasicScannerParams* temp = _impl_.basicscannerparams_;
  _impl_.basicscannerparams_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::BasicScannerParams* NovantaScannerParams::_internal_mutable_basicscannerparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.basicscannerparams_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::BasicScannerParams>(GetArenaForAllocation());
    _impl_.basicscannerparams_ = reinterpret_cast<::ManufacturingScenarioRepository::BasicScannerParams*>(p);
  }
  return _impl_.basicscannerparams_;
}
inline ::ManufacturingScenarioRepository::BasicScannerParams* NovantaScannerParams::mutable_basicscannerparams() {
  ::ManufacturingScenarioRepository::BasicScannerParams* _msg = _internal_mutable_basicscannerparams();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.NovantaScannerParams.basicScannerParams)
  return _msg;
}
inline void NovantaScannerParams::set_allocated_basicscannerparams(::ManufacturingScenarioRepository::BasicScannerParams* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::BasicScannerParams*>(_impl_.basicscannerparams_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::BasicScannerParams*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.basicscannerparams_ = reinterpret_cast<::ManufacturingScenarioRepository::BasicScannerParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.NovantaScannerParams.basicScannerParams)
}

// .ManufacturingScenarioRepository.CommonSkyWritingParams skyWritingParams = 2;
inline bool NovantaScannerParams::has_skywritingparams() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.skywritingparams_ != nullptr);
  return value;
}
inline void NovantaScannerParams::clear_skywritingparams() {
  if (_impl_.skywritingparams_ != nullptr) _impl_.skywritingparams_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::ManufacturingScenarioRepository::CommonSkyWritingParams& NovantaScannerParams::_internal_skywritingparams() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::CommonSkyWritingParams* p = _impl_.skywritingparams_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::CommonSkyWritingParams&>(::ManufacturingScenarioRepository::_CommonSkyWritingParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::CommonSkyWritingParams& NovantaScannerParams::skywritingparams() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.NovantaScannerParams.skyWritingParams)
  return _internal_skywritingparams();
}
inline void NovantaScannerParams::unsafe_arena_set_allocated_skywritingparams(::ManufacturingScenarioRepository::CommonSkyWritingParams* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.skywritingparams_);
  }
  _impl_.skywritingparams_ = reinterpret_cast<::ManufacturingScenarioRepository::CommonSkyWritingParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.NovantaScannerParams.skyWritingParams)
}
inline ::ManufacturingScenarioRepository::CommonSkyWritingParams* NovantaScannerParams::release_skywritingparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ManufacturingScenarioRepository::CommonSkyWritingParams* released = _impl_.skywritingparams_;
  _impl_.skywritingparams_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::CommonSkyWritingParams* NovantaScannerParams::unsafe_arena_release_skywritingparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.NovantaScannerParams.skyWritingParams)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ManufacturingScenarioRepository::CommonSkyWritingParams* temp = _impl_.skywritingparams_;
  _impl_.skywritingparams_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::CommonSkyWritingParams* NovantaScannerParams::_internal_mutable_skywritingparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.skywritingparams_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::CommonSkyWritingParams>(GetArenaForAllocation());
    _impl_.skywritingparams_ = reinterpret_cast<::ManufacturingScenarioRepository::CommonSkyWritingParams*>(p);
  }
  return _impl_.skywritingparams_;
}
inline ::ManufacturingScenarioRepository::CommonSkyWritingParams* NovantaScannerParams::mutable_skywritingparams() {
  ::ManufacturingScenarioRepository::CommonSkyWritingParams* _msg = _internal_mutable_skywritingparams();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.NovantaScannerParams.skyWritingParams)
  return _msg;
}
inline void NovantaScannerParams::set_allocated_skywritingparams(::ManufacturingScenarioRepository::CommonSkyWritingParams* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::CommonSkyWritingParams*>(_impl_.skywritingparams_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::CommonSkyWritingParams*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.skywritingparams_ = reinterpret_cast<::ManufacturingScenarioRepository::CommonSkyWritingParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.NovantaScannerParams.skyWritingParams)
}

// .ManufacturingScenarioRepository.CoordinateTransformParams coordTransformParams = 3;
inline bool NovantaScannerParams::has_coordtransformparams() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.coordtransformparams_ != nullptr);
  return value;
}
inline void NovantaScannerParams::clear_coordtransformparams() {
  if (_impl_.coordtransformparams_ != nullptr) _impl_.coordtransformparams_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::ManufacturingScenarioRepository::CoordinateTransformParams& NovantaScannerParams::_internal_coordtransformparams() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::CoordinateTransformParams* p = _impl_.coordtransformparams_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::CoordinateTransformParams&>(::ManufacturingScenarioRepository::_CoordinateTransformParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::CoordinateTransformParams& NovantaScannerParams::coordtransformparams() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.NovantaScannerParams.coordTransformParams)
  return _internal_coordtransformparams();
}
inline void NovantaScannerParams::unsafe_arena_set_allocated_coordtransformparams(::ManufacturingScenarioRepository::CoordinateTransformParams* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.coordtransformparams_);
  }
  _impl_.coordtransformparams_ = reinterpret_cast<::ManufacturingScenarioRepository::CoordinateTransformParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.NovantaScannerParams.coordTransformParams)
}
inline ::ManufacturingScenarioRepository::CoordinateTransformParams* NovantaScannerParams::release_coordtransformparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ManufacturingScenarioRepository::CoordinateTransformParams* released = _impl_.coordtransformparams_;
  _impl_.coordtransformparams_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::CoordinateTransformParams* NovantaScannerParams::unsafe_arena_release_coordtransformparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.NovantaScannerParams.coordTransformParams)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ManufacturingScenarioRepository::CoordinateTransformParams* temp = _impl_.coordtransformparams_;
  _impl_.coordtransformparams_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::CoordinateTransformParams* NovantaScannerParams::_internal_mutable_coordtransformparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.coordtransformparams_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::CoordinateTransformParams>(GetArenaForAllocation());
    _impl_.coordtransformparams_ = reinterpret_cast<::ManufacturingScenarioRepository::CoordinateTransformParams*>(p);
  }
  return _impl_.coordtransformparams_;
}
inline ::ManufacturingScenarioRepository::CoordinateTransformParams* NovantaScannerParams::mutable_coordtransformparams() {
  ::ManufacturingScenarioRepository::CoordinateTransformParams* _msg = _internal_mutable_coordtransformparams();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.NovantaScannerParams.coordTransformParams)
  return _msg;
}
inline void NovantaScannerParams::set_allocated_coordtransformparams(::ManufacturingScenarioRepository::CoordinateTransformParams* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::CoordinateTransformParams*>(_impl_.coordtransformparams_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::CoordinateTransformParams*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.coordtransformparams_ = reinterpret_cast<::ManufacturingScenarioRepository::CoordinateTransformParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.NovantaScannerParams.coordTransformParams)
}

// .ManufacturingScenarioRepository.NovantaScannerParams.SkyWritingMode skyWritingMode = 4;
inline void NovantaScannerParams::clear_skywritingmode() {
  _impl_.skywritingmode_ = 0;
}
inline ::ManufacturingScenarioRepository::NovantaScannerParams_SkyWritingMode NovantaScannerParams::skywritingmode() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.NovantaScannerParams.skyWritingMode)
  return _internal_skywritingmode();
}
inline void NovantaScannerParams::set_skywritingmode(::ManufacturingScenarioRepository::NovantaScannerParams_SkyWritingMode value) {
  _internal_set_skywritingmode(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.NovantaScannerParams.skyWritingMode)
}
inline ::ManufacturingScenarioRepository::NovantaScannerParams_SkyWritingMode NovantaScannerParams::_internal_skywritingmode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ManufacturingScenarioRepository::NovantaScannerParams_SkyWritingMode>(_impl_.skywritingmode_);
}
inline void NovantaScannerParams::_internal_set_skywritingmode(::ManufacturingScenarioRepository::NovantaScannerParams_SkyWritingMode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.skywritingmode_ = value;
}

// .ManufacturingScenarioRepository.NovantaScannerParams.DelayMode delayMode = 5;
inline void NovantaScannerParams::clear_delaymode() {
  _impl_.delaymode_ = 0;
}
inline ::ManufacturingScenarioRepository::NovantaScannerParams_DelayMode NovantaScannerParams::delaymode() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.NovantaScannerParams.delayMode)
  return _internal_delaymode();
}
inline void NovantaScannerParams::set_delaymode(::ManufacturingScenarioRepository::NovantaScannerParams_DelayMode value) {
  _internal_set_delaymode(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.NovantaScannerParams.delayMode)
}
inline ::ManufacturingScenarioRepository::NovantaScannerParams_DelayMode NovantaScannerParams::_internal_delaymode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ManufacturingScenarioRepository::NovantaScannerParams_DelayMode>(_impl_.delaymode_);
}
inline void NovantaScannerParams::_internal_set_delaymode(::ManufacturingScenarioRepository::NovantaScannerParams_DelayMode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.delaymode_ = value;
}

// double radialErrorInUm = 6;
inline void NovantaScannerParams::clear_radialerrorinum() {
  _impl_.radialerrorinum_ = 0;
}
inline double NovantaScannerParams::radialerrorinum() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.NovantaScannerParams.radialErrorInUm)
  return _internal_radialerrorinum();
}
inline void NovantaScannerParams::set_radialerrorinum(double value) {
  _internal_set_radialerrorinum(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.NovantaScannerParams.radialErrorInUm)
}
inline double NovantaScannerParams::_internal_radialerrorinum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.radialerrorinum_;
}
inline void NovantaScannerParams::_internal_set_radialerrorinum(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.radialerrorinum_ = value;
}

// double SafetyFactorFlyByLow = 7;
inline void NovantaScannerParams::clear_safetyfactorflybylow() {
  _impl_.safetyfactorflybylow_ = 0;
}
inline double NovantaScannerParams::safetyfactorflybylow() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.NovantaScannerParams.SafetyFactorFlyByLow)
  return _internal_safetyfactorflybylow();
}
inline void NovantaScannerParams::set_safetyfactorflybylow(double value) {
  _internal_set_safetyfactorflybylow(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.NovantaScannerParams.SafetyFactorFlyByLow)
}
inline double NovantaScannerParams::_internal_safetyfactorflybylow() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.safetyfactorflybylow_;
}
inline void NovantaScannerParams::_internal_set_safetyfactorflybylow(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.safetyfactorflybylow_ = value;
}

// double SafetyFactorFlyByHigh = 8;
inline void NovantaScannerParams::clear_safetyfactorflybyhigh() {
  _impl_.safetyfactorflybyhigh_ = 0;
}
inline double NovantaScannerParams::safetyfactorflybyhigh() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.NovantaScannerParams.SafetyFactorFlyByHigh)
  return _internal_safetyfactorflybyhigh();
}
inline void NovantaScannerParams::set_safetyfactorflybyhigh(double value) {
  _internal_set_safetyfactorflybyhigh(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.NovantaScannerParams.SafetyFactorFlyByHigh)
}
inline double NovantaScannerParams::_internal_safetyfactorflybyhigh() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.safetyfactorflybyhigh_;
}
inline void NovantaScannerParams::_internal_set_safetyfactorflybyhigh(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.safetyfactorflybyhigh_ = value;
}

// double SafetyFactorRadialErrorLimit = 9;
inline void NovantaScannerParams::clear_safetyfactorradialerrorlimit() {
  _impl_.safetyfactorradialerrorlimit_ = 0;
}
inline double NovantaScannerParams::safetyfactorradialerrorlimit() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.NovantaScannerParams.SafetyFactorRadialErrorLimit)
  return _internal_safetyfactorradialerrorlimit();
}
inline void NovantaScannerParams::set_safetyfactorradialerrorlimit(double value) {
  _internal_set_safetyfactorradialerrorlimit(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.NovantaScannerParams.SafetyFactorRadialErrorLimit)
}
inline double NovantaScannerParams::_internal_safetyfactorradialerrorlimit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.safetyfactorradialerrorlimit_;
}
inline void NovantaScannerParams::_internal_set_safetyfactorradialerrorlimit(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.safetyfactorradialerrorlimit_ = value;
}

// -------------------------------------------------------------------

// ScanlabScannerParams

// .ManufacturingScenarioRepository.BasicScannerParams basicScannerParams = 1;
inline bool ScanlabScannerParams::has_basicscannerparams() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.basicscannerparams_ != nullptr);
  return value;
}
inline void ScanlabScannerParams::clear_basicscannerparams() {
  if (_impl_.basicscannerparams_ != nullptr) _impl_.basicscannerparams_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ManufacturingScenarioRepository::BasicScannerParams& ScanlabScannerParams::_internal_basicscannerparams() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::BasicScannerParams* p = _impl_.basicscannerparams_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::BasicScannerParams&>(::ManufacturingScenarioRepository::_BasicScannerParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::BasicScannerParams& ScanlabScannerParams::basicscannerparams() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ScanlabScannerParams.basicScannerParams)
  return _internal_basicscannerparams();
}
inline void ScanlabScannerParams::unsafe_arena_set_allocated_basicscannerparams(::ManufacturingScenarioRepository::BasicScannerParams* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.basicscannerparams_);
  }
  _impl_.basicscannerparams_ = reinterpret_cast<::ManufacturingScenarioRepository::BasicScannerParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ScanlabScannerParams.basicScannerParams)
}
inline ::ManufacturingScenarioRepository::BasicScannerParams* ScanlabScannerParams::release_basicscannerparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::BasicScannerParams* released = _impl_.basicscannerparams_;
  _impl_.basicscannerparams_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::BasicScannerParams* ScanlabScannerParams::unsafe_arena_release_basicscannerparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ScanlabScannerParams.basicScannerParams)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ManufacturingScenarioRepository::BasicScannerParams* temp = _impl_.basicscannerparams_;
  _impl_.basicscannerparams_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::BasicScannerParams* ScanlabScannerParams::_internal_mutable_basicscannerparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.basicscannerparams_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::BasicScannerParams>(GetArenaForAllocation());
    _impl_.basicscannerparams_ = reinterpret_cast<::ManufacturingScenarioRepository::BasicScannerParams*>(p);
  }
  return _impl_.basicscannerparams_;
}
inline ::ManufacturingScenarioRepository::BasicScannerParams* ScanlabScannerParams::mutable_basicscannerparams() {
  ::ManufacturingScenarioRepository::BasicScannerParams* _msg = _internal_mutable_basicscannerparams();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ScanlabScannerParams.basicScannerParams)
  return _msg;
}
inline void ScanlabScannerParams::set_allocated_basicscannerparams(::ManufacturingScenarioRepository::BasicScannerParams* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::BasicScannerParams*>(_impl_.basicscannerparams_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::BasicScannerParams*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.basicscannerparams_ = reinterpret_cast<::ManufacturingScenarioRepository::BasicScannerParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.ScanlabScannerParams.basicScannerParams)
}

// .ManufacturingScenarioRepository.CommonSkyWritingParams skyWritingParams = 2;
inline bool ScanlabScannerParams::has_skywritingparams() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.skywritingparams_ != nullptr);
  return value;
}
inline void ScanlabScannerParams::clear_skywritingparams() {
  if (_impl_.skywritingparams_ != nullptr) _impl_.skywritingparams_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::ManufacturingScenarioRepository::CommonSkyWritingParams& ScanlabScannerParams::_internal_skywritingparams() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::CommonSkyWritingParams* p = _impl_.skywritingparams_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::CommonSkyWritingParams&>(::ManufacturingScenarioRepository::_CommonSkyWritingParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::CommonSkyWritingParams& ScanlabScannerParams::skywritingparams() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ScanlabScannerParams.skyWritingParams)
  return _internal_skywritingparams();
}
inline void ScanlabScannerParams::unsafe_arena_set_allocated_skywritingparams(::ManufacturingScenarioRepository::CommonSkyWritingParams* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.skywritingparams_);
  }
  _impl_.skywritingparams_ = reinterpret_cast<::ManufacturingScenarioRepository::CommonSkyWritingParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ScanlabScannerParams.skyWritingParams)
}
inline ::ManufacturingScenarioRepository::CommonSkyWritingParams* ScanlabScannerParams::release_skywritingparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ManufacturingScenarioRepository::CommonSkyWritingParams* released = _impl_.skywritingparams_;
  _impl_.skywritingparams_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::CommonSkyWritingParams* ScanlabScannerParams::unsafe_arena_release_skywritingparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ScanlabScannerParams.skyWritingParams)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ManufacturingScenarioRepository::CommonSkyWritingParams* temp = _impl_.skywritingparams_;
  _impl_.skywritingparams_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::CommonSkyWritingParams* ScanlabScannerParams::_internal_mutable_skywritingparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.skywritingparams_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::CommonSkyWritingParams>(GetArenaForAllocation());
    _impl_.skywritingparams_ = reinterpret_cast<::ManufacturingScenarioRepository::CommonSkyWritingParams*>(p);
  }
  return _impl_.skywritingparams_;
}
inline ::ManufacturingScenarioRepository::CommonSkyWritingParams* ScanlabScannerParams::mutable_skywritingparams() {
  ::ManufacturingScenarioRepository::CommonSkyWritingParams* _msg = _internal_mutable_skywritingparams();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ScanlabScannerParams.skyWritingParams)
  return _msg;
}
inline void ScanlabScannerParams::set_allocated_skywritingparams(::ManufacturingScenarioRepository::CommonSkyWritingParams* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::CommonSkyWritingParams*>(_impl_.skywritingparams_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::CommonSkyWritingParams*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.skywritingparams_ = reinterpret_cast<::ManufacturingScenarioRepository::CommonSkyWritingParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.ScanlabScannerParams.skyWritingParams)
}

// .ManufacturingScenarioRepository.CoordinateTransformParams coordTransformParams = 3;
inline bool ScanlabScannerParams::has_coordtransformparams() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.coordtransformparams_ != nullptr);
  return value;
}
inline void ScanlabScannerParams::clear_coordtransformparams() {
  if (_impl_.coordtransformparams_ != nullptr) _impl_.coordtransformparams_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::ManufacturingScenarioRepository::CoordinateTransformParams& ScanlabScannerParams::_internal_coordtransformparams() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ManufacturingScenarioRepository::CoordinateTransformParams* p = _impl_.coordtransformparams_;
  return p != nullptr ? *p : reinterpret_cast<const ::ManufacturingScenarioRepository::CoordinateTransformParams&>(::ManufacturingScenarioRepository::_CoordinateTransformParams_default_instance_);
}
inline const ::ManufacturingScenarioRepository::CoordinateTransformParams& ScanlabScannerParams::coordtransformparams() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ScanlabScannerParams.coordTransformParams)
  return _internal_coordtransformparams();
}
inline void ScanlabScannerParams::unsafe_arena_set_allocated_coordtransformparams(::ManufacturingScenarioRepository::CoordinateTransformParams* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.coordtransformparams_);
  }
  _impl_.coordtransformparams_ = reinterpret_cast<::ManufacturingScenarioRepository::CoordinateTransformParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManufacturingScenarioRepository.ScanlabScannerParams.coordTransformParams)
}
inline ::ManufacturingScenarioRepository::CoordinateTransformParams* ScanlabScannerParams::release_coordtransformparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ManufacturingScenarioRepository::CoordinateTransformParams* released = _impl_.coordtransformparams_;
  _impl_.coordtransformparams_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ManufacturingScenarioRepository::CoordinateTransformParams* ScanlabScannerParams::unsafe_arena_release_coordtransformparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ManufacturingScenarioRepository.ScanlabScannerParams.coordTransformParams)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ManufacturingScenarioRepository::CoordinateTransformParams* temp = _impl_.coordtransformparams_;
  _impl_.coordtransformparams_ = nullptr;
  return temp;
}
inline ::ManufacturingScenarioRepository::CoordinateTransformParams* ScanlabScannerParams::_internal_mutable_coordtransformparams() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.coordtransformparams_ == nullptr) {
    auto* p = CreateMaybeMessage<::ManufacturingScenarioRepository::CoordinateTransformParams>(GetArenaForAllocation());
    _impl_.coordtransformparams_ = reinterpret_cast<::ManufacturingScenarioRepository::CoordinateTransformParams*>(p);
  }
  return _impl_.coordtransformparams_;
}
inline ::ManufacturingScenarioRepository::CoordinateTransformParams* ScanlabScannerParams::mutable_coordtransformparams() {
  ::ManufacturingScenarioRepository::CoordinateTransformParams* _msg = _internal_mutable_coordtransformparams();
  // @@protoc_insertion_point(field_mutable:ManufacturingScenarioRepository.ScanlabScannerParams.coordTransformParams)
  return _msg;
}
inline void ScanlabScannerParams::set_allocated_coordtransformparams(::ManufacturingScenarioRepository::CoordinateTransformParams* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ManufacturingScenarioRepository::CoordinateTransformParams*>(_impl_.coordtransformparams_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ManufacturingScenarioRepository::CoordinateTransformParams*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.coordtransformparams_ = reinterpret_cast<::ManufacturingScenarioRepository::CoordinateTransformParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.ScanlabScannerParams.coordTransformParams)
}

// .ManufacturingScenarioRepository.ScanlabScannerParams.SkyWritingMode skyWritingMode = 4;
inline void ScanlabScannerParams::clear_skywritingmode() {
  _impl_.skywritingmode_ = 0;
}
inline ::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingMode ScanlabScannerParams::skywritingmode() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ScanlabScannerParams.skyWritingMode)
  return _internal_skywritingmode();
}
inline void ScanlabScannerParams::set_skywritingmode(::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingMode value) {
  _internal_set_skywritingmode(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.ScanlabScannerParams.skyWritingMode)
}
inline ::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingMode ScanlabScannerParams::_internal_skywritingmode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingMode>(_impl_.skywritingmode_);
}
inline void ScanlabScannerParams::_internal_set_skywritingmode(::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingMode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.skywritingmode_ = value;
}

// double timeLagInUs = 5;
inline void ScanlabScannerParams::clear_timelaginus() {
  _impl_.timelaginus_ = 0;
}
inline double ScanlabScannerParams::timelaginus() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ScanlabScannerParams.timeLagInUs)
  return _internal_timelaginus();
}
inline void ScanlabScannerParams::set_timelaginus(double value) {
  _internal_set_timelaginus(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.ScanlabScannerParams.timeLagInUs)
}
inline double ScanlabScannerParams::_internal_timelaginus() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timelaginus_;
}
inline void ScanlabScannerParams::_internal_set_timelaginus(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timelaginus_ = value;
}

// .ManufacturingScenarioRepository.ScanlabScannerParams.SkyWritingParametringMode skyWritingParametringMode = 6;
inline void ScanlabScannerParams::clear_skywritingparametringmode() {
  _impl_.skywritingparametringmode_ = 0;
}
inline ::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingParametringMode ScanlabScannerParams::skywritingparametringmode() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ScanlabScannerParams.skyWritingParametringMode)
  return _internal_skywritingparametringmode();
}
inline void ScanlabScannerParams::set_skywritingparametringmode(::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingParametringMode value) {
  _internal_set_skywritingparametringmode(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.ScanlabScannerParams.skyWritingParametringMode)
}
inline ::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingParametringMode ScanlabScannerParams::_internal_skywritingparametringmode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingParametringMode>(_impl_.skywritingparametringmode_);
}
inline void ScanlabScannerParams::_internal_set_skywritingparametringmode(::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingParametringMode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.skywritingparametringmode_ = value;
}

// .ManufacturingScenarioRepository.ScanlabScannerParams.DelayMode delayMode = 7;
inline void ScanlabScannerParams::clear_delaymode() {
  _impl_.delaymode_ = 0;
}
inline ::ManufacturingScenarioRepository::ScanlabScannerParams_DelayMode ScanlabScannerParams::delaymode() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ScanlabScannerParams.delayMode)
  return _internal_delaymode();
}
inline void ScanlabScannerParams::set_delaymode(::ManufacturingScenarioRepository::ScanlabScannerParams_DelayMode value) {
  _internal_set_delaymode(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.ScanlabScannerParams.delayMode)
}
inline ::ManufacturingScenarioRepository::ScanlabScannerParams_DelayMode ScanlabScannerParams::_internal_delaymode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ManufacturingScenarioRepository::ScanlabScannerParams_DelayMode>(_impl_.delaymode_);
}
inline void ScanlabScannerParams::_internal_set_delaymode(::ManufacturingScenarioRepository::ScanlabScannerParams_DelayMode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.delaymode_ = value;
}

// -------------------------------------------------------------------

// ScanField

// double XMin = 1;
inline void ScanField::clear_xmin() {
  _impl_.xmin_ = 0;
}
inline double ScanField::xmin() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ScanField.XMin)
  return _internal_xmin();
}
inline void ScanField::set_xmin(double value) {
  _internal_set_xmin(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.ScanField.XMin)
}
inline double ScanField::_internal_xmin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.xmin_;
}
inline void ScanField::_internal_set_xmin(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.xmin_ = value;
}

// double XMax = 2;
inline void ScanField::clear_xmax() {
  _impl_.xmax_ = 0;
}
inline double ScanField::xmax() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ScanField.XMax)
  return _internal_xmax();
}
inline void ScanField::set_xmax(double value) {
  _internal_set_xmax(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.ScanField.XMax)
}
inline double ScanField::_internal_xmax() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.xmax_;
}
inline void ScanField::_internal_set_xmax(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.xmax_ = value;
}

// double YMin = 3;
inline void ScanField::clear_ymin() {
  _impl_.ymin_ = 0;
}
inline double ScanField::ymin() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ScanField.YMin)
  return _internal_ymin();
}
inline void ScanField::set_ymin(double value) {
  _internal_set_ymin(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.ScanField.YMin)
}
inline double ScanField::_internal_ymin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ymin_;
}
inline void ScanField::_internal_set_ymin(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ymin_ = value;
}

// double YMax = 4;
inline void ScanField::clear_ymax() {
  _impl_.ymax_ = 0;
}
inline double ScanField::ymax() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ScanField.YMax)
  return _internal_ymax();
}
inline void ScanField::set_ymax(double value) {
  _internal_set_ymax(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.ScanField.YMax)
}
inline double ScanField::_internal_ymax() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ymax_;
}
inline void ScanField::_internal_set_ymax(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ymax_ = value;
}

// -------------------------------------------------------------------

// LaserParams

// double LaserPowerInW = 2;
inline void LaserParams::clear_laserpowerinw() {
  _impl_.laserpowerinw_ = 0;
}
inline double LaserParams::laserpowerinw() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.LaserParams.LaserPowerInW)
  return _internal_laserpowerinw();
}
inline void LaserParams::set_laserpowerinw(double value) {
  _internal_set_laserpowerinw(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.LaserParams.LaserPowerInW)
}
inline double LaserParams::_internal_laserpowerinw() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.laserpowerinw_;
}
inline void LaserParams::_internal_set_laserpowerinw(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.laserpowerinw_ = value;
}

// -------------------------------------------------------------------

// StandardCoaterParams

// double coatingSpeedForwardInMmPerSec = 1;
inline void StandardCoaterParams::clear_coatingspeedforwardinmmpersec() {
  _impl_.coatingspeedforwardinmmpersec_ = 0;
}
inline double StandardCoaterParams::coatingspeedforwardinmmpersec() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.StandardCoaterParams.coatingSpeedForwardInMmPerSec)
  return _internal_coatingspeedforwardinmmpersec();
}
inline void StandardCoaterParams::set_coatingspeedforwardinmmpersec(double value) {
  _internal_set_coatingspeedforwardinmmpersec(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.StandardCoaterParams.coatingSpeedForwardInMmPerSec)
}
inline double StandardCoaterParams::_internal_coatingspeedforwardinmmpersec() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.coatingspeedforwardinmmpersec_;
}
inline void StandardCoaterParams::_internal_set_coatingspeedforwardinmmpersec(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.coatingspeedforwardinmmpersec_ = value;
}

// double coatingSpeedBackwardInMmPerSec = 2;
inline void StandardCoaterParams::clear_coatingspeedbackwardinmmpersec() {
  _impl_.coatingspeedbackwardinmmpersec_ = 0;
}
inline double StandardCoaterParams::coatingspeedbackwardinmmpersec() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.StandardCoaterParams.coatingSpeedBackwardInMmPerSec)
  return _internal_coatingspeedbackwardinmmpersec();
}
inline void StandardCoaterParams::set_coatingspeedbackwardinmmpersec(double value) {
  _internal_set_coatingspeedbackwardinmmpersec(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.StandardCoaterParams.coatingSpeedBackwardInMmPerSec)
}
inline double StandardCoaterParams::_internal_coatingspeedbackwardinmmpersec() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.coatingspeedbackwardinmmpersec_;
}
inline void StandardCoaterParams::_internal_set_coatingspeedbackwardinmmpersec(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.coatingspeedbackwardinmmpersec_ = value;
}

// double distanceInMm = 3;
inline void StandardCoaterParams::clear_distanceinmm() {
  _impl_.distanceinmm_ = 0;
}
inline double StandardCoaterParams::distanceinmm() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.StandardCoaterParams.distanceInMm)
  return _internal_distanceinmm();
}
inline void StandardCoaterParams::set_distanceinmm(double value) {
  _internal_set_distanceinmm(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.StandardCoaterParams.distanceInMm)
}
inline double StandardCoaterParams::_internal_distanceinmm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.distanceinmm_;
}
inline void StandardCoaterParams::_internal_set_distanceinmm(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.distanceinmm_ = value;
}

// double forwardDelayInSec = 4;
inline void StandardCoaterParams::clear_forwarddelayinsec() {
  _impl_.forwarddelayinsec_ = 0;
}
inline double StandardCoaterParams::forwarddelayinsec() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.StandardCoaterParams.forwardDelayInSec)
  return _internal_forwarddelayinsec();
}
inline void StandardCoaterParams::set_forwarddelayinsec(double value) {
  _internal_set_forwarddelayinsec(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.StandardCoaterParams.forwardDelayInSec)
}
inline double StandardCoaterParams::_internal_forwarddelayinsec() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.forwarddelayinsec_;
}
inline void StandardCoaterParams::_internal_set_forwarddelayinsec(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.forwarddelayinsec_ = value;
}

// double backwardDelayInSec = 5;
inline void StandardCoaterParams::clear_backwarddelayinsec() {
  _impl_.backwarddelayinsec_ = 0;
}
inline double StandardCoaterParams::backwarddelayinsec() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.StandardCoaterParams.backwardDelayInSec)
  return _internal_backwarddelayinsec();
}
inline void StandardCoaterParams::set_backwarddelayinsec(double value) {
  _internal_set_backwarddelayinsec(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.StandardCoaterParams.backwardDelayInSec)
}
inline double StandardCoaterParams::_internal_backwarddelayinsec() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.backwarddelayinsec_;
}
inline void StandardCoaterParams::_internal_set_backwarddelayinsec(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.backwarddelayinsec_ = value;
}

// double acceleration = 6;
inline void StandardCoaterParams::clear_acceleration() {
  _impl_.acceleration_ = 0;
}
inline double StandardCoaterParams::acceleration() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.StandardCoaterParams.acceleration)
  return _internal_acceleration();
}
inline void StandardCoaterParams::set_acceleration(double value) {
  _internal_set_acceleration(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.StandardCoaterParams.acceleration)
}
inline double StandardCoaterParams::_internal_acceleration() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.acceleration_;
}
inline void StandardCoaterParams::_internal_set_acceleration(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.acceleration_ = value;
}

// bool isBidirectional = 7;
inline void StandardCoaterParams::clear_isbidirectional() {
  _impl_.isbidirectional_ = false;
}
inline bool StandardCoaterParams::isbidirectional() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.StandardCoaterParams.isBidirectional)
  return _internal_isbidirectional();
}
inline void StandardCoaterParams::set_isbidirectional(bool value) {
  _internal_set_isbidirectional(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.StandardCoaterParams.isBidirectional)
}
inline bool StandardCoaterParams::_internal_isbidirectional() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.isbidirectional_;
}
inline void StandardCoaterParams::_internal_set_isbidirectional(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.isbidirectional_ = value;
}

// -------------------------------------------------------------------

// BuildChamberParams

// double platformLiftRateInMmPerSec = 1;
inline void BuildChamberParams::clear_platformliftrateinmmpersec() {
  _impl_.platformliftrateinmmpersec_ = 0;
}
inline double BuildChamberParams::platformliftrateinmmpersec() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BuildChamberParams.platformLiftRateInMmPerSec)
  return _internal_platformliftrateinmmpersec();
}
inline void BuildChamberParams::set_platformliftrateinmmpersec(double value) {
  _internal_set_platformliftrateinmmpersec(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BuildChamberParams.platformLiftRateInMmPerSec)
}
inline double BuildChamberParams::_internal_platformliftrateinmmpersec() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.platformliftrateinmmpersec_;
}
inline void BuildChamberParams::_internal_set_platformliftrateinmmpersec(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.platformliftrateinmmpersec_ = value;
}

// double platformLiftAccelerationInMmPerSec2 = 5;
inline void BuildChamberParams::clear_platformliftaccelerationinmmpersec2() {
  _impl_.platformliftaccelerationinmmpersec2_ = 0;
}
inline double BuildChamberParams::platformliftaccelerationinmmpersec2() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BuildChamberParams.platformLiftAccelerationInMmPerSec2)
  return _internal_platformliftaccelerationinmmpersec2();
}
inline void BuildChamberParams::set_platformliftaccelerationinmmpersec2(double value) {
  _internal_set_platformliftaccelerationinmmpersec2(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BuildChamberParams.platformLiftAccelerationInMmPerSec2)
}
inline double BuildChamberParams::_internal_platformliftaccelerationinmmpersec2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.platformliftaccelerationinmmpersec2_;
}
inline void BuildChamberParams::_internal_set_platformliftaccelerationinmmpersec2(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.platformliftaccelerationinmmpersec2_ = value;
}

// double platformLiftDelayInS = 6;
inline void BuildChamberParams::clear_platformliftdelayins() {
  _impl_.platformliftdelayins_ = 0;
}
inline double BuildChamberParams::platformliftdelayins() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BuildChamberParams.platformLiftDelayInS)
  return _internal_platformliftdelayins();
}
inline void BuildChamberParams::set_platformliftdelayins(double value) {
  _internal_set_platformliftdelayins(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BuildChamberParams.platformLiftDelayInS)
}
inline double BuildChamberParams::_internal_platformliftdelayins() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.platformliftdelayins_;
}
inline void BuildChamberParams::_internal_set_platformliftdelayins(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.platformliftdelayins_ = value;
}

// double inertAtmosphereTimeInS = 2;
inline void BuildChamberParams::clear_inertatmospheretimeins() {
  _impl_.inertatmospheretimeins_ = 0;
}
inline double BuildChamberParams::inertatmospheretimeins() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BuildChamberParams.inertAtmosphereTimeInS)
  return _internal_inertatmospheretimeins();
}
inline void BuildChamberParams::set_inertatmospheretimeins(double value) {
  _internal_set_inertatmospheretimeins(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BuildChamberParams.inertAtmosphereTimeInS)
}
inline double BuildChamberParams::_internal_inertatmospheretimeins() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.inertatmospheretimeins_;
}
inline void BuildChamberParams::_internal_set_inertatmospheretimeins(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.inertatmospheretimeins_ = value;
}

// double releaseAtmosphereTimeInS = 3;
inline void BuildChamberParams::clear_releaseatmospheretimeins() {
  _impl_.releaseatmospheretimeins_ = 0;
}
inline double BuildChamberParams::releaseatmospheretimeins() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BuildChamberParams.releaseAtmosphereTimeInS)
  return _internal_releaseatmospheretimeins();
}
inline void BuildChamberParams::set_releaseatmospheretimeins(double value) {
  _internal_set_releaseatmospheretimeins(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BuildChamberParams.releaseAtmosphereTimeInS)
}
inline double BuildChamberParams::_internal_releaseatmospheretimeins() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.releaseatmospheretimeins_;
}
inline void BuildChamberParams::_internal_set_releaseatmospheretimeins(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.releaseatmospheretimeins_ = value;
}

// double maximumO2PPM = 4;
inline void BuildChamberParams::clear_maximumo2ppm() {
  _impl_.maximumo2ppm_ = 0;
}
inline double BuildChamberParams::maximumo2ppm() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.BuildChamberParams.maximumO2PPM)
  return _internal_maximumo2ppm();
}
inline void BuildChamberParams::set_maximumo2ppm(double value) {
  _internal_set_maximumo2ppm(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.BuildChamberParams.maximumO2PPM)
}
inline double BuildChamberParams::_internal_maximumo2ppm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.maximumo2ppm_;
}
inline void BuildChamberParams::_internal_set_maximumo2ppm(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.maximumo2ppm_ = value;
}

// -------------------------------------------------------------------

// CuboidBuildVolumeParams

// double XMin = 1;
inline void CuboidBuildVolumeParams::clear_xmin() {
  _impl_.xmin_ = 0;
}
inline double CuboidBuildVolumeParams::xmin() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.CuboidBuildVolumeParams.XMin)
  return _internal_xmin();
}
inline void CuboidBuildVolumeParams::set_xmin(double value) {
  _internal_set_xmin(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.CuboidBuildVolumeParams.XMin)
}
inline double CuboidBuildVolumeParams::_internal_xmin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.xmin_;
}
inline void CuboidBuildVolumeParams::_internal_set_xmin(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.xmin_ = value;
}

// double XMax = 2;
inline void CuboidBuildVolumeParams::clear_xmax() {
  _impl_.xmax_ = 0;
}
inline double CuboidBuildVolumeParams::xmax() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.CuboidBuildVolumeParams.XMax)
  return _internal_xmax();
}
inline void CuboidBuildVolumeParams::set_xmax(double value) {
  _internal_set_xmax(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.CuboidBuildVolumeParams.XMax)
}
inline double CuboidBuildVolumeParams::_internal_xmax() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.xmax_;
}
inline void CuboidBuildVolumeParams::_internal_set_xmax(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.xmax_ = value;
}

// double YMin = 3;
inline void CuboidBuildVolumeParams::clear_ymin() {
  _impl_.ymin_ = 0;
}
inline double CuboidBuildVolumeParams::ymin() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.CuboidBuildVolumeParams.YMin)
  return _internal_ymin();
}
inline void CuboidBuildVolumeParams::set_ymin(double value) {
  _internal_set_ymin(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.CuboidBuildVolumeParams.YMin)
}
inline double CuboidBuildVolumeParams::_internal_ymin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ymin_;
}
inline void CuboidBuildVolumeParams::_internal_set_ymin(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ymin_ = value;
}

// double YMax = 4;
inline void CuboidBuildVolumeParams::clear_ymax() {
  _impl_.ymax_ = 0;
}
inline double CuboidBuildVolumeParams::ymax() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.CuboidBuildVolumeParams.YMax)
  return _internal_ymax();
}
inline void CuboidBuildVolumeParams::set_ymax(double value) {
  _internal_set_ymax(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.CuboidBuildVolumeParams.YMax)
}
inline double CuboidBuildVolumeParams::_internal_ymax() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ymax_;
}
inline void CuboidBuildVolumeParams::_internal_set_ymax(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ymax_ = value;
}

// double ZMin = 5;
inline void CuboidBuildVolumeParams::clear_zmin() {
  _impl_.zmin_ = 0;
}
inline double CuboidBuildVolumeParams::zmin() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.CuboidBuildVolumeParams.ZMin)
  return _internal_zmin();
}
inline void CuboidBuildVolumeParams::set_zmin(double value) {
  _internal_set_zmin(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.CuboidBuildVolumeParams.ZMin)
}
inline double CuboidBuildVolumeParams::_internal_zmin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.zmin_;
}
inline void CuboidBuildVolumeParams::_internal_set_zmin(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.zmin_ = value;
}

// double ZMax = 6;
inline void CuboidBuildVolumeParams::clear_zmax() {
  _impl_.zmax_ = 0;
}
inline double CuboidBuildVolumeParams::zmax() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.CuboidBuildVolumeParams.ZMax)
  return _internal_zmax();
}
inline void CuboidBuildVolumeParams::set_zmax(double value) {
  _internal_set_zmax(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.CuboidBuildVolumeParams.ZMax)
}
inline double CuboidBuildVolumeParams::_internal_zmax() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.zmax_;
}
inline void CuboidBuildVolumeParams::_internal_set_zmax(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.zmax_ = value;
}

// -------------------------------------------------------------------

// ZylinderBuildVolumeParams

// double diameter = 2;
inline void ZylinderBuildVolumeParams::clear_diameter() {
  _impl_.diameter_ = 0;
}
inline double ZylinderBuildVolumeParams::diameter() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ZylinderBuildVolumeParams.diameter)
  return _internal_diameter();
}
inline void ZylinderBuildVolumeParams::set_diameter(double value) {
  _internal_set_diameter(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.ZylinderBuildVolumeParams.diameter)
}
inline double ZylinderBuildVolumeParams::_internal_diameter() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.diameter_;
}
inline void ZylinderBuildVolumeParams::_internal_set_diameter(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.diameter_ = value;
}

// double height = 3;
inline void ZylinderBuildVolumeParams::clear_height() {
  _impl_.height_ = 0;
}
inline double ZylinderBuildVolumeParams::height() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.ZylinderBuildVolumeParams.height)
  return _internal_height();
}
inline void ZylinderBuildVolumeParams::set_height(double value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.ZylinderBuildVolumeParams.height)
}
inline double ZylinderBuildVolumeParams::_internal_height() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.height_;
}
inline void ZylinderBuildVolumeParams::_internal_set_height(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.height_ = value;
}

// -------------------------------------------------------------------

// PreheaterParams

// double preheatingTemperature = 2;
inline void PreheaterParams::clear_preheatingtemperature() {
  _impl_.preheatingtemperature_ = 0;
}
inline double PreheaterParams::preheatingtemperature() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PreheaterParams.preheatingTemperature)
  return _internal_preheatingtemperature();
}
inline void PreheaterParams::set_preheatingtemperature(double value) {
  _internal_set_preheatingtemperature(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.PreheaterParams.preheatingTemperature)
}
inline double PreheaterParams::_internal_preheatingtemperature() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.preheatingtemperature_;
}
inline void PreheaterParams::_internal_set_preheatingtemperature(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.preheatingtemperature_ = value;
}

// double maximumPreheatingTemperature = 3;
inline void PreheaterParams::clear_maximumpreheatingtemperature() {
  _impl_.maximumpreheatingtemperature_ = 0;
}
inline double PreheaterParams::maximumpreheatingtemperature() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PreheaterParams.maximumPreheatingTemperature)
  return _internal_maximumpreheatingtemperature();
}
inline void PreheaterParams::set_maximumpreheatingtemperature(double value) {
  _internal_set_maximumpreheatingtemperature(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.PreheaterParams.maximumPreheatingTemperature)
}
inline double PreheaterParams::_internal_maximumpreheatingtemperature() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.maximumpreheatingtemperature_;
}
inline void PreheaterParams::_internal_set_maximumpreheatingtemperature(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.maximumpreheatingtemperature_ = value;
}

// double heatingRateInSecPerK = 4;
inline void PreheaterParams::clear_heatingrateinsecperk() {
  _impl_.heatingrateinsecperk_ = 0;
}
inline double PreheaterParams::heatingrateinsecperk() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PreheaterParams.heatingRateInSecPerK)
  return _internal_heatingrateinsecperk();
}
inline void PreheaterParams::set_heatingrateinsecperk(double value) {
  _internal_set_heatingrateinsecperk(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.PreheaterParams.heatingRateInSecPerK)
}
inline double PreheaterParams::_internal_heatingrateinsecperk() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.heatingrateinsecperk_;
}
inline void PreheaterParams::_internal_set_heatingrateinsecperk(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.heatingrateinsecperk_ = value;
}

// double roomTemperature = 5;
inline void PreheaterParams::clear_roomtemperature() {
  _impl_.roomtemperature_ = 0;
}
inline double PreheaterParams::roomtemperature() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.PreheaterParams.roomTemperature)
  return _internal_roomtemperature();
}
inline void PreheaterParams::set_roomtemperature(double value) {
  _internal_set_roomtemperature(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.PreheaterParams.roomTemperature)
}
inline double PreheaterParams::_internal_roomtemperature() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.roomtemperature_;
}
inline void PreheaterParams::_internal_set_roomtemperature(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.roomtemperature_ = value;
}

// -------------------------------------------------------------------

// TimePerStateInMS

// double timeOff = 1;
inline void TimePerStateInMS::clear_timeoff() {
  _impl_.timeoff_ = 0;
}
inline double TimePerStateInMS::timeoff() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.TimePerStateInMS.timeOff)
  return _internal_timeoff();
}
inline void TimePerStateInMS::set_timeoff(double value) {
  _internal_set_timeoff(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.TimePerStateInMS.timeOff)
}
inline double TimePerStateInMS::_internal_timeoff() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timeoff_;
}
inline void TimePerStateInMS::_internal_set_timeoff(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timeoff_ = value;
}

// double timeIdle = 2;
inline void TimePerStateInMS::clear_timeidle() {
  _impl_.timeidle_ = 0;
}
inline double TimePerStateInMS::timeidle() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.TimePerStateInMS.timeIdle)
  return _internal_timeidle();
}
inline void TimePerStateInMS::set_timeidle(double value) {
  _internal_set_timeidle(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.TimePerStateInMS.timeIdle)
}
inline double TimePerStateInMS::_internal_timeidle() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timeidle_;
}
inline void TimePerStateInMS::_internal_set_timeidle(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timeidle_ = value;
}

// double timeActive = 3;
inline void TimePerStateInMS::clear_timeactive() {
  _impl_.timeactive_ = 0;
}
inline double TimePerStateInMS::timeactive() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.TimePerStateInMS.timeActive)
  return _internal_timeactive();
}
inline void TimePerStateInMS::set_timeactive(double value) {
  _internal_set_timeactive(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.TimePerStateInMS.timeActive)
}
inline double TimePerStateInMS::_internal_timeactive() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timeactive_;
}
inline void TimePerStateInMS::_internal_set_timeactive(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timeactive_ = value;
}

// double timeMaintenance = 4;
inline void TimePerStateInMS::clear_timemaintenance() {
  _impl_.timemaintenance_ = 0;
}
inline double TimePerStateInMS::timemaintenance() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.TimePerStateInMS.timeMaintenance)
  return _internal_timemaintenance();
}
inline void TimePerStateInMS::set_timemaintenance(double value) {
  _internal_set_timemaintenance(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.TimePerStateInMS.timeMaintenance)
}
inline double TimePerStateInMS::_internal_timemaintenance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timemaintenance_;
}
inline void TimePerStateInMS::_internal_set_timemaintenance(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timemaintenance_ = value;
}

// -------------------------------------------------------------------

// EnergyUsePerStateInkWh

// double energyOff = 1;
inline void EnergyUsePerStateInkWh::clear_energyoff() {
  _impl_.energyoff_ = 0;
}
inline double EnergyUsePerStateInkWh::energyoff() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.EnergyUsePerStateInkWh.energyOff)
  return _internal_energyoff();
}
inline void EnergyUsePerStateInkWh::set_energyoff(double value) {
  _internal_set_energyoff(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.EnergyUsePerStateInkWh.energyOff)
}
inline double EnergyUsePerStateInkWh::_internal_energyoff() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.energyoff_;
}
inline void EnergyUsePerStateInkWh::_internal_set_energyoff(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.energyoff_ = value;
}

// double energyIdle = 2;
inline void EnergyUsePerStateInkWh::clear_energyidle() {
  _impl_.energyidle_ = 0;
}
inline double EnergyUsePerStateInkWh::energyidle() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.EnergyUsePerStateInkWh.energyIdle)
  return _internal_energyidle();
}
inline void EnergyUsePerStateInkWh::set_energyidle(double value) {
  _internal_set_energyidle(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.EnergyUsePerStateInkWh.energyIdle)
}
inline double EnergyUsePerStateInkWh::_internal_energyidle() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.energyidle_;
}
inline void EnergyUsePerStateInkWh::_internal_set_energyidle(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.energyidle_ = value;
}

// double energyActive = 3;
inline void EnergyUsePerStateInkWh::clear_energyactive() {
  _impl_.energyactive_ = 0;
}
inline double EnergyUsePerStateInkWh::energyactive() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.EnergyUsePerStateInkWh.energyActive)
  return _internal_energyactive();
}
inline void EnergyUsePerStateInkWh::set_energyactive(double value) {
  _internal_set_energyactive(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.EnergyUsePerStateInkWh.energyActive)
}
inline double EnergyUsePerStateInkWh::_internal_energyactive() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.energyactive_;
}
inline void EnergyUsePerStateInkWh::_internal_set_energyactive(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.energyactive_ = value;
}

// double energyMaintenance = 4;
inline void EnergyUsePerStateInkWh::clear_energymaintenance() {
  _impl_.energymaintenance_ = 0;
}
inline double EnergyUsePerStateInkWh::energymaintenance() const {
  // @@protoc_insertion_point(field_get:ManufacturingScenarioRepository.EnergyUsePerStateInkWh.energyMaintenance)
  return _internal_energymaintenance();
}
inline void EnergyUsePerStateInkWh::set_energymaintenance(double value) {
  _internal_set_energymaintenance(value);
  // @@protoc_insertion_point(field_set:ManufacturingScenarioRepository.EnergyUsePerStateInkWh.energyMaintenance)
}
inline double EnergyUsePerStateInkWh::_internal_energymaintenance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.energymaintenance_;
}
inline void EnergyUsePerStateInkWh::_internal_set_energymaintenance(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.energymaintenance_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace ManufacturingScenarioRepository


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ManufacturingScenarioRepository::BasicScannerParams_JumpMode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ManufacturingScenarioRepository::BasicScannerParams_JumpMode>() {
  return ::ManufacturingScenarioRepository::BasicScannerParams_JumpMode_descriptor();
}
template <>
struct is_proto_enum<::ManufacturingScenarioRepository::NovantaScannerParams_SkyWritingMode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ManufacturingScenarioRepository::NovantaScannerParams_SkyWritingMode>() {
  return ::ManufacturingScenarioRepository::NovantaScannerParams_SkyWritingMode_descriptor();
}
template <>
struct is_proto_enum<::ManufacturingScenarioRepository::NovantaScannerParams_DelayMode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ManufacturingScenarioRepository::NovantaScannerParams_DelayMode>() {
  return ::ManufacturingScenarioRepository::NovantaScannerParams_DelayMode_descriptor();
}
template <>
struct is_proto_enum<::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingMode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingMode>() {
  return ::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingMode_descriptor();
}
template <>
struct is_proto_enum<::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingParametringMode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingParametringMode>() {
  return ::ManufacturingScenarioRepository::ScanlabScannerParams_SkyWritingParametringMode_descriptor();
}
template <>
struct is_proto_enum<::ManufacturingScenarioRepository::ScanlabScannerParams_DelayMode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ManufacturingScenarioRepository::ScanlabScannerParams_DelayMode>() {
  return ::ManufacturingScenarioRepository::ScanlabScannerParams_DelayMode_descriptor();
}
template <>
struct is_proto_enum<::ManufacturingScenarioRepository::Service> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ManufacturingScenarioRepository::Service>() {
  return ::ManufacturingScenarioRepository::Service_descriptor();
}
template <>
struct is_proto_enum<::ManufacturingScenarioRepository::state> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ManufacturingScenarioRepository::state>() {
  return ::ManufacturingScenarioRepository::state_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ModuleDefinition_2eproto_2epb_2eh
