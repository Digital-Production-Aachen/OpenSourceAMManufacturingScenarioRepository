// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ManufacturingScenario.proto

#include "ManufacturingScenario.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ManufacturingScenarioRepository {
        template <typename>
PROTOBUF_CONSTEXPR ManufacturingScenarioDataSet::ManufacturingScenarioDataSet(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.scenarios_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.constrains_)*/ nullptr,
      /*decltype(_impl_.generating_build_processor_strategy_)*/ nullptr,
      /*decltype(_impl_.used_machine_model_)*/ nullptr,
    } {}
struct ManufacturingScenarioDataSetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ManufacturingScenarioDataSetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ManufacturingScenarioDataSetDefaultTypeInternal() {}
  union {
    ManufacturingScenarioDataSet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ManufacturingScenarioDataSetDefaultTypeInternal _ManufacturingScenarioDataSet_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ManufacturingScenario::ManufacturingScenario(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.partmanufacturingorders_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.constrains_)*/ nullptr,
      /*decltype(_impl_.generating_build_processor_strategy_)*/ nullptr,
      /*decltype(_impl_.machine_model_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
    } {}
struct ManufacturingScenarioDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ManufacturingScenarioDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ManufacturingScenarioDefaultTypeInternal() {}
  union {
    ManufacturingScenario _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ManufacturingScenarioDefaultTypeInternal _ManufacturingScenario_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR MovementConstrains::MovementConstrains(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.minimum_distance_in_mm_)*/ 0,
      /*decltype(_impl_.distance_to_container_in_mm_)*/ 0,
      /*decltype(_impl_.max_rot_z_angle_deg_)*/ 0,
      /*decltype(_impl_.min_rot_z_angle_deg_)*/ 0,
      /*decltype(_impl_.allowed_full_circle_rotation_steps_z_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MovementConstrainsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovementConstrainsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovementConstrainsDefaultTypeInternal() {}
  union {
    MovementConstrains _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovementConstrainsDefaultTypeInternal _MovementConstrains_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PartManufacturingOrder_ManufacturingPriority::PartManufacturingOrder_ManufacturingPriority(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.price_priority_)*/ 0,
      /*decltype(_impl_.due_date_priority_)*/ 0,
      /*decltype(_impl_.quality_priority_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PartManufacturingOrder_ManufacturingPriorityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PartManufacturingOrder_ManufacturingPriorityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PartManufacturingOrder_ManufacturingPriorityDefaultTypeInternal() {}
  union {
    PartManufacturingOrder_ManufacturingPriority _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PartManufacturingOrder_ManufacturingPriorityDefaultTypeInternal _PartManufacturingOrder_ManufacturingPriority_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PartManufacturingOrder::PartManufacturingOrder(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.pmo_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.part_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.material_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.priorities_)*/ nullptr,
      /*decltype(_impl_.part_num_triangles_)*/ 0,
      /*decltype(_impl_.quantity_to_manufacture_)*/ 0,
      /*decltype(_impl_.due_time_in_seconds_)*/ ::int64_t{0},
      /*decltype(_impl_.order_creation_time_delay_in_seconds_)*/ ::int64_t{0},
    } {}
struct PartManufacturingOrderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PartManufacturingOrderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PartManufacturingOrderDefaultTypeInternal() {}
  union {
    PartManufacturingOrder _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PartManufacturingOrderDefaultTypeInternal _PartManufacturingOrder_default_instance_;
}  // namespace ManufacturingScenarioRepository
static ::_pb::Metadata file_level_metadata_ManufacturingScenario_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ManufacturingScenario_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ManufacturingScenario_2eproto = nullptr;
const ::uint32_t TableStruct_ManufacturingScenario_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenarioDataSet, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenarioDataSet, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenarioDataSet, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenarioDataSet, _impl_.scenarios_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenarioDataSet, _impl_.constrains_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenarioDataSet, _impl_.generating_build_processor_strategy_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenarioDataSet, _impl_.used_machine_model_),
    ~0u,
    ~0u,
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenario, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenario, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenario, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenario, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenario, _impl_.partmanufacturingorders_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenario, _impl_.constrains_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenario, _impl_.generating_build_processor_strategy_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenario, _impl_.machine_model_),
    ~0u,
    ~0u,
    0,
    1,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::MovementConstrains, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::MovementConstrains, _impl_.minimum_distance_in_mm_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::MovementConstrains, _impl_.distance_to_container_in_mm_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::MovementConstrains, _impl_.allowed_full_circle_rotation_steps_z_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::MovementConstrains, _impl_.max_rot_z_angle_deg_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::MovementConstrains, _impl_.min_rot_z_angle_deg_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority, _impl_.price_priority_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority, _impl_.due_date_priority_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority, _impl_.quality_priority_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::PartManufacturingOrder, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::PartManufacturingOrder, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::PartManufacturingOrder, _impl_.pmo_id_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::PartManufacturingOrder, _impl_.part_id_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::PartManufacturingOrder, _impl_.part_num_triangles_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::PartManufacturingOrder, _impl_.quantity_to_manufacture_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::PartManufacturingOrder, _impl_.due_time_in_seconds_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::PartManufacturingOrder, _impl_.order_creation_time_delay_in_seconds_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::PartManufacturingOrder, _impl_.material_),
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::PartManufacturingOrder, _impl_.priorities_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::ManufacturingScenarioRepository::ManufacturingScenarioDataSet)},
        {18, 33, -1, sizeof(::ManufacturingScenarioRepository::ManufacturingScenario)},
        {39, -1, -1, sizeof(::ManufacturingScenarioRepository::MovementConstrains)},
        {52, -1, -1, sizeof(::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority)},
        {63, 79, -1, sizeof(::ManufacturingScenarioRepository::PartManufacturingOrder)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ManufacturingScenarioRepository::_ManufacturingScenarioDataSet_default_instance_._instance,
    &::ManufacturingScenarioRepository::_ManufacturingScenario_default_instance_._instance,
    &::ManufacturingScenarioRepository::_MovementConstrains_default_instance_._instance,
    &::ManufacturingScenarioRepository::_PartManufacturingOrder_ManufacturingPriority_default_instance_._instance,
    &::ManufacturingScenarioRepository::_PartManufacturingOrder_default_instance_._instance,
};
const char descriptor_table_protodef_ManufacturingScenario_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\033ManufacturingScenario.proto\022\037Manufactu"
    "ringScenarioRepository\032\036build_processor_"
    "strategy.proto\032\026ModuleDefinition.proto\"\334"
    "\002\n\034ManufacturingScenarioDataSet\022\014\n\004name\030"
    "\001 \001(\t\022I\n\tscenarios\030\002 \003(\01326.Manufacturing"
    "ScenarioRepository.ManufacturingScenario"
    "\022G\n\nconstrains\030\003 \001(\01323.ManufacturingScen"
    "arioRepository.MovementConstrains\022W\n#gen"
    "erating_build_processor_strategy\030\004 \001(\0132*"
    ".open_vector_format.BuildProcessorStrate"
    "gy\022A\n\022used_machine_model\030\005 \001(\0132%.modular"
    "Emulator.modules.proto.Module\"\333\003\n\025Manufa"
    "cturingScenario\022\014\n\004name\030\001 \001(\t\022X\n\027partMan"
    "ufacturingOrders\030\002 \003(\01327.ManufacturingSc"
    "enarioRepository.PartManufacturingOrder\022"
    "G\n\nconstrains\030\003 \001(\01323.ManufacturingScena"
    "rioRepository.MovementConstrains\022W\n#gene"
    "rating_build_processor_strategy\030\004 \001(\0132*."
    "open_vector_format.BuildProcessorStrateg"
    "y\022G\n\026specific_machine_model\030\005 \001(\0132%.modu"
    "larEmulator.modules.proto.ModuleH\000\022^\n\034ov"
    "erride_cuboid_build_volume\030\006 \001(\01326.modul"
    "arEmulator.modules.proto.CuboidBuildVolu"
    "meParamsH\000B\017\n\rmachine_model\"\301\001\n\022Movement"
    "Constrains\022\036\n\026minimum_distance_in_mm\030\001 \001"
    "(\001\022#\n\033distance_to_container_in_mm\030\002 \001(\001\022"
    ",\n$allowed_full_circle_rotation_steps_z\030"
    "\003 \001(\005\022\033\n\023max_rot_z_angle_deg\030\004 \001(\001\022\033\n\023mi"
    "n_rot_z_angle_deg\030\005 \001(\001\"\234\003\n\026PartManufact"
    "uringOrder\022\016\n\006pmo_id\030\001 \001(\t\022\017\n\007part_id\030\002 "
    "\001(\t\022\032\n\022part_num_triangles\030\003 \001(\005\022\037\n\027quant"
    "ity_to_manufacture\030\004 \001(\005\022\033\n\023due_time_in_"
    "seconds\030\005 \001(\003\022,\n$order_creation_time_del"
    "ay_in_seconds\030\006 \001(\003\022\020\n\010material\030\007 \001(\t\022a\n"
    "\npriorities\030\010 \001(\0132M.ManufacturingScenari"
    "oRepository.PartManufacturingOrder.Manuf"
    "acturingPriority\032d\n\025ManufacturingPriorit"
    "y\022\026\n\016price_priority\030\001 \001(\001\022\031\n\021due_date_pr"
    "iority\030\002 \001(\001\022\030\n\020quality_priority\030\003 \001(\001b\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ManufacturingScenario_2eproto_deps[2] =
    {
        &::descriptor_table_ModuleDefinition_2eproto,
        &::descriptor_table_build_5fprocessor_5fstrategy_2eproto,
};
static ::absl::once_flag descriptor_table_ManufacturingScenario_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ManufacturingScenario_2eproto = {
    false,
    false,
    1566,
    descriptor_table_protodef_ManufacturingScenario_2eproto,
    "ManufacturingScenario.proto",
    &descriptor_table_ManufacturingScenario_2eproto_once,
    descriptor_table_ManufacturingScenario_2eproto_deps,
    2,
    5,
    schemas,
    file_default_instances,
    TableStruct_ManufacturingScenario_2eproto::offsets,
    file_level_metadata_ManufacturingScenario_2eproto,
    file_level_enum_descriptors_ManufacturingScenario_2eproto,
    file_level_service_descriptors_ManufacturingScenario_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ManufacturingScenario_2eproto_getter() {
  return &descriptor_table_ManufacturingScenario_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ManufacturingScenario_2eproto(&descriptor_table_ManufacturingScenario_2eproto);
namespace ManufacturingScenarioRepository {
// ===================================================================

class ManufacturingScenarioDataSet::_Internal {
 public:
  using HasBits = decltype(std::declval<ManufacturingScenarioDataSet>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ManufacturingScenarioDataSet, _impl_._has_bits_);
  static const ::ManufacturingScenarioRepository::MovementConstrains& constrains(const ManufacturingScenarioDataSet* msg);
  static void set_has_constrains(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::open_vector_format::BuildProcessorStrategy& generating_build_processor_strategy(const ManufacturingScenarioDataSet* msg);
  static void set_has_generating_build_processor_strategy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::modularEmulator::modules::proto::Module& used_machine_model(const ManufacturingScenarioDataSet* msg);
  static void set_has_used_machine_model(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::ManufacturingScenarioRepository::MovementConstrains& ManufacturingScenarioDataSet::_Internal::constrains(const ManufacturingScenarioDataSet* msg) {
  return *msg->_impl_.constrains_;
}
const ::open_vector_format::BuildProcessorStrategy& ManufacturingScenarioDataSet::_Internal::generating_build_processor_strategy(const ManufacturingScenarioDataSet* msg) {
  return *msg->_impl_.generating_build_processor_strategy_;
}
const ::modularEmulator::modules::proto::Module& ManufacturingScenarioDataSet::_Internal::used_machine_model(const ManufacturingScenarioDataSet* msg) {
  return *msg->_impl_.used_machine_model_;
}
void ManufacturingScenarioDataSet::clear_generating_build_processor_strategy() {
  if (_impl_.generating_build_processor_strategy_ != nullptr) _impl_.generating_build_processor_strategy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ManufacturingScenarioDataSet::clear_used_machine_model() {
  if (_impl_.used_machine_model_ != nullptr) _impl_.used_machine_model_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
ManufacturingScenarioDataSet::ManufacturingScenarioDataSet(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ManufacturingScenarioRepository.ManufacturingScenarioDataSet)
}
ManufacturingScenarioDataSet::ManufacturingScenarioDataSet(const ManufacturingScenarioDataSet& from) : ::google::protobuf::Message() {
  ManufacturingScenarioDataSet* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.scenarios_){from._impl_.scenarios_},
      decltype(_impl_.name_){},
      decltype(_impl_.constrains_){nullptr},
      decltype(_impl_.generating_build_processor_strategy_){nullptr},
      decltype(_impl_.used_machine_model_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.constrains_ = new ::ManufacturingScenarioRepository::MovementConstrains(*from._impl_.constrains_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.generating_build_processor_strategy_ = new ::open_vector_format::BuildProcessorStrategy(*from._impl_.generating_build_processor_strategy_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.used_machine_model_ = new ::modularEmulator::modules::proto::Module(*from._impl_.used_machine_model_);
  }

  // @@protoc_insertion_point(copy_constructor:ManufacturingScenarioRepository.ManufacturingScenarioDataSet)
}
inline void ManufacturingScenarioDataSet::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.scenarios_){arena},
      decltype(_impl_.name_){},
      decltype(_impl_.constrains_){nullptr},
      decltype(_impl_.generating_build_processor_strategy_){nullptr},
      decltype(_impl_.used_machine_model_){nullptr},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ManufacturingScenarioDataSet::~ManufacturingScenarioDataSet() {
  // @@protoc_insertion_point(destructor:ManufacturingScenarioRepository.ManufacturingScenarioDataSet)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ManufacturingScenarioDataSet::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.scenarios_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.constrains_;
  if (this != internal_default_instance()) delete _impl_.generating_build_processor_strategy_;
  if (this != internal_default_instance()) delete _impl_.used_machine_model_;
}
void ManufacturingScenarioDataSet::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ManufacturingScenarioDataSet::Clear() {
// @@protoc_insertion_point(message_clear_start:ManufacturingScenarioRepository.ManufacturingScenarioDataSet)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_scenarios()->Clear();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.constrains_ != nullptr);
      _impl_.constrains_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.generating_build_processor_strategy_ != nullptr);
      _impl_.generating_build_processor_strategy_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.used_machine_model_ != nullptr);
      _impl_.used_machine_model_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ManufacturingScenarioDataSet::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 4, 73, 2> ManufacturingScenarioDataSet::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ManufacturingScenarioDataSet, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ManufacturingScenarioDataSet_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ManufacturingScenarioDataSet, _impl_.name_)}},
    // repeated .ManufacturingScenarioRepository.ManufacturingScenario scenarios = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ManufacturingScenarioDataSet, _impl_.scenarios_)}},
    // .ManufacturingScenarioRepository.MovementConstrains constrains = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(ManufacturingScenarioDataSet, _impl_.constrains_)}},
    // .open_vector_format.BuildProcessorStrategy generating_build_processor_strategy = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 2, PROTOBUF_FIELD_OFFSET(ManufacturingScenarioDataSet, _impl_.generating_build_processor_strategy_)}},
    // .modularEmulator.modules.proto.Module used_machine_model = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 3, PROTOBUF_FIELD_OFFSET(ManufacturingScenarioDataSet, _impl_.used_machine_model_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ManufacturingScenarioDataSet, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .ManufacturingScenarioRepository.ManufacturingScenario scenarios = 2;
    {PROTOBUF_FIELD_OFFSET(ManufacturingScenarioDataSet, _impl_.scenarios_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ManufacturingScenarioRepository.MovementConstrains constrains = 3;
    {PROTOBUF_FIELD_OFFSET(ManufacturingScenarioDataSet, _impl_.constrains_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .open_vector_format.BuildProcessorStrategy generating_build_processor_strategy = 4;
    {PROTOBUF_FIELD_OFFSET(ManufacturingScenarioDataSet, _impl_.generating_build_processor_strategy_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .modularEmulator.modules.proto.Module used_machine_model = 5;
    {PROTOBUF_FIELD_OFFSET(ManufacturingScenarioDataSet, _impl_.used_machine_model_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ManufacturingScenarioRepository::ManufacturingScenario>()},
    {::_pbi::TcParser::GetTable<::ManufacturingScenarioRepository::MovementConstrains>()},
    {::_pbi::TcParser::GetTable<::open_vector_format::BuildProcessorStrategy>()},
    {::_pbi::TcParser::GetTable<::modularEmulator::modules::proto::Module>()},
  }}, {{
    "\74\4\0\0\0\0\0\0"
    "ManufacturingScenarioRepository.ManufacturingScenarioDataSet"
    "name"
  }},
};

::uint8_t* ManufacturingScenarioDataSet::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ManufacturingScenarioRepository.ManufacturingScenarioDataSet)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ManufacturingScenarioRepository.ManufacturingScenarioDataSet.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .ManufacturingScenarioRepository.ManufacturingScenario scenarios = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_scenarios_size()); i < n; i++) {
    const auto& repfield = this->_internal_scenarios().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ManufacturingScenarioRepository.MovementConstrains constrains = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::constrains(this),
        _Internal::constrains(this).GetCachedSize(), target, stream);
  }

  // .open_vector_format.BuildProcessorStrategy generating_build_processor_strategy = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::generating_build_processor_strategy(this),
        _Internal::generating_build_processor_strategy(this).GetCachedSize(), target, stream);
  }

  // .modularEmulator.modules.proto.Module used_machine_model = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::used_machine_model(this),
        _Internal::used_machine_model(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ManufacturingScenarioRepository.ManufacturingScenarioDataSet)
  return target;
}

::size_t ManufacturingScenarioDataSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ManufacturingScenarioRepository.ManufacturingScenarioDataSet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ManufacturingScenarioRepository.ManufacturingScenario scenarios = 2;
  total_size += 1UL * this->_internal_scenarios_size();
  for (const auto& msg : this->_internal_scenarios()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .ManufacturingScenarioRepository.MovementConstrains constrains = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.constrains_);
    }

    // .open_vector_format.BuildProcessorStrategy generating_build_processor_strategy = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.generating_build_processor_strategy_);
    }

    // .modularEmulator.modules.proto.Module used_machine_model = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.used_machine_model_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ManufacturingScenarioDataSet::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ManufacturingScenarioDataSet::MergeImpl
};
const ::google::protobuf::Message::ClassData*ManufacturingScenarioDataSet::GetClassData() const { return &_class_data_; }


void ManufacturingScenarioDataSet::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ManufacturingScenarioDataSet*>(&to_msg);
  auto& from = static_cast<const ManufacturingScenarioDataSet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ManufacturingScenarioRepository.ManufacturingScenarioDataSet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_scenarios()->MergeFrom(from._internal_scenarios());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_constrains()->::ManufacturingScenarioRepository::MovementConstrains::MergeFrom(
          from._internal_constrains());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_generating_build_processor_strategy()->::open_vector_format::BuildProcessorStrategy::MergeFrom(
          from._internal_generating_build_processor_strategy());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_used_machine_model()->::modularEmulator::modules::proto::Module::MergeFrom(
          from._internal_used_machine_model());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ManufacturingScenarioDataSet::CopyFrom(const ManufacturingScenarioDataSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ManufacturingScenarioRepository.ManufacturingScenarioDataSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ManufacturingScenarioDataSet::IsInitialized() const {
  return true;
}

void ManufacturingScenarioDataSet::InternalSwap(ManufacturingScenarioDataSet* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.scenarios_.InternalSwap(&other->_impl_.scenarios_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ManufacturingScenarioDataSet, _impl_.used_machine_model_)
      + sizeof(ManufacturingScenarioDataSet::_impl_.used_machine_model_)
      - PROTOBUF_FIELD_OFFSET(ManufacturingScenarioDataSet, _impl_.constrains_)>(
          reinterpret_cast<char*>(&_impl_.constrains_),
          reinterpret_cast<char*>(&other->_impl_.constrains_));
}

::google::protobuf::Metadata ManufacturingScenarioDataSet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ManufacturingScenario_2eproto_getter, &descriptor_table_ManufacturingScenario_2eproto_once,
      file_level_metadata_ManufacturingScenario_2eproto[0]);
}
// ===================================================================

class ManufacturingScenario::_Internal {
 public:
  using HasBits = decltype(std::declval<ManufacturingScenario>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ManufacturingScenario, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::ManufacturingScenarioRepository::ManufacturingScenario, _impl_._oneof_case_);
  static const ::ManufacturingScenarioRepository::MovementConstrains& constrains(const ManufacturingScenario* msg);
  static void set_has_constrains(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::open_vector_format::BuildProcessorStrategy& generating_build_processor_strategy(const ManufacturingScenario* msg);
  static void set_has_generating_build_processor_strategy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::modularEmulator::modules::proto::Module& specific_machine_model(const ManufacturingScenario* msg);
  static const ::modularEmulator::modules::proto::CuboidBuildVolumeParams& override_cuboid_build_volume(const ManufacturingScenario* msg);
};

const ::ManufacturingScenarioRepository::MovementConstrains& ManufacturingScenario::_Internal::constrains(const ManufacturingScenario* msg) {
  return *msg->_impl_.constrains_;
}
const ::open_vector_format::BuildProcessorStrategy& ManufacturingScenario::_Internal::generating_build_processor_strategy(const ManufacturingScenario* msg) {
  return *msg->_impl_.generating_build_processor_strategy_;
}
const ::modularEmulator::modules::proto::Module& ManufacturingScenario::_Internal::specific_machine_model(const ManufacturingScenario* msg) {
  return *msg->_impl_.machine_model_.specific_machine_model_;
}
const ::modularEmulator::modules::proto::CuboidBuildVolumeParams& ManufacturingScenario::_Internal::override_cuboid_build_volume(const ManufacturingScenario* msg) {
  return *msg->_impl_.machine_model_.override_cuboid_build_volume_;
}
void ManufacturingScenario::clear_generating_build_processor_strategy() {
  if (_impl_.generating_build_processor_strategy_ != nullptr) _impl_.generating_build_processor_strategy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ManufacturingScenario::set_allocated_specific_machine_model(::modularEmulator::modules::proto::Module* specific_machine_model) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_machine_model();
  if (specific_machine_model) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(specific_machine_model));
    if (message_arena != submessage_arena) {
      specific_machine_model = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, specific_machine_model, submessage_arena);
    }
    set_has_specific_machine_model();
    _impl_.machine_model_.specific_machine_model_ = specific_machine_model;
  }
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.ManufacturingScenario.specific_machine_model)
}
void ManufacturingScenario::clear_specific_machine_model() {
  if (machine_model_case() == kSpecificMachineModel) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.machine_model_.specific_machine_model_;
    }
    clear_has_machine_model();
  }
}
void ManufacturingScenario::set_allocated_override_cuboid_build_volume(::modularEmulator::modules::proto::CuboidBuildVolumeParams* override_cuboid_build_volume) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_machine_model();
  if (override_cuboid_build_volume) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(override_cuboid_build_volume));
    if (message_arena != submessage_arena) {
      override_cuboid_build_volume = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, override_cuboid_build_volume, submessage_arena);
    }
    set_has_override_cuboid_build_volume();
    _impl_.machine_model_.override_cuboid_build_volume_ = override_cuboid_build_volume;
  }
  // @@protoc_insertion_point(field_set_allocated:ManufacturingScenarioRepository.ManufacturingScenario.override_cuboid_build_volume)
}
void ManufacturingScenario::clear_override_cuboid_build_volume() {
  if (machine_model_case() == kOverrideCuboidBuildVolume) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.machine_model_.override_cuboid_build_volume_;
    }
    clear_has_machine_model();
  }
}
ManufacturingScenario::ManufacturingScenario(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ManufacturingScenarioRepository.ManufacturingScenario)
}
ManufacturingScenario::ManufacturingScenario(const ManufacturingScenario& from) : ::google::protobuf::Message() {
  ManufacturingScenario* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.partmanufacturingorders_){from._impl_.partmanufacturingorders_},
      decltype(_impl_.name_){},
      decltype(_impl_.constrains_){nullptr},
      decltype(_impl_.generating_build_processor_strategy_){nullptr},
      decltype(_impl_.machine_model_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.constrains_ = new ::ManufacturingScenarioRepository::MovementConstrains(*from._impl_.constrains_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.generating_build_processor_strategy_ = new ::open_vector_format::BuildProcessorStrategy(*from._impl_.generating_build_processor_strategy_);
  }
  clear_has_machine_model();
  switch (from.machine_model_case()) {
    case kSpecificMachineModel: {
      _this->_internal_mutable_specific_machine_model()->::modularEmulator::modules::proto::Module::MergeFrom(
          from._internal_specific_machine_model());
      break;
    }
    case kOverrideCuboidBuildVolume: {
      _this->_internal_mutable_override_cuboid_build_volume()->::modularEmulator::modules::proto::CuboidBuildVolumeParams::MergeFrom(
          from._internal_override_cuboid_build_volume());
      break;
    }
    case MACHINE_MODEL_NOT_SET: {
      break;
    }
  }

  // @@protoc_insertion_point(copy_constructor:ManufacturingScenarioRepository.ManufacturingScenario)
}
inline void ManufacturingScenario::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.partmanufacturingorders_){arena},
      decltype(_impl_.name_){},
      decltype(_impl_.constrains_){nullptr},
      decltype(_impl_.generating_build_processor_strategy_){nullptr},
      decltype(_impl_.machine_model_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_machine_model();
}
ManufacturingScenario::~ManufacturingScenario() {
  // @@protoc_insertion_point(destructor:ManufacturingScenarioRepository.ManufacturingScenario)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ManufacturingScenario::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.partmanufacturingorders_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.constrains_;
  if (this != internal_default_instance()) delete _impl_.generating_build_processor_strategy_;
  if (has_machine_model()) {
    clear_machine_model();
  }
}
void ManufacturingScenario::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ManufacturingScenario::clear_machine_model() {
// @@protoc_insertion_point(one_of_clear_start:ManufacturingScenarioRepository.ManufacturingScenario)
  switch (machine_model_case()) {
    case kSpecificMachineModel: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.machine_model_.specific_machine_model_;
      }
      break;
    }
    case kOverrideCuboidBuildVolume: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.machine_model_.override_cuboid_build_volume_;
      }
      break;
    }
    case MACHINE_MODEL_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MACHINE_MODEL_NOT_SET;
}


PROTOBUF_NOINLINE void ManufacturingScenario::Clear() {
// @@protoc_insertion_point(message_clear_start:ManufacturingScenarioRepository.ManufacturingScenario)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_partmanufacturingorders()->Clear();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.constrains_ != nullptr);
      _impl_.constrains_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.generating_build_processor_strategy_ != nullptr);
      _impl_.generating_build_processor_strategy_->Clear();
    }
  }
  clear_machine_model();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ManufacturingScenario::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 5, 66, 2> ManufacturingScenario::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ManufacturingScenario, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ManufacturingScenario_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .open_vector_format.BuildProcessorStrategy generating_build_processor_strategy = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 2, PROTOBUF_FIELD_OFFSET(ManufacturingScenario, _impl_.generating_build_processor_strategy_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ManufacturingScenario, _impl_.name_)}},
    // repeated .ManufacturingScenarioRepository.PartManufacturingOrder partManufacturingOrders = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ManufacturingScenario, _impl_.partmanufacturingorders_)}},
    // .ManufacturingScenarioRepository.MovementConstrains constrains = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(ManufacturingScenario, _impl_.constrains_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ManufacturingScenario, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .ManufacturingScenarioRepository.PartManufacturingOrder partManufacturingOrders = 2;
    {PROTOBUF_FIELD_OFFSET(ManufacturingScenario, _impl_.partmanufacturingorders_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ManufacturingScenarioRepository.MovementConstrains constrains = 3;
    {PROTOBUF_FIELD_OFFSET(ManufacturingScenario, _impl_.constrains_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .open_vector_format.BuildProcessorStrategy generating_build_processor_strategy = 4;
    {PROTOBUF_FIELD_OFFSET(ManufacturingScenario, _impl_.generating_build_processor_strategy_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .modularEmulator.modules.proto.Module specific_machine_model = 5;
    {PROTOBUF_FIELD_OFFSET(ManufacturingScenario, _impl_.machine_model_.specific_machine_model_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .modularEmulator.modules.proto.CuboidBuildVolumeParams override_cuboid_build_volume = 6;
    {PROTOBUF_FIELD_OFFSET(ManufacturingScenario, _impl_.machine_model_.override_cuboid_build_volume_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ManufacturingScenarioRepository::PartManufacturingOrder>()},
    {::_pbi::TcParser::GetTable<::ManufacturingScenarioRepository::MovementConstrains>()},
    {::_pbi::TcParser::GetTable<::open_vector_format::BuildProcessorStrategy>()},
    {::_pbi::TcParser::GetTable<::modularEmulator::modules::proto::Module>()},
    {::_pbi::TcParser::GetTable<::modularEmulator::modules::proto::CuboidBuildVolumeParams>()},
  }}, {{
    "\65\4\0\0\0\0\0\0"
    "ManufacturingScenarioRepository.ManufacturingScenario"
    "name"
  }},
};

::uint8_t* ManufacturingScenario::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ManufacturingScenarioRepository.ManufacturingScenario)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ManufacturingScenarioRepository.ManufacturingScenario.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .ManufacturingScenarioRepository.PartManufacturingOrder partManufacturingOrders = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_partmanufacturingorders_size()); i < n; i++) {
    const auto& repfield = this->_internal_partmanufacturingorders().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ManufacturingScenarioRepository.MovementConstrains constrains = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::constrains(this),
        _Internal::constrains(this).GetCachedSize(), target, stream);
  }

  // .open_vector_format.BuildProcessorStrategy generating_build_processor_strategy = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::generating_build_processor_strategy(this),
        _Internal::generating_build_processor_strategy(this).GetCachedSize(), target, stream);
  }

  switch (machine_model_case()) {
    case kSpecificMachineModel: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, _Internal::specific_machine_model(this),
          _Internal::specific_machine_model(this).GetCachedSize(), target, stream);
      break;
    }
    case kOverrideCuboidBuildVolume: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, _Internal::override_cuboid_build_volume(this),
          _Internal::override_cuboid_build_volume(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ManufacturingScenarioRepository.ManufacturingScenario)
  return target;
}

::size_t ManufacturingScenario::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ManufacturingScenarioRepository.ManufacturingScenario)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ManufacturingScenarioRepository.PartManufacturingOrder partManufacturingOrders = 2;
  total_size += 1UL * this->_internal_partmanufacturingorders_size();
  for (const auto& msg : this->_internal_partmanufacturingorders()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .ManufacturingScenarioRepository.MovementConstrains constrains = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.constrains_);
    }

    // .open_vector_format.BuildProcessorStrategy generating_build_processor_strategy = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.generating_build_processor_strategy_);
    }

  }
  switch (machine_model_case()) {
    // .modularEmulator.modules.proto.Module specific_machine_model = 5;
    case kSpecificMachineModel: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.machine_model_.specific_machine_model_);
      break;
    }
    // .modularEmulator.modules.proto.CuboidBuildVolumeParams override_cuboid_build_volume = 6;
    case kOverrideCuboidBuildVolume: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.machine_model_.override_cuboid_build_volume_);
      break;
    }
    case MACHINE_MODEL_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ManufacturingScenario::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ManufacturingScenario::MergeImpl
};
const ::google::protobuf::Message::ClassData*ManufacturingScenario::GetClassData() const { return &_class_data_; }


void ManufacturingScenario::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ManufacturingScenario*>(&to_msg);
  auto& from = static_cast<const ManufacturingScenario&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ManufacturingScenarioRepository.ManufacturingScenario)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_partmanufacturingorders()->MergeFrom(from._internal_partmanufacturingorders());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_constrains()->::ManufacturingScenarioRepository::MovementConstrains::MergeFrom(
          from._internal_constrains());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_generating_build_processor_strategy()->::open_vector_format::BuildProcessorStrategy::MergeFrom(
          from._internal_generating_build_processor_strategy());
    }
  }
  switch (from.machine_model_case()) {
    case kSpecificMachineModel: {
      _this->_internal_mutable_specific_machine_model()->::modularEmulator::modules::proto::Module::MergeFrom(
          from._internal_specific_machine_model());
      break;
    }
    case kOverrideCuboidBuildVolume: {
      _this->_internal_mutable_override_cuboid_build_volume()->::modularEmulator::modules::proto::CuboidBuildVolumeParams::MergeFrom(
          from._internal_override_cuboid_build_volume());
      break;
    }
    case MACHINE_MODEL_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ManufacturingScenario::CopyFrom(const ManufacturingScenario& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ManufacturingScenarioRepository.ManufacturingScenario)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ManufacturingScenario::IsInitialized() const {
  return true;
}

void ManufacturingScenario::InternalSwap(ManufacturingScenario* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.partmanufacturingorders_.InternalSwap(&other->_impl_.partmanufacturingorders_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ManufacturingScenario, _impl_.generating_build_processor_strategy_)
      + sizeof(ManufacturingScenario::_impl_.generating_build_processor_strategy_)
      - PROTOBUF_FIELD_OFFSET(ManufacturingScenario, _impl_.constrains_)>(
          reinterpret_cast<char*>(&_impl_.constrains_),
          reinterpret_cast<char*>(&other->_impl_.constrains_));
  swap(_impl_.machine_model_, other->_impl_.machine_model_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ManufacturingScenario::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ManufacturingScenario_2eproto_getter, &descriptor_table_ManufacturingScenario_2eproto_once,
      file_level_metadata_ManufacturingScenario_2eproto[1]);
}
// ===================================================================

class MovementConstrains::_Internal {
 public:
};

MovementConstrains::MovementConstrains(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ManufacturingScenarioRepository.MovementConstrains)
}
MovementConstrains::MovementConstrains(const MovementConstrains& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ManufacturingScenarioRepository.MovementConstrains)
}
inline void MovementConstrains::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.minimum_distance_in_mm_){0},
      decltype(_impl_.distance_to_container_in_mm_){0},
      decltype(_impl_.max_rot_z_angle_deg_){0},
      decltype(_impl_.min_rot_z_angle_deg_){0},
      decltype(_impl_.allowed_full_circle_rotation_steps_z_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
MovementConstrains::~MovementConstrains() {
  // @@protoc_insertion_point(destructor:ManufacturingScenarioRepository.MovementConstrains)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MovementConstrains::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void MovementConstrains::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MovementConstrains::Clear() {
// @@protoc_insertion_point(message_clear_start:ManufacturingScenarioRepository.MovementConstrains)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.minimum_distance_in_mm_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.allowed_full_circle_rotation_steps_z_) -
      reinterpret_cast<char*>(&_impl_.minimum_distance_in_mm_)) + sizeof(_impl_.allowed_full_circle_rotation_steps_z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MovementConstrains::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> MovementConstrains::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MovementConstrains_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double minimum_distance_in_mm = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(MovementConstrains, _impl_.minimum_distance_in_mm_)}},
    // double distance_to_container_in_mm = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(MovementConstrains, _impl_.distance_to_container_in_mm_)}},
    // int32 allowed_full_circle_rotation_steps_z = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovementConstrains, _impl_.allowed_full_circle_rotation_steps_z_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MovementConstrains, _impl_.allowed_full_circle_rotation_steps_z_)}},
    // double max_rot_z_angle_deg = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(MovementConstrains, _impl_.max_rot_z_angle_deg_)}},
    // double min_rot_z_angle_deg = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(MovementConstrains, _impl_.min_rot_z_angle_deg_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double minimum_distance_in_mm = 1;
    {PROTOBUF_FIELD_OFFSET(MovementConstrains, _impl_.minimum_distance_in_mm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double distance_to_container_in_mm = 2;
    {PROTOBUF_FIELD_OFFSET(MovementConstrains, _impl_.distance_to_container_in_mm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int32 allowed_full_circle_rotation_steps_z = 3;
    {PROTOBUF_FIELD_OFFSET(MovementConstrains, _impl_.allowed_full_circle_rotation_steps_z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double max_rot_z_angle_deg = 4;
    {PROTOBUF_FIELD_OFFSET(MovementConstrains, _impl_.max_rot_z_angle_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double min_rot_z_angle_deg = 5;
    {PROTOBUF_FIELD_OFFSET(MovementConstrains, _impl_.min_rot_z_angle_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MovementConstrains::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ManufacturingScenarioRepository.MovementConstrains)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double minimum_distance_in_mm = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_minimum_distance_in_mm = this->_internal_minimum_distance_in_mm();
  ::uint64_t raw_minimum_distance_in_mm;
  memcpy(&raw_minimum_distance_in_mm, &tmp_minimum_distance_in_mm, sizeof(tmp_minimum_distance_in_mm));
  if (raw_minimum_distance_in_mm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_minimum_distance_in_mm(), target);
  }

  // double distance_to_container_in_mm = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_distance_to_container_in_mm = this->_internal_distance_to_container_in_mm();
  ::uint64_t raw_distance_to_container_in_mm;
  memcpy(&raw_distance_to_container_in_mm, &tmp_distance_to_container_in_mm, sizeof(tmp_distance_to_container_in_mm));
  if (raw_distance_to_container_in_mm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_distance_to_container_in_mm(), target);
  }

  // int32 allowed_full_circle_rotation_steps_z = 3;
  if (this->_internal_allowed_full_circle_rotation_steps_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_allowed_full_circle_rotation_steps_z(), target);
  }

  // double max_rot_z_angle_deg = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max_rot_z_angle_deg = this->_internal_max_rot_z_angle_deg();
  ::uint64_t raw_max_rot_z_angle_deg;
  memcpy(&raw_max_rot_z_angle_deg, &tmp_max_rot_z_angle_deg, sizeof(tmp_max_rot_z_angle_deg));
  if (raw_max_rot_z_angle_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_max_rot_z_angle_deg(), target);
  }

  // double min_rot_z_angle_deg = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_min_rot_z_angle_deg = this->_internal_min_rot_z_angle_deg();
  ::uint64_t raw_min_rot_z_angle_deg;
  memcpy(&raw_min_rot_z_angle_deg, &tmp_min_rot_z_angle_deg, sizeof(tmp_min_rot_z_angle_deg));
  if (raw_min_rot_z_angle_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_min_rot_z_angle_deg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ManufacturingScenarioRepository.MovementConstrains)
  return target;
}

::size_t MovementConstrains::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ManufacturingScenarioRepository.MovementConstrains)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double minimum_distance_in_mm = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_minimum_distance_in_mm = this->_internal_minimum_distance_in_mm();
  ::uint64_t raw_minimum_distance_in_mm;
  memcpy(&raw_minimum_distance_in_mm, &tmp_minimum_distance_in_mm, sizeof(tmp_minimum_distance_in_mm));
  if (raw_minimum_distance_in_mm != 0) {
    total_size += 9;
  }

  // double distance_to_container_in_mm = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_distance_to_container_in_mm = this->_internal_distance_to_container_in_mm();
  ::uint64_t raw_distance_to_container_in_mm;
  memcpy(&raw_distance_to_container_in_mm, &tmp_distance_to_container_in_mm, sizeof(tmp_distance_to_container_in_mm));
  if (raw_distance_to_container_in_mm != 0) {
    total_size += 9;
  }

  // double max_rot_z_angle_deg = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max_rot_z_angle_deg = this->_internal_max_rot_z_angle_deg();
  ::uint64_t raw_max_rot_z_angle_deg;
  memcpy(&raw_max_rot_z_angle_deg, &tmp_max_rot_z_angle_deg, sizeof(tmp_max_rot_z_angle_deg));
  if (raw_max_rot_z_angle_deg != 0) {
    total_size += 9;
  }

  // double min_rot_z_angle_deg = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_min_rot_z_angle_deg = this->_internal_min_rot_z_angle_deg();
  ::uint64_t raw_min_rot_z_angle_deg;
  memcpy(&raw_min_rot_z_angle_deg, &tmp_min_rot_z_angle_deg, sizeof(tmp_min_rot_z_angle_deg));
  if (raw_min_rot_z_angle_deg != 0) {
    total_size += 9;
  }

  // int32 allowed_full_circle_rotation_steps_z = 3;
  if (this->_internal_allowed_full_circle_rotation_steps_z() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_allowed_full_circle_rotation_steps_z());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MovementConstrains::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MovementConstrains::MergeImpl
};
const ::google::protobuf::Message::ClassData*MovementConstrains::GetClassData() const { return &_class_data_; }


void MovementConstrains::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MovementConstrains*>(&to_msg);
  auto& from = static_cast<const MovementConstrains&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ManufacturingScenarioRepository.MovementConstrains)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_minimum_distance_in_mm = from._internal_minimum_distance_in_mm();
  ::uint64_t raw_minimum_distance_in_mm;
  memcpy(&raw_minimum_distance_in_mm, &tmp_minimum_distance_in_mm, sizeof(tmp_minimum_distance_in_mm));
  if (raw_minimum_distance_in_mm != 0) {
    _this->_internal_set_minimum_distance_in_mm(from._internal_minimum_distance_in_mm());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_distance_to_container_in_mm = from._internal_distance_to_container_in_mm();
  ::uint64_t raw_distance_to_container_in_mm;
  memcpy(&raw_distance_to_container_in_mm, &tmp_distance_to_container_in_mm, sizeof(tmp_distance_to_container_in_mm));
  if (raw_distance_to_container_in_mm != 0) {
    _this->_internal_set_distance_to_container_in_mm(from._internal_distance_to_container_in_mm());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max_rot_z_angle_deg = from._internal_max_rot_z_angle_deg();
  ::uint64_t raw_max_rot_z_angle_deg;
  memcpy(&raw_max_rot_z_angle_deg, &tmp_max_rot_z_angle_deg, sizeof(tmp_max_rot_z_angle_deg));
  if (raw_max_rot_z_angle_deg != 0) {
    _this->_internal_set_max_rot_z_angle_deg(from._internal_max_rot_z_angle_deg());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_min_rot_z_angle_deg = from._internal_min_rot_z_angle_deg();
  ::uint64_t raw_min_rot_z_angle_deg;
  memcpy(&raw_min_rot_z_angle_deg, &tmp_min_rot_z_angle_deg, sizeof(tmp_min_rot_z_angle_deg));
  if (raw_min_rot_z_angle_deg != 0) {
    _this->_internal_set_min_rot_z_angle_deg(from._internal_min_rot_z_angle_deg());
  }
  if (from._internal_allowed_full_circle_rotation_steps_z() != 0) {
    _this->_internal_set_allowed_full_circle_rotation_steps_z(from._internal_allowed_full_circle_rotation_steps_z());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MovementConstrains::CopyFrom(const MovementConstrains& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ManufacturingScenarioRepository.MovementConstrains)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MovementConstrains::IsInitialized() const {
  return true;
}

void MovementConstrains::InternalSwap(MovementConstrains* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovementConstrains, _impl_.allowed_full_circle_rotation_steps_z_)
      + sizeof(MovementConstrains::_impl_.allowed_full_circle_rotation_steps_z_)
      - PROTOBUF_FIELD_OFFSET(MovementConstrains, _impl_.minimum_distance_in_mm_)>(
          reinterpret_cast<char*>(&_impl_.minimum_distance_in_mm_),
          reinterpret_cast<char*>(&other->_impl_.minimum_distance_in_mm_));
}

::google::protobuf::Metadata MovementConstrains::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ManufacturingScenario_2eproto_getter, &descriptor_table_ManufacturingScenario_2eproto_once,
      file_level_metadata_ManufacturingScenario_2eproto[2]);
}
// ===================================================================

class PartManufacturingOrder_ManufacturingPriority::_Internal {
 public:
};

PartManufacturingOrder_ManufacturingPriority::PartManufacturingOrder_ManufacturingPriority(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority)
}
PartManufacturingOrder_ManufacturingPriority::PartManufacturingOrder_ManufacturingPriority(const PartManufacturingOrder_ManufacturingPriority& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority)
}
inline void PartManufacturingOrder_ManufacturingPriority::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.price_priority_){0},
      decltype(_impl_.due_date_priority_){0},
      decltype(_impl_.quality_priority_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
PartManufacturingOrder_ManufacturingPriority::~PartManufacturingOrder_ManufacturingPriority() {
  // @@protoc_insertion_point(destructor:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PartManufacturingOrder_ManufacturingPriority::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void PartManufacturingOrder_ManufacturingPriority::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PartManufacturingOrder_ManufacturingPriority::Clear() {
// @@protoc_insertion_point(message_clear_start:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.price_priority_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.quality_priority_) -
      reinterpret_cast<char*>(&_impl_.price_priority_)) + sizeof(_impl_.quality_priority_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PartManufacturingOrder_ManufacturingPriority::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PartManufacturingOrder_ManufacturingPriority::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PartManufacturingOrder_ManufacturingPriority_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double price_priority = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(PartManufacturingOrder_ManufacturingPriority, _impl_.price_priority_)}},
    // double due_date_priority = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(PartManufacturingOrder_ManufacturingPriority, _impl_.due_date_priority_)}},
    // double quality_priority = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(PartManufacturingOrder_ManufacturingPriority, _impl_.quality_priority_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double price_priority = 1;
    {PROTOBUF_FIELD_OFFSET(PartManufacturingOrder_ManufacturingPriority, _impl_.price_priority_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double due_date_priority = 2;
    {PROTOBUF_FIELD_OFFSET(PartManufacturingOrder_ManufacturingPriority, _impl_.due_date_priority_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double quality_priority = 3;
    {PROTOBUF_FIELD_OFFSET(PartManufacturingOrder_ManufacturingPriority, _impl_.quality_priority_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PartManufacturingOrder_ManufacturingPriority::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double price_priority = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_price_priority = this->_internal_price_priority();
  ::uint64_t raw_price_priority;
  memcpy(&raw_price_priority, &tmp_price_priority, sizeof(tmp_price_priority));
  if (raw_price_priority != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_price_priority(), target);
  }

  // double due_date_priority = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_due_date_priority = this->_internal_due_date_priority();
  ::uint64_t raw_due_date_priority;
  memcpy(&raw_due_date_priority, &tmp_due_date_priority, sizeof(tmp_due_date_priority));
  if (raw_due_date_priority != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_due_date_priority(), target);
  }

  // double quality_priority = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_quality_priority = this->_internal_quality_priority();
  ::uint64_t raw_quality_priority;
  memcpy(&raw_quality_priority, &tmp_quality_priority, sizeof(tmp_quality_priority));
  if (raw_quality_priority != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_quality_priority(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority)
  return target;
}

::size_t PartManufacturingOrder_ManufacturingPriority::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double price_priority = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_price_priority = this->_internal_price_priority();
  ::uint64_t raw_price_priority;
  memcpy(&raw_price_priority, &tmp_price_priority, sizeof(tmp_price_priority));
  if (raw_price_priority != 0) {
    total_size += 9;
  }

  // double due_date_priority = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_due_date_priority = this->_internal_due_date_priority();
  ::uint64_t raw_due_date_priority;
  memcpy(&raw_due_date_priority, &tmp_due_date_priority, sizeof(tmp_due_date_priority));
  if (raw_due_date_priority != 0) {
    total_size += 9;
  }

  // double quality_priority = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_quality_priority = this->_internal_quality_priority();
  ::uint64_t raw_quality_priority;
  memcpy(&raw_quality_priority, &tmp_quality_priority, sizeof(tmp_quality_priority));
  if (raw_quality_priority != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PartManufacturingOrder_ManufacturingPriority::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PartManufacturingOrder_ManufacturingPriority::MergeImpl
};
const ::google::protobuf::Message::ClassData*PartManufacturingOrder_ManufacturingPriority::GetClassData() const { return &_class_data_; }


void PartManufacturingOrder_ManufacturingPriority::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PartManufacturingOrder_ManufacturingPriority*>(&to_msg);
  auto& from = static_cast<const PartManufacturingOrder_ManufacturingPriority&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_price_priority = from._internal_price_priority();
  ::uint64_t raw_price_priority;
  memcpy(&raw_price_priority, &tmp_price_priority, sizeof(tmp_price_priority));
  if (raw_price_priority != 0) {
    _this->_internal_set_price_priority(from._internal_price_priority());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_due_date_priority = from._internal_due_date_priority();
  ::uint64_t raw_due_date_priority;
  memcpy(&raw_due_date_priority, &tmp_due_date_priority, sizeof(tmp_due_date_priority));
  if (raw_due_date_priority != 0) {
    _this->_internal_set_due_date_priority(from._internal_due_date_priority());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_quality_priority = from._internal_quality_priority();
  ::uint64_t raw_quality_priority;
  memcpy(&raw_quality_priority, &tmp_quality_priority, sizeof(tmp_quality_priority));
  if (raw_quality_priority != 0) {
    _this->_internal_set_quality_priority(from._internal_quality_priority());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PartManufacturingOrder_ManufacturingPriority::CopyFrom(const PartManufacturingOrder_ManufacturingPriority& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PartManufacturingOrder_ManufacturingPriority::IsInitialized() const {
  return true;
}

void PartManufacturingOrder_ManufacturingPriority::InternalSwap(PartManufacturingOrder_ManufacturingPriority* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PartManufacturingOrder_ManufacturingPriority, _impl_.quality_priority_)
      + sizeof(PartManufacturingOrder_ManufacturingPriority::_impl_.quality_priority_)
      - PROTOBUF_FIELD_OFFSET(PartManufacturingOrder_ManufacturingPriority, _impl_.price_priority_)>(
          reinterpret_cast<char*>(&_impl_.price_priority_),
          reinterpret_cast<char*>(&other->_impl_.price_priority_));
}

::google::protobuf::Metadata PartManufacturingOrder_ManufacturingPriority::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ManufacturingScenario_2eproto_getter, &descriptor_table_ManufacturingScenario_2eproto_once,
      file_level_metadata_ManufacturingScenario_2eproto[3]);
}
// ===================================================================

class PartManufacturingOrder::_Internal {
 public:
  using HasBits = decltype(std::declval<PartManufacturingOrder>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_._has_bits_);
  static const ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority& priorities(const PartManufacturingOrder* msg);
  static void set_has_priorities(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority& PartManufacturingOrder::_Internal::priorities(const PartManufacturingOrder* msg) {
  return *msg->_impl_.priorities_;
}
PartManufacturingOrder::PartManufacturingOrder(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ManufacturingScenarioRepository.PartManufacturingOrder)
}
PartManufacturingOrder::PartManufacturingOrder(const PartManufacturingOrder& from) : ::google::protobuf::Message() {
  PartManufacturingOrder* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.pmo_id_){},
      decltype(_impl_.part_id_){},
      decltype(_impl_.material_){},
      decltype(_impl_.priorities_){nullptr},
      decltype(_impl_.part_num_triangles_){},
      decltype(_impl_.quantity_to_manufacture_){},
      decltype(_impl_.due_time_in_seconds_){},
      decltype(_impl_.order_creation_time_delay_in_seconds_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.pmo_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.pmo_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pmo_id().empty()) {
    _this->_impl_.pmo_id_.Set(from._internal_pmo_id(), _this->GetArenaForAllocation());
  }
  _impl_.part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.part_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    _this->_impl_.part_id_.Set(from._internal_part_id(), _this->GetArenaForAllocation());
  }
  _impl_.material_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.material_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_material().empty()) {
    _this->_impl_.material_.Set(from._internal_material(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.priorities_ = new ::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority(*from._impl_.priorities_);
  }
  ::memcpy(&_impl_.part_num_triangles_, &from._impl_.part_num_triangles_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.order_creation_time_delay_in_seconds_) -
    reinterpret_cast<char*>(&_impl_.part_num_triangles_)) + sizeof(_impl_.order_creation_time_delay_in_seconds_));

  // @@protoc_insertion_point(copy_constructor:ManufacturingScenarioRepository.PartManufacturingOrder)
}
inline void PartManufacturingOrder::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.pmo_id_){},
      decltype(_impl_.part_id_){},
      decltype(_impl_.material_){},
      decltype(_impl_.priorities_){nullptr},
      decltype(_impl_.part_num_triangles_){0},
      decltype(_impl_.quantity_to_manufacture_){0},
      decltype(_impl_.due_time_in_seconds_){::int64_t{0}},
      decltype(_impl_.order_creation_time_delay_in_seconds_){::int64_t{0}},
  };
  _impl_.pmo_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.pmo_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.part_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.material_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.material_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
PartManufacturingOrder::~PartManufacturingOrder() {
  // @@protoc_insertion_point(destructor:ManufacturingScenarioRepository.PartManufacturingOrder)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PartManufacturingOrder::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.pmo_id_.Destroy();
  _impl_.part_id_.Destroy();
  _impl_.material_.Destroy();
  if (this != internal_default_instance()) delete _impl_.priorities_;
}
void PartManufacturingOrder::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PartManufacturingOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:ManufacturingScenarioRepository.PartManufacturingOrder)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pmo_id_.ClearToEmpty();
  _impl_.part_id_.ClearToEmpty();
  _impl_.material_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.priorities_ != nullptr);
    _impl_.priorities_->Clear();
  }
  ::memset(&_impl_.part_num_triangles_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.order_creation_time_delay_in_seconds_) -
      reinterpret_cast<char*>(&_impl_.part_num_triangles_)) + sizeof(_impl_.order_creation_time_delay_in_seconds_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PartManufacturingOrder::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 92, 2> PartManufacturingOrder::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PartManufacturingOrder_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority priorities = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.priorities_)}},
    // string pmo_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.pmo_id_)}},
    // string part_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.part_id_)}},
    // int32 part_num_triangles = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PartManufacturingOrder, _impl_.part_num_triangles_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.part_num_triangles_)}},
    // int32 quantity_to_manufacture = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PartManufacturingOrder, _impl_.quantity_to_manufacture_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.quantity_to_manufacture_)}},
    // int64 due_time_in_seconds = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PartManufacturingOrder, _impl_.due_time_in_seconds_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.due_time_in_seconds_)}},
    // int64 order_creation_time_delay_in_seconds = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PartManufacturingOrder, _impl_.order_creation_time_delay_in_seconds_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.order_creation_time_delay_in_seconds_)}},
    // string material = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.material_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string pmo_id = 1;
    {PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.pmo_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string part_id = 2;
    {PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.part_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 part_num_triangles = 3;
    {PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.part_num_triangles_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 quantity_to_manufacture = 4;
    {PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.quantity_to_manufacture_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 due_time_in_seconds = 5;
    {PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.due_time_in_seconds_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 order_creation_time_delay_in_seconds = 6;
    {PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.order_creation_time_delay_in_seconds_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string material = 7;
    {PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.material_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority priorities = 8;
    {PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.priorities_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority>()},
  }}, {{
    "\66\6\7\0\0\0\0\10\0\0\0\0\0\0\0\0"
    "ManufacturingScenarioRepository.PartManufacturingOrder"
    "pmo_id"
    "part_id"
    "material"
  }},
};

::uint8_t* PartManufacturingOrder::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ManufacturingScenarioRepository.PartManufacturingOrder)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string pmo_id = 1;
  if (!this->_internal_pmo_id().empty()) {
    const std::string& _s = this->_internal_pmo_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ManufacturingScenarioRepository.PartManufacturingOrder.pmo_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string part_id = 2;
  if (!this->_internal_part_id().empty()) {
    const std::string& _s = this->_internal_part_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ManufacturingScenarioRepository.PartManufacturingOrder.part_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 part_num_triangles = 3;
  if (this->_internal_part_num_triangles() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_part_num_triangles(), target);
  }

  // int32 quantity_to_manufacture = 4;
  if (this->_internal_quantity_to_manufacture() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_quantity_to_manufacture(), target);
  }

  // int64 due_time_in_seconds = 5;
  if (this->_internal_due_time_in_seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_due_time_in_seconds(), target);
  }

  // int64 order_creation_time_delay_in_seconds = 6;
  if (this->_internal_order_creation_time_delay_in_seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<6>(
            stream, this->_internal_order_creation_time_delay_in_seconds(), target);
  }

  // string material = 7;
  if (!this->_internal_material().empty()) {
    const std::string& _s = this->_internal_material();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ManufacturingScenarioRepository.PartManufacturingOrder.material");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority priorities = 8;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::priorities(this),
        _Internal::priorities(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ManufacturingScenarioRepository.PartManufacturingOrder)
  return target;
}

::size_t PartManufacturingOrder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ManufacturingScenarioRepository.PartManufacturingOrder)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pmo_id = 1;
  if (!this->_internal_pmo_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_pmo_id());
  }

  // string part_id = 2;
  if (!this->_internal_part_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_part_id());
  }

  // string material = 7;
  if (!this->_internal_material().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_material());
  }

  // .ManufacturingScenarioRepository.PartManufacturingOrder.ManufacturingPriority priorities = 8;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.priorities_);
  }

  // int32 part_num_triangles = 3;
  if (this->_internal_part_num_triangles() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_part_num_triangles());
  }

  // int32 quantity_to_manufacture = 4;
  if (this->_internal_quantity_to_manufacture() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_quantity_to_manufacture());
  }

  // int64 due_time_in_seconds = 5;
  if (this->_internal_due_time_in_seconds() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_due_time_in_seconds());
  }

  // int64 order_creation_time_delay_in_seconds = 6;
  if (this->_internal_order_creation_time_delay_in_seconds() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_order_creation_time_delay_in_seconds());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PartManufacturingOrder::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PartManufacturingOrder::MergeImpl
};
const ::google::protobuf::Message::ClassData*PartManufacturingOrder::GetClassData() const { return &_class_data_; }


void PartManufacturingOrder::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PartManufacturingOrder*>(&to_msg);
  auto& from = static_cast<const PartManufacturingOrder&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ManufacturingScenarioRepository.PartManufacturingOrder)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pmo_id().empty()) {
    _this->_internal_set_pmo_id(from._internal_pmo_id());
  }
  if (!from._internal_part_id().empty()) {
    _this->_internal_set_part_id(from._internal_part_id());
  }
  if (!from._internal_material().empty()) {
    _this->_internal_set_material(from._internal_material());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_priorities()->::ManufacturingScenarioRepository::PartManufacturingOrder_ManufacturingPriority::MergeFrom(
        from._internal_priorities());
  }
  if (from._internal_part_num_triangles() != 0) {
    _this->_internal_set_part_num_triangles(from._internal_part_num_triangles());
  }
  if (from._internal_quantity_to_manufacture() != 0) {
    _this->_internal_set_quantity_to_manufacture(from._internal_quantity_to_manufacture());
  }
  if (from._internal_due_time_in_seconds() != 0) {
    _this->_internal_set_due_time_in_seconds(from._internal_due_time_in_seconds());
  }
  if (from._internal_order_creation_time_delay_in_seconds() != 0) {
    _this->_internal_set_order_creation_time_delay_in_seconds(from._internal_order_creation_time_delay_in_seconds());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PartManufacturingOrder::CopyFrom(const PartManufacturingOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ManufacturingScenarioRepository.PartManufacturingOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PartManufacturingOrder::IsInitialized() const {
  return true;
}

void PartManufacturingOrder::InternalSwap(PartManufacturingOrder* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pmo_id_, lhs_arena,
                                       &other->_impl_.pmo_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.part_id_, lhs_arena,
                                       &other->_impl_.part_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.material_, lhs_arena,
                                       &other->_impl_.material_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.order_creation_time_delay_in_seconds_)
      + sizeof(PartManufacturingOrder::_impl_.order_creation_time_delay_in_seconds_)
      - PROTOBUF_FIELD_OFFSET(PartManufacturingOrder, _impl_.priorities_)>(
          reinterpret_cast<char*>(&_impl_.priorities_),
          reinterpret_cast<char*>(&other->_impl_.priorities_));
}

::google::protobuf::Metadata PartManufacturingOrder::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ManufacturingScenario_2eproto_getter, &descriptor_table_ManufacturingScenario_2eproto_once,
      file_level_metadata_ManufacturingScenario_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ManufacturingScenarioRepository
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
