// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: build_processor_strategy.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_build_5fprocessor_5fstrategy_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_build_5fprocessor_5fstrategy_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "open_vector_format.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_build_5fprocessor_5fstrategy_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_build_5fprocessor_5fstrategy_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_build_5fprocessor_5fstrategy_2eproto;
namespace open_vector_format {
class BuildProcessorStrategy;
struct BuildProcessorStrategyDefaultTypeInternal;
extern BuildProcessorStrategyDefaultTypeInternal _BuildProcessorStrategy_default_instance_;
class BuildProcessorStrategy_ParameterSet;
struct BuildProcessorStrategy_ParameterSetDefaultTypeInternal;
extern BuildProcessorStrategy_ParameterSetDefaultTypeInternal _BuildProcessorStrategy_ParameterSet_default_instance_;
}  // namespace open_vector_format
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace open_vector_format {

// ===================================================================


// -------------------------------------------------------------------

class BuildProcessorStrategy_ParameterSet final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:open_vector_format.BuildProcessorStrategy.ParameterSet) */ {
 public:
  inline BuildProcessorStrategy_ParameterSet() : BuildProcessorStrategy_ParameterSet(nullptr) {}
  ~BuildProcessorStrategy_ParameterSet() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BuildProcessorStrategy_ParameterSet(::google::protobuf::internal::ConstantInitialized);

  BuildProcessorStrategy_ParameterSet(const BuildProcessorStrategy_ParameterSet& from);
  BuildProcessorStrategy_ParameterSet(BuildProcessorStrategy_ParameterSet&& from) noexcept
    : BuildProcessorStrategy_ParameterSet() {
    *this = ::std::move(from);
  }

  inline BuildProcessorStrategy_ParameterSet& operator=(const BuildProcessorStrategy_ParameterSet& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuildProcessorStrategy_ParameterSet& operator=(BuildProcessorStrategy_ParameterSet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuildProcessorStrategy_ParameterSet& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuildProcessorStrategy_ParameterSet* internal_default_instance() {
    return reinterpret_cast<const BuildProcessorStrategy_ParameterSet*>(
               &_BuildProcessorStrategy_ParameterSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BuildProcessorStrategy_ParameterSet& a, BuildProcessorStrategy_ParameterSet& b) {
    a.Swap(&b);
  }
  inline void Swap(BuildProcessorStrategy_ParameterSet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuildProcessorStrategy_ParameterSet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuildProcessorStrategy_ParameterSet* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BuildProcessorStrategy_ParameterSet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BuildProcessorStrategy_ParameterSet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BuildProcessorStrategy_ParameterSet& from) {
    BuildProcessorStrategy_ParameterSet::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BuildProcessorStrategy_ParameterSet* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "open_vector_format.BuildProcessorStrategy.ParameterSet";
  }
  protected:
  explicit BuildProcessorStrategy_ParameterSet(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLpbfMetaDataFieldNumber = 1,
    kProcessStrategyFieldNumber = 2,
    kMarkingParamsFieldNumber = 3,
  };
  // .open_vector_format.VectorBlock.LPBFMetadata lpbf_meta_data = 1;
  bool has_lpbf_meta_data() const;
  void clear_lpbf_meta_data() ;
  const ::open_vector_format::VectorBlock_LPBFMetadata& lpbf_meta_data() const;
  PROTOBUF_NODISCARD ::open_vector_format::VectorBlock_LPBFMetadata* release_lpbf_meta_data();
  ::open_vector_format::VectorBlock_LPBFMetadata* mutable_lpbf_meta_data();
  void set_allocated_lpbf_meta_data(::open_vector_format::VectorBlock_LPBFMetadata* value);
  void unsafe_arena_set_allocated_lpbf_meta_data(::open_vector_format::VectorBlock_LPBFMetadata* value);
  ::open_vector_format::VectorBlock_LPBFMetadata* unsafe_arena_release_lpbf_meta_data();

  private:
  const ::open_vector_format::VectorBlock_LPBFMetadata& _internal_lpbf_meta_data() const;
  ::open_vector_format::VectorBlock_LPBFMetadata* _internal_mutable_lpbf_meta_data();

  public:
  // .open_vector_format.Part.ProcessStrategy process_strategy = 2;
  bool has_process_strategy() const;
  void clear_process_strategy() ;
  const ::open_vector_format::Part_ProcessStrategy& process_strategy() const;
  PROTOBUF_NODISCARD ::open_vector_format::Part_ProcessStrategy* release_process_strategy();
  ::open_vector_format::Part_ProcessStrategy* mutable_process_strategy();
  void set_allocated_process_strategy(::open_vector_format::Part_ProcessStrategy* value);
  void unsafe_arena_set_allocated_process_strategy(::open_vector_format::Part_ProcessStrategy* value);
  ::open_vector_format::Part_ProcessStrategy* unsafe_arena_release_process_strategy();

  private:
  const ::open_vector_format::Part_ProcessStrategy& _internal_process_strategy() const;
  ::open_vector_format::Part_ProcessStrategy* _internal_mutable_process_strategy();

  public:
  // .open_vector_format.MarkingParams marking_params = 3;
  bool has_marking_params() const;
  void clear_marking_params() ;
  const ::open_vector_format::MarkingParams& marking_params() const;
  PROTOBUF_NODISCARD ::open_vector_format::MarkingParams* release_marking_params();
  ::open_vector_format::MarkingParams* mutable_marking_params();
  void set_allocated_marking_params(::open_vector_format::MarkingParams* value);
  void unsafe_arena_set_allocated_marking_params(::open_vector_format::MarkingParams* value);
  ::open_vector_format::MarkingParams* unsafe_arena_release_marking_params();

  private:
  const ::open_vector_format::MarkingParams& _internal_marking_params() const;
  ::open_vector_format::MarkingParams* _internal_mutable_marking_params();

  public:
  // @@protoc_insertion_point(class_scope:open_vector_format.BuildProcessorStrategy.ParameterSet)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 3, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::open_vector_format::VectorBlock_LPBFMetadata* lpbf_meta_data_;
    ::open_vector_format::Part_ProcessStrategy* process_strategy_;
    ::open_vector_format::MarkingParams* marking_params_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_build_5fprocessor_5fstrategy_2eproto;
};// -------------------------------------------------------------------

class BuildProcessorStrategy final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:open_vector_format.BuildProcessorStrategy) */ {
 public:
  inline BuildProcessorStrategy() : BuildProcessorStrategy(nullptr) {}
  ~BuildProcessorStrategy() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BuildProcessorStrategy(::google::protobuf::internal::ConstantInitialized);

  BuildProcessorStrategy(const BuildProcessorStrategy& from);
  BuildProcessorStrategy(BuildProcessorStrategy&& from) noexcept
    : BuildProcessorStrategy() {
    *this = ::std::move(from);
  }

  inline BuildProcessorStrategy& operator=(const BuildProcessorStrategy& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuildProcessorStrategy& operator=(BuildProcessorStrategy&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuildProcessorStrategy& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuildProcessorStrategy* internal_default_instance() {
    return reinterpret_cast<const BuildProcessorStrategy*>(
               &_BuildProcessorStrategy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BuildProcessorStrategy& a, BuildProcessorStrategy& b) {
    a.Swap(&b);
  }
  inline void Swap(BuildProcessorStrategy* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuildProcessorStrategy* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuildProcessorStrategy* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BuildProcessorStrategy>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BuildProcessorStrategy& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BuildProcessorStrategy& from) {
    BuildProcessorStrategy::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BuildProcessorStrategy* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "open_vector_format.BuildProcessorStrategy";
  }
  protected:
  explicit BuildProcessorStrategy(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef BuildProcessorStrategy_ParameterSet ParameterSet;

  // accessors -------------------------------------------------------

  enum : int {
    kParameterSetsFieldNumber = 5,
    kBuildProcessorStrategyIdFieldNumber = 1,
    kMaterialIdFieldNumber = 2,
    kNameFieldNumber = 3,
    kMaterialNameFieldNumber = 4,
  };
  // repeated .open_vector_format.BuildProcessorStrategy.ParameterSet parameter_sets = 5;
  int parameter_sets_size() const;
  private:
  int _internal_parameter_sets_size() const;

  public:
  void clear_parameter_sets() ;
  ::open_vector_format::BuildProcessorStrategy_ParameterSet* mutable_parameter_sets(int index);
  ::google::protobuf::RepeatedPtrField< ::open_vector_format::BuildProcessorStrategy_ParameterSet >*
      mutable_parameter_sets();
  private:
  const ::google::protobuf::RepeatedPtrField<::open_vector_format::BuildProcessorStrategy_ParameterSet>& _internal_parameter_sets() const;
  ::google::protobuf::RepeatedPtrField<::open_vector_format::BuildProcessorStrategy_ParameterSet>* _internal_mutable_parameter_sets();
  public:
  const ::open_vector_format::BuildProcessorStrategy_ParameterSet& parameter_sets(int index) const;
  ::open_vector_format::BuildProcessorStrategy_ParameterSet* add_parameter_sets();
  const ::google::protobuf::RepeatedPtrField< ::open_vector_format::BuildProcessorStrategy_ParameterSet >&
      parameter_sets() const;
  // string build_processor_strategy_id = 1;
  void clear_build_processor_strategy_id() ;
  const std::string& build_processor_strategy_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_build_processor_strategy_id(Arg_&& arg, Args_... args);
  std::string* mutable_build_processor_strategy_id();
  PROTOBUF_NODISCARD std::string* release_build_processor_strategy_id();
  void set_allocated_build_processor_strategy_id(std::string* ptr);

  private:
  const std::string& _internal_build_processor_strategy_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_build_processor_strategy_id(
      const std::string& value);
  std::string* _internal_mutable_build_processor_strategy_id();

  public:
  // string material_id = 2;
  void clear_material_id() ;
  const std::string& material_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_material_id(Arg_&& arg, Args_... args);
  std::string* mutable_material_id();
  PROTOBUF_NODISCARD std::string* release_material_id();
  void set_allocated_material_id(std::string* ptr);

  private:
  const std::string& _internal_material_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_material_id(
      const std::string& value);
  std::string* _internal_mutable_material_id();

  public:
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string material_name = 4;
  void clear_material_name() ;
  const std::string& material_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_material_name(Arg_&& arg, Args_... args);
  std::string* mutable_material_name();
  PROTOBUF_NODISCARD std::string* release_material_name();
  void set_allocated_material_name(std::string* ptr);

  private:
  const std::string& _internal_material_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_material_name(
      const std::string& value);
  std::string* _internal_mutable_material_name();

  public:
  // @@protoc_insertion_point(class_scope:open_vector_format.BuildProcessorStrategy)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 1, 105, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::open_vector_format::BuildProcessorStrategy_ParameterSet > parameter_sets_;
    ::google::protobuf::internal::ArenaStringPtr build_processor_strategy_id_;
    ::google::protobuf::internal::ArenaStringPtr material_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr material_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_build_5fprocessor_5fstrategy_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BuildProcessorStrategy_ParameterSet

// .open_vector_format.VectorBlock.LPBFMetadata lpbf_meta_data = 1;
inline bool BuildProcessorStrategy_ParameterSet::has_lpbf_meta_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lpbf_meta_data_ != nullptr);
  return value;
}
inline const ::open_vector_format::VectorBlock_LPBFMetadata& BuildProcessorStrategy_ParameterSet::_internal_lpbf_meta_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::open_vector_format::VectorBlock_LPBFMetadata* p = _impl_.lpbf_meta_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::open_vector_format::VectorBlock_LPBFMetadata&>(::open_vector_format::_VectorBlock_LPBFMetadata_default_instance_);
}
inline const ::open_vector_format::VectorBlock_LPBFMetadata& BuildProcessorStrategy_ParameterSet::lpbf_meta_data() const {
  // @@protoc_insertion_point(field_get:open_vector_format.BuildProcessorStrategy.ParameterSet.lpbf_meta_data)
  return _internal_lpbf_meta_data();
}
inline void BuildProcessorStrategy_ParameterSet::unsafe_arena_set_allocated_lpbf_meta_data(::open_vector_format::VectorBlock_LPBFMetadata* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lpbf_meta_data_);
  }
  _impl_.lpbf_meta_data_ = reinterpret_cast<::open_vector_format::VectorBlock_LPBFMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:open_vector_format.BuildProcessorStrategy.ParameterSet.lpbf_meta_data)
}
inline ::open_vector_format::VectorBlock_LPBFMetadata* BuildProcessorStrategy_ParameterSet::release_lpbf_meta_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::open_vector_format::VectorBlock_LPBFMetadata* released = _impl_.lpbf_meta_data_;
  _impl_.lpbf_meta_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::open_vector_format::VectorBlock_LPBFMetadata* BuildProcessorStrategy_ParameterSet::unsafe_arena_release_lpbf_meta_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:open_vector_format.BuildProcessorStrategy.ParameterSet.lpbf_meta_data)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::open_vector_format::VectorBlock_LPBFMetadata* temp = _impl_.lpbf_meta_data_;
  _impl_.lpbf_meta_data_ = nullptr;
  return temp;
}
inline ::open_vector_format::VectorBlock_LPBFMetadata* BuildProcessorStrategy_ParameterSet::_internal_mutable_lpbf_meta_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.lpbf_meta_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::open_vector_format::VectorBlock_LPBFMetadata>(GetArenaForAllocation());
    _impl_.lpbf_meta_data_ = reinterpret_cast<::open_vector_format::VectorBlock_LPBFMetadata*>(p);
  }
  return _impl_.lpbf_meta_data_;
}
inline ::open_vector_format::VectorBlock_LPBFMetadata* BuildProcessorStrategy_ParameterSet::mutable_lpbf_meta_data() {
  ::open_vector_format::VectorBlock_LPBFMetadata* _msg = _internal_mutable_lpbf_meta_data();
  // @@protoc_insertion_point(field_mutable:open_vector_format.BuildProcessorStrategy.ParameterSet.lpbf_meta_data)
  return _msg;
}
inline void BuildProcessorStrategy_ParameterSet::set_allocated_lpbf_meta_data(::open_vector_format::VectorBlock_LPBFMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lpbf_meta_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.lpbf_meta_data_ = reinterpret_cast<::open_vector_format::VectorBlock_LPBFMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:open_vector_format.BuildProcessorStrategy.ParameterSet.lpbf_meta_data)
}

// .open_vector_format.Part.ProcessStrategy process_strategy = 2;
inline bool BuildProcessorStrategy_ParameterSet::has_process_strategy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.process_strategy_ != nullptr);
  return value;
}
inline const ::open_vector_format::Part_ProcessStrategy& BuildProcessorStrategy_ParameterSet::_internal_process_strategy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::open_vector_format::Part_ProcessStrategy* p = _impl_.process_strategy_;
  return p != nullptr ? *p : reinterpret_cast<const ::open_vector_format::Part_ProcessStrategy&>(::open_vector_format::_Part_ProcessStrategy_default_instance_);
}
inline const ::open_vector_format::Part_ProcessStrategy& BuildProcessorStrategy_ParameterSet::process_strategy() const {
  // @@protoc_insertion_point(field_get:open_vector_format.BuildProcessorStrategy.ParameterSet.process_strategy)
  return _internal_process_strategy();
}
inline void BuildProcessorStrategy_ParameterSet::unsafe_arena_set_allocated_process_strategy(::open_vector_format::Part_ProcessStrategy* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.process_strategy_);
  }
  _impl_.process_strategy_ = reinterpret_cast<::open_vector_format::Part_ProcessStrategy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:open_vector_format.BuildProcessorStrategy.ParameterSet.process_strategy)
}
inline ::open_vector_format::Part_ProcessStrategy* BuildProcessorStrategy_ParameterSet::release_process_strategy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::open_vector_format::Part_ProcessStrategy* released = _impl_.process_strategy_;
  _impl_.process_strategy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::open_vector_format::Part_ProcessStrategy* BuildProcessorStrategy_ParameterSet::unsafe_arena_release_process_strategy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:open_vector_format.BuildProcessorStrategy.ParameterSet.process_strategy)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::open_vector_format::Part_ProcessStrategy* temp = _impl_.process_strategy_;
  _impl_.process_strategy_ = nullptr;
  return temp;
}
inline ::open_vector_format::Part_ProcessStrategy* BuildProcessorStrategy_ParameterSet::_internal_mutable_process_strategy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.process_strategy_ == nullptr) {
    auto* p = CreateMaybeMessage<::open_vector_format::Part_ProcessStrategy>(GetArenaForAllocation());
    _impl_.process_strategy_ = reinterpret_cast<::open_vector_format::Part_ProcessStrategy*>(p);
  }
  return _impl_.process_strategy_;
}
inline ::open_vector_format::Part_ProcessStrategy* BuildProcessorStrategy_ParameterSet::mutable_process_strategy() {
  ::open_vector_format::Part_ProcessStrategy* _msg = _internal_mutable_process_strategy();
  // @@protoc_insertion_point(field_mutable:open_vector_format.BuildProcessorStrategy.ParameterSet.process_strategy)
  return _msg;
}
inline void BuildProcessorStrategy_ParameterSet::set_allocated_process_strategy(::open_vector_format::Part_ProcessStrategy* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.process_strategy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.process_strategy_ = reinterpret_cast<::open_vector_format::Part_ProcessStrategy*>(value);
  // @@protoc_insertion_point(field_set_allocated:open_vector_format.BuildProcessorStrategy.ParameterSet.process_strategy)
}

// .open_vector_format.MarkingParams marking_params = 3;
inline bool BuildProcessorStrategy_ParameterSet::has_marking_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.marking_params_ != nullptr);
  return value;
}
inline const ::open_vector_format::MarkingParams& BuildProcessorStrategy_ParameterSet::_internal_marking_params() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::open_vector_format::MarkingParams* p = _impl_.marking_params_;
  return p != nullptr ? *p : reinterpret_cast<const ::open_vector_format::MarkingParams&>(::open_vector_format::_MarkingParams_default_instance_);
}
inline const ::open_vector_format::MarkingParams& BuildProcessorStrategy_ParameterSet::marking_params() const {
  // @@protoc_insertion_point(field_get:open_vector_format.BuildProcessorStrategy.ParameterSet.marking_params)
  return _internal_marking_params();
}
inline void BuildProcessorStrategy_ParameterSet::unsafe_arena_set_allocated_marking_params(::open_vector_format::MarkingParams* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.marking_params_);
  }
  _impl_.marking_params_ = reinterpret_cast<::open_vector_format::MarkingParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:open_vector_format.BuildProcessorStrategy.ParameterSet.marking_params)
}
inline ::open_vector_format::MarkingParams* BuildProcessorStrategy_ParameterSet::release_marking_params() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::open_vector_format::MarkingParams* released = _impl_.marking_params_;
  _impl_.marking_params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::open_vector_format::MarkingParams* BuildProcessorStrategy_ParameterSet::unsafe_arena_release_marking_params() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:open_vector_format.BuildProcessorStrategy.ParameterSet.marking_params)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::open_vector_format::MarkingParams* temp = _impl_.marking_params_;
  _impl_.marking_params_ = nullptr;
  return temp;
}
inline ::open_vector_format::MarkingParams* BuildProcessorStrategy_ParameterSet::_internal_mutable_marking_params() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.marking_params_ == nullptr) {
    auto* p = CreateMaybeMessage<::open_vector_format::MarkingParams>(GetArenaForAllocation());
    _impl_.marking_params_ = reinterpret_cast<::open_vector_format::MarkingParams*>(p);
  }
  return _impl_.marking_params_;
}
inline ::open_vector_format::MarkingParams* BuildProcessorStrategy_ParameterSet::mutable_marking_params() {
  ::open_vector_format::MarkingParams* _msg = _internal_mutable_marking_params();
  // @@protoc_insertion_point(field_mutable:open_vector_format.BuildProcessorStrategy.ParameterSet.marking_params)
  return _msg;
}
inline void BuildProcessorStrategy_ParameterSet::set_allocated_marking_params(::open_vector_format::MarkingParams* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.marking_params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.marking_params_ = reinterpret_cast<::open_vector_format::MarkingParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:open_vector_format.BuildProcessorStrategy.ParameterSet.marking_params)
}

// -------------------------------------------------------------------

// BuildProcessorStrategy

// string build_processor_strategy_id = 1;
inline void BuildProcessorStrategy::clear_build_processor_strategy_id() {
  _impl_.build_processor_strategy_id_.ClearToEmpty();
}
inline const std::string& BuildProcessorStrategy::build_processor_strategy_id() const {
  // @@protoc_insertion_point(field_get:open_vector_format.BuildProcessorStrategy.build_processor_strategy_id)
  return _internal_build_processor_strategy_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BuildProcessorStrategy::set_build_processor_strategy_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.build_processor_strategy_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:open_vector_format.BuildProcessorStrategy.build_processor_strategy_id)
}
inline std::string* BuildProcessorStrategy::mutable_build_processor_strategy_id() {
  std::string* _s = _internal_mutable_build_processor_strategy_id();
  // @@protoc_insertion_point(field_mutable:open_vector_format.BuildProcessorStrategy.build_processor_strategy_id)
  return _s;
}
inline const std::string& BuildProcessorStrategy::_internal_build_processor_strategy_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.build_processor_strategy_id_.Get();
}
inline void BuildProcessorStrategy::_internal_set_build_processor_strategy_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.build_processor_strategy_id_.Set(value, GetArenaForAllocation());
}
inline std::string* BuildProcessorStrategy::_internal_mutable_build_processor_strategy_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.build_processor_strategy_id_.Mutable( GetArenaForAllocation());
}
inline std::string* BuildProcessorStrategy::release_build_processor_strategy_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:open_vector_format.BuildProcessorStrategy.build_processor_strategy_id)
  return _impl_.build_processor_strategy_id_.Release();
}
inline void BuildProcessorStrategy::set_allocated_build_processor_strategy_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.build_processor_strategy_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.build_processor_strategy_id_.IsDefault()) {
          _impl_.build_processor_strategy_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:open_vector_format.BuildProcessorStrategy.build_processor_strategy_id)
}

// string material_id = 2;
inline void BuildProcessorStrategy::clear_material_id() {
  _impl_.material_id_.ClearToEmpty();
}
inline const std::string& BuildProcessorStrategy::material_id() const {
  // @@protoc_insertion_point(field_get:open_vector_format.BuildProcessorStrategy.material_id)
  return _internal_material_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BuildProcessorStrategy::set_material_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.material_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:open_vector_format.BuildProcessorStrategy.material_id)
}
inline std::string* BuildProcessorStrategy::mutable_material_id() {
  std::string* _s = _internal_mutable_material_id();
  // @@protoc_insertion_point(field_mutable:open_vector_format.BuildProcessorStrategy.material_id)
  return _s;
}
inline const std::string& BuildProcessorStrategy::_internal_material_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.material_id_.Get();
}
inline void BuildProcessorStrategy::_internal_set_material_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.material_id_.Set(value, GetArenaForAllocation());
}
inline std::string* BuildProcessorStrategy::_internal_mutable_material_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.material_id_.Mutable( GetArenaForAllocation());
}
inline std::string* BuildProcessorStrategy::release_material_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:open_vector_format.BuildProcessorStrategy.material_id)
  return _impl_.material_id_.Release();
}
inline void BuildProcessorStrategy::set_allocated_material_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.material_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.material_id_.IsDefault()) {
          _impl_.material_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:open_vector_format.BuildProcessorStrategy.material_id)
}

// string name = 3;
inline void BuildProcessorStrategy::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& BuildProcessorStrategy::name() const {
  // @@protoc_insertion_point(field_get:open_vector_format.BuildProcessorStrategy.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BuildProcessorStrategy::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:open_vector_format.BuildProcessorStrategy.name)
}
inline std::string* BuildProcessorStrategy::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:open_vector_format.BuildProcessorStrategy.name)
  return _s;
}
inline const std::string& BuildProcessorStrategy::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void BuildProcessorStrategy::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* BuildProcessorStrategy::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* BuildProcessorStrategy::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:open_vector_format.BuildProcessorStrategy.name)
  return _impl_.name_.Release();
}
inline void BuildProcessorStrategy::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:open_vector_format.BuildProcessorStrategy.name)
}

// string material_name = 4;
inline void BuildProcessorStrategy::clear_material_name() {
  _impl_.material_name_.ClearToEmpty();
}
inline const std::string& BuildProcessorStrategy::material_name() const {
  // @@protoc_insertion_point(field_get:open_vector_format.BuildProcessorStrategy.material_name)
  return _internal_material_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BuildProcessorStrategy::set_material_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.material_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:open_vector_format.BuildProcessorStrategy.material_name)
}
inline std::string* BuildProcessorStrategy::mutable_material_name() {
  std::string* _s = _internal_mutable_material_name();
  // @@protoc_insertion_point(field_mutable:open_vector_format.BuildProcessorStrategy.material_name)
  return _s;
}
inline const std::string& BuildProcessorStrategy::_internal_material_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.material_name_.Get();
}
inline void BuildProcessorStrategy::_internal_set_material_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.material_name_.Set(value, GetArenaForAllocation());
}
inline std::string* BuildProcessorStrategy::_internal_mutable_material_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.material_name_.Mutable( GetArenaForAllocation());
}
inline std::string* BuildProcessorStrategy::release_material_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:open_vector_format.BuildProcessorStrategy.material_name)
  return _impl_.material_name_.Release();
}
inline void BuildProcessorStrategy::set_allocated_material_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.material_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.material_name_.IsDefault()) {
          _impl_.material_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:open_vector_format.BuildProcessorStrategy.material_name)
}

// repeated .open_vector_format.BuildProcessorStrategy.ParameterSet parameter_sets = 5;
inline int BuildProcessorStrategy::_internal_parameter_sets_size() const {
  return _internal_parameter_sets().size();
}
inline int BuildProcessorStrategy::parameter_sets_size() const {
  return _internal_parameter_sets_size();
}
inline void BuildProcessorStrategy::clear_parameter_sets() {
  _internal_mutable_parameter_sets()->Clear();
}
inline ::open_vector_format::BuildProcessorStrategy_ParameterSet* BuildProcessorStrategy::mutable_parameter_sets(int index) {
  // @@protoc_insertion_point(field_mutable:open_vector_format.BuildProcessorStrategy.parameter_sets)
  return _internal_mutable_parameter_sets()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::open_vector_format::BuildProcessorStrategy_ParameterSet >*
BuildProcessorStrategy::mutable_parameter_sets() {
  // @@protoc_insertion_point(field_mutable_list:open_vector_format.BuildProcessorStrategy.parameter_sets)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_parameter_sets();
}
inline const ::open_vector_format::BuildProcessorStrategy_ParameterSet& BuildProcessorStrategy::parameter_sets(int index) const {
  // @@protoc_insertion_point(field_get:open_vector_format.BuildProcessorStrategy.parameter_sets)
    return _internal_parameter_sets().Get(index);
}
inline ::open_vector_format::BuildProcessorStrategy_ParameterSet* BuildProcessorStrategy::add_parameter_sets() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::open_vector_format::BuildProcessorStrategy_ParameterSet* _add = _internal_mutable_parameter_sets()->Add();
  // @@protoc_insertion_point(field_add:open_vector_format.BuildProcessorStrategy.parameter_sets)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::open_vector_format::BuildProcessorStrategy_ParameterSet >&
BuildProcessorStrategy::parameter_sets() const {
  // @@protoc_insertion_point(field_list:open_vector_format.BuildProcessorStrategy.parameter_sets)
  return _internal_parameter_sets();
}
inline const ::google::protobuf::RepeatedPtrField<::open_vector_format::BuildProcessorStrategy_ParameterSet>&
BuildProcessorStrategy::_internal_parameter_sets() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.parameter_sets_;
}
inline ::google::protobuf::RepeatedPtrField<::open_vector_format::BuildProcessorStrategy_ParameterSet>*
BuildProcessorStrategy::_internal_mutable_parameter_sets() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.parameter_sets_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace open_vector_format


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_build_5fprocessor_5fstrategy_2eproto_2epb_2eh
